<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>liaohuqiu.net</title>
    <link>http://liaohuqiu.net/</link>
    <atom:link href="http://liaohuqiu.net/rss.xml" rel="self" type="application/rss+xml" />
    <description>Yet Another Summer Rain</description>
    <language>en-us</language>
    <pubDate>Wed, 17 May 2017 23:02:46 +0000</pubDate>
    <lastBuildDate>Wed, 17 May 2017 23:02:46 +0000</lastBuildDate>

    
    <item>
      <title>Android Studio 3 Preview 发布</title>
      <link>http://liaohuqiu.net/cn/posts/android-studio-3-preview/</link>
      <pubDate>Wed, 17 May 2017 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/android-studio-3-preview</guid>
      <description>&lt;p&gt;Google I/O 2017 的第一天，Android Studio 3.0 Preview 发布，这个版本几个很大变化：&lt;/p&gt;

&lt;h4&gt;支持 Kotlin&lt;/h4&gt;

&lt;p&gt;Android Studio 3.0 全面支持 Kotlin。Kotlin 也正式纳入了 Android 的开发体系。在 《What&amp;#39;s New in Android》的 Keynote 中，演示了 70 ~ 80 行的 Java 代码用一行 Kotlin 代码代替：This is the first line of the code also the last line.&lt;/p&gt;

&lt;p&gt;Kotlin 有很多令人激动人心的特性。还没上手的同学，抓紧补课吧。&lt;/p&gt;

&lt;h4&gt;在 Xml 中支持字体&lt;/h4&gt;

&lt;p&gt;Target API 是 Android O 时，可直接在 Xml 中支持字体，等了很多年了对吧。如果有  Google Play Services 还同时还支持远程字体，即先下载再使用。&lt;/p&gt;

&lt;h4&gt;支持 Instant App&lt;/h4&gt;

&lt;p&gt;Instant App 面向所有人开放了，&lt;a href=&quot;https://g.co/instantapps&quot;&gt;https://g.co/instantapps&lt;/a&gt; ，在新建工程中，直接有 Instant App 工程&lt;/p&gt;

&lt;h4&gt;其他增强&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Java 8 特性支持，可怜的 Jack。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Layout Editor，拖拽更容易，更好用: &lt;a href=&quot;https://developer.android.com/studio/write/layout-editor.html&quot;&gt;https://developer.android.com/studio/write/layout-editor.html&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;支持 Android Things: &lt;a href=&quot;https://developer.android.com/things/index.html&quot;&gt;https://developer.android.com/things/index.html&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;更新到 IntelliJ 2017.1， IntelliJ 或成最大赢家。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;构建速度更快：反正他们每次都这么说。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;发布 Google 自己的 Maven Repository，脱离了 Android SDK Manager，使得 CI 更容易。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;模拟器支持 OpenGL ES 3.0&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可在模拟器中直接提交 Bug。冯老师可能会喜欢这个。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;支持给模拟器设置 HTTP 代理&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对任意 APK 的调试，分析和 Profile 支持，只要他们是 debuggable，如果你的 APK 含有 C++ 代码，build 环境配置复杂，这个会很有用。特定环境 build 好，然后在 Android Studio 中分析。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;APK Analyzer：对，这个改进了。可分析 Instant App，AAR, 可查看类和方法的 dex bytecode 了。同时，改进了 Layout Inspector。同时，有了 Device File Explorer：轻松查看设备上的文件。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;全新的 Android Profiler，包含：Network Profiler / Memory Profiler / CPU Profiler，做优化更轻松了。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;英文原文链接： &lt;a href=&quot;https://android-developers.googleblog.com/2017/05/android-studio-3-0-canary1.html&quot;&gt;https://android-developers.googleblog.com/2017/05/android-studio-3-0-canary1.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>感谢两位远到而来同学</title>
      <link>http://liaohuqiu.net/cn/posts/tow-men/</link>
      <pubDate>Tue, 11 Apr 2017 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/tow-men</guid>
      <description>&lt;p&gt;2015 年 11 月，华州和展鑫同学从广州到北京，到我团队实习。两个从没到过北方的小伙子，到了北京，租了房子，只因对我的信任，感谢他们。&lt;/p&gt;

&lt;p&gt;昨天，他们走了，回学校去了，昨天看他们空着的工位，心里有些失落。&lt;/p&gt;

&lt;p&gt;非常感谢他们过去五个多月来卓越的工作：从后端到前端再到自动化测试，从运维到开发再到数据平台；从 Python，PHP 到 Java / Android，到 Shell，再到前端；从 Vim，Docker，再到 Redash，Redshift，ELK。&lt;/p&gt;

&lt;p&gt;这些工具的使用，他们的学习和掌握的速度，让人惊讶！自身快速成长的同时，也给团队带来了巨大的价值。&lt;/p&gt;

&lt;p&gt;可惜，遗憾，不舍，时间只有区区五个月。不过和之前三个月相比，情义更长，也算好事一件。&lt;/p&gt;

&lt;p&gt;翻看手机，既无他们太多影像，找到几张既也是无意留之。&lt;/p&gt;

&lt;p&gt;感谢你们，你们是早上八九点钟的太阳，愿你们的未来像清晨的山野和湖泊那样清澈明亮。同时也愿以后遇到的同学时间会更长，不必来去匆匆。&lt;/p&gt;

&lt;p&gt;为记。2017 年 4 月 13 号，北京。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;img src=&quot;//img1.liaohuqiu.com/large/599e230bly1fekokxqy0dj22c0340e82.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;在北京 GDG DevFest 2015 上，华州和展鑫 &lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//img1.liaohuqiu.com/large/599e230bly1fekokv2xsyj23402c01ky.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;在北京 GDG DevFest 2015 上，华州做了一个闪电分享&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//img1.liaohuqiu.com/large/599e230bly1fekol04nq8j22c0340u0x.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;我们每天很早就开始工作，这是在 2016 年快要结束的前几天的某个早上，他们一个在刷 Leetcode，一个在练 typing speed。&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//img1.liaohuqiu.com/large/599e230bly1fekosm595oj23402c0hdt.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ssh-agent 转发</title>
      <link>http://liaohuqiu.net/cn/posts/ssh-agent-forward/</link>
      <pubDate>Tue, 29 Nov 2016 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/ssh-agent-forward</guid>
      <description>&lt;ol&gt;
&lt;li&gt;&lt;p&gt;你需要在多个服务器之间工作，通过 ssh key，你可以从本机登录这几个服务器。你登录到一个其中一个服务器 A，你想从 A 到另一个服务器 B，但服务器 B 上没有 A 的公钥，无法直接从 A 登录到 B。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;你本机使用 ssh key 访问 GitHub 或者其他基于 ssh 认证的服务器，比如 Gitlab。你在本地提交代码，你可以登录服务器，你想在服务器上更新代码。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这样的场景，可以使用 ssh-agent。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;ssh 登录时，加入 &lt;code&gt;-A&lt;/code&gt; 选项，开启转发。你可以通过设置 &lt;code&gt;alias ssh=&amp;#39;ssh -A&amp;#39;&lt;/code&gt; 来实现；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;启动 ssh-agent，并通过 ssh-add 加入要转发的 key。通过 &lt;code&gt;ssh-add -l&lt;/code&gt; 查看有哪些 key 已经加入。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;key 的数量不能过多，ssh 会依次尝试使用这里的每一个 key，如果 key 数量过多，会达到最大尝试次数，认证失败。&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;你可直接使用将以下的脚本，加入到你的 ~/.bash_profile 中，在 &lt;code&gt;add_ssh_keys&lt;/code&gt; 这个函数中，加入你要转发的 key，重新载入 ~/.bash_profile 即可。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; add_ssh_keys&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# Will load ~/.ssh/id_rsa&lt;/span&gt;
    ssh-add
    &lt;span class=&quot;c&quot;&gt;# You also can add the other keys here&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# For example, add your GitHub key: ssh-add ~/.ssh/github&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;SSH_ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;$HOME/.ssh/environment&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; _start_agent &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Initialising new SSH agent...&amp;quot;&lt;/span&gt;
    /usr/bin/ssh-agent &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; sed &lt;span class=&quot;s1&quot;&gt;&amp;#39;s/^echo/#echo/&amp;#39;&lt;/span&gt; &amp;gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;${SSH_ENV}&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;succeeded
    chmod &lt;span class=&quot;m&quot;&gt;600&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;${SSH_ENV}&amp;quot;&lt;/span&gt;
    . &lt;span class=&quot;s2&quot;&gt;&amp;quot;${SSH_ENV}&amp;quot;&lt;/span&gt; &amp;gt; /dev/null
    add_ssh_keys
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; start_ssh_agent&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# Source SSH settings, if applicable&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; -f &lt;span class=&quot;s2&quot;&gt;&amp;quot;${SSH_ENV}&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
        . &lt;span class=&quot;s2&quot;&gt;&amp;quot;${SSH_ENV}&amp;quot;&lt;/span&gt; &amp;gt; /dev/null
        &lt;span class=&quot;c&quot;&gt;#ps ${SSH_AGENT_PID} doesn&amp;#39;t work under cywgin&lt;/span&gt;
        ps -ef &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; grep &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;SSH_AGENT_PID&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; grep ssh-agent&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&amp;gt; /dev/null &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            _start_agent&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
        _start_agent&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; set_alias&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;ls -l&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ssh&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;ssh -A&amp;#39;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

start_ssh_agent
set_alias
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;ssh-agent 有风险，使用使用谨慎。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://heipei.github.io/2015/02/26/SSH-Agent-Forwarding-considered-harmful/&quot;&gt;https://heipei.github.io/2015/02/26/SSH-Agent-Forwarding-considered-harmful/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://rabexc.org/posts/pitfalls-of-ssh-agents&quot;&gt;http://rabexc.org/posts/pitfalls-of-ssh-agents&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>良禽择木而栖</title>
      <link>http://liaohuqiu.net/cn/posts/a-wise-man-knows-when-to-jump-the-ship/</link>
      <pubDate>Tue, 27 Sep 2016 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/a-wise-man-knows-when-to-jump-the-ship</guid>
      <description>&lt;p&gt;知乎上『&lt;a href=&quot;https://www.zhihu.com/question/46294596&quot;&gt;异乡好居&lt;/a&gt;』闹得沸沸扬扬。&lt;/p&gt;

&lt;p&gt;这是一个公司对工程师（或可以说对任何它们的员工）极其不尊重的闹剧：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;对员工没基本的尊重&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;工作随便调动，强制让次日去北京工作，不去算旷工&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;随便制定罚款理由&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;随便开除员工&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;删除工程师电脑上代码，然后诬告员工删除公司价值几百万的代码&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;...&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这样的闹剧或说是悲剧，一直都在上演。看过很多优秀的工程师朋友遭遇的各种不开心的不公正待遇，心中总有『安得广厦千万间，大庇天下寒士倶欢颜』的无奈和悲凉。&lt;/p&gt;

&lt;p&gt;良禽择木而栖，优秀的人才应该去好的地方。从目前这个事情来看，好的公司应该：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;老板 / 公司要有格局&lt;/p&gt;

&lt;p&gt;公司报表作假。这样的公司，你要小心，因为他们还可能会跟你说是因为生存压力。&lt;/p&gt;

&lt;p&gt;招人只看价格。认为可以通过堆人的方式完成规模扩张。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;抠门和节俭的区别&lt;/p&gt;

&lt;p&gt;人走关灯是节俭，连个大显示器都不给配，这个是格局不行。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;灵活的人事制度，尊重人才，尤其是技术人才&lt;/p&gt;

&lt;p&gt;前一天加班到 11 点，第二天身体不舒服早走两个小时，要请假半天。这样的公司，你可别去。&lt;/p&gt;

&lt;p&gt;用代码量来衡量工程师的工作。&lt;/p&gt;

&lt;p&gt;认为工程师的工作可以被随便替代。不明白新员工融入的时间成本，不了解让技术团队动作的机制。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;管理靠的是激励，不是威胁&lt;/p&gt;

&lt;p&gt;人才的高产出靠的是激励。尤其是优秀的人才，因为他们都是高度自觉的。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;试用期 8 折？试用期 6 个月？&lt;/p&gt;

&lt;p&gt;这样做合法，一点问题都没有。但对于优秀的人才，3 个月，100% 待遇，是不是更得体一些呢？&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;当然，团队管理，激励，薪酬福利，工作流程，团队文化，成长空间等等其他的无数的方面，都是考量的因素。作为工程师，最好去一家技术驱动、技术大佬主导的公司。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MDCC 2016 PPT 下载及简单点评</title>
      <link>http://liaohuqiu.net/cn/posts/mdcc-2016-brief-summary/</link>
      <pubDate>Mon, 26 Sep 2016 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/mdcc-2016-brief-summary</guid>
      <description>&lt;p&gt;周六 MDCC 2016 结束，周日我整理了可以拿到的最新的 Slides，昨晚放到了 GitHub 上，MDCC2016 这个组织下了。iOS 会场的也会在这个组织下。&lt;/p&gt;

&lt;p&gt;我把这些 Slides 又看了一遍，现在对这些 Slides 做一个简单的介绍，方便大家观看学习。&lt;/p&gt;

&lt;p&gt;现在有的 Slides 有：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;滴滴国际化 Android 端演进&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;回归初心，从容器化到组件化&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;云信 IM 推送保障及网络优化实践&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;微信Tinker热补丁实践演进之路&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fresco, loading image fast&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如何开发一款优雅的SDK&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Android 应用性能优化经验分享&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;另外的两个场次，到现在我还没能拿到『可公开版本』的 Slides。而上面的 Slides 中，都是历经数次修改的。我想，这也就是大家会有截然不同的反馈的原因吧。&lt;/p&gt;

&lt;h4&gt;Slides 简单点评&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;滴滴国际化 Android 端演进，两个大点&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;地图选型&lt;/li&gt;
&lt;li&gt;漫游网络&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;特别值得参考的是『地图选型』时的调研工作。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;回归初心，从容器化到组件化&lt;/p&gt;

&lt;p&gt;可能两年之前，我是完全听不懂『冯老师』这个分享的。最近，深得『冯老师』指点，用 Slide 中他谈到的这些，把一个复杂的项目做了模块化，最明显的效果是，编译时间从以前的 2 分多钟到现在的数秒。&lt;/p&gt;

&lt;p&gt;附上一张『马琳』的图。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//img1.liaohuqiu.com/large/599e230bjw1f84sva9z4zj20qo0zkq7s.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;云信 IM 推送保障及网络优化实践&lt;/p&gt;

&lt;p&gt;减少内存占用，电量优化，推送，技术的克制，还有不少优化的小点。内容很多。有视频就好了。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;微信 Tinker 热补丁实践演进之路 &lt;/p&gt;

&lt;p&gt;Tencent 组织下第一个开源项目，有幸和大家见证。绍文想前天晚上开源的，说怕会场的 WiFi 不稳定。幸好说服他了。&lt;/p&gt;

&lt;p&gt;官方的视频还没出来，这个是 Jacks 帮忙录制的，在 YouTube 上： &lt;a href=&quot;https://www.youtube.com/playlist?list=PLmUDvA65lNp28eLBicTEt9oOdpdnGBl9O&quot;&gt;https://www.youtube.com/playlist?list=PLmUDvA65lNp28eLBicTEt9oOdpdnGBl9O&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fresco, loading image fast&lt;/p&gt;

&lt;p&gt;王洁同学中文已经没有她的英文流利了，:)。作为 Fresco 文档的译者，也反复看了源码，以为对 Fresco 已经足够了解了。还是补了好多知识。&lt;/p&gt;

&lt;p&gt;对于不能 wrap_content 的事情，如何做到提前知道图片的宽高，我现在的做法是把宽高信息放到 uri 中。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如何开发一款优雅的SDK&lt;/p&gt;

&lt;p&gt;观祥同学的声音有点太小，抱歉各位。&lt;/p&gt;

&lt;p&gt;开发，CI，测试三个方面，尤其 CI 方面的介绍，如果目前还没 CI 的团队，可以立刻按照这个配备搭建一个了。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;打造可信赖的 Android 设备 ID&lt;/p&gt;

&lt;p&gt;Slide 做得不错，台风也不错。嗯。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Android 中 Native 的内存泄露检测&lt;/p&gt;

&lt;p&gt;嗯。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Android 应用性能优化经验分享&lt;/p&gt;

&lt;p&gt;对几个工具的讲解很不错，好评。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;Slides 下载地址&lt;/h4&gt;

&lt;p&gt;Android: &lt;a href=&quot;https://github.com/MDCC2016/Android-Session-Slides&quot;&gt;https://github.com/MDCC2016/Android-Session-Slides&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;iOS: &lt;a href=&quot;https://github.com/MDCC2016/iOS-Session-Slides&quot;&gt;https://github.com/MDCC2016/iOS-Session-Slides&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;关于视频和其他&lt;/h4&gt;

&lt;p&gt;视频和『圆桌会议』等其他相关内容的发布，我会在微博，公众号，Deepint 的 Slack 中公布。欢迎关注。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>九月，我们在 MDCC 的一场聚会</title>
      <link>http://liaohuqiu.net/cn/posts/about-mdcc-2016-android-sesion/</link>
      <pubDate>Wed, 21 Sep 2016 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/about-mdcc-2016-android-sesion</guid>
      <description>&lt;p&gt;时间很快，又是一年，『天朗气清，惠风和畅』，『时维九月，序属三秋』。去年此时，承蒙 MDCC 邀请，在 Android 分会场做了一个分享。&lt;/p&gt;

&lt;p&gt;在这个会上认识了非常多优秀的同学，有些是前来做演讲的同学，有些是前来参会的之前只在社区中线上打过交道的同学。和大家交流，受益匪浅。这个是当时的合影：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//img1.liaohuqiu.com/large/599e230bjw1f81dqtb601j20zk0npn6p.jpg&quot; alt=&quot;MDCC 2015&quot;&gt;&lt;/p&gt;

&lt;p&gt;技术会议，一是产出高质量的内容推动技术传播，或是提出观点，百家争鸣；另一是，在会议内容可通过直播或者录播，足不出户轻松观看的今天，会议提供了一个结识业界朋友，见面交流的机会。&lt;/p&gt;

&lt;p&gt;第一是核心价值，第二是锦上添花。&lt;/p&gt;

&lt;p&gt;今年有幸得 MDCC 邀请，担任 Android 分会场的『出品人』，帮忙邀请讲师，组织内容。&lt;/p&gt;

&lt;p&gt;经过这几个月的准备，一切都已经准备妥当，好些同学的 PPT / Keynote 都已经修改了好多次了。趁现在有些时间，简单记录一下这过程中发生的事情，为了将来留念。&lt;/p&gt;

&lt;h3&gt;回归初心，从容器化到组件化&lt;/h3&gt;

&lt;p&gt;今年六月，和 唐小引（唐小引同学今年负责整个 MDCC, &lt;a href=&quot;http://weibo.com/u/2019731997&quot;&gt;http://weibo.com/u/2019731997&lt;/a&gt; ）见面讨论的时候，我第一个想到的是『冯老师』( &lt;a href=&quot;https://github.com/oasisfeng&quot;&gt;https://github.com/oasisfeng&lt;/a&gt; )。&lt;/p&gt;

&lt;p&gt;我们不喜称『大神』，『大牛』，『大拿』，而是以『同学』相称。我们认为，技术的事情，时间而已。但『冯老师』是我们给 冯森林 同学的外号，因他知识面实在是太广博了。&lt;/p&gt;

&lt;p&gt;我还在阿里的时候，就对冯老师有所耳闻，当时他负责手机淘宝 Android 团队，但从没见过面。在去年的 MDCC 上，有幸见到了他，之后我们大家有交流（其实主要是冯老师说，我们大家领悟学习）。今年 5 月，我们同行参加 Google IO，一路上和冯老师交流，所学甚多。&lt;/p&gt;

&lt;p&gt;我和冯老师『汇报』了我帮忙筹办 MDCC 的一些想法和理念，问他是否愿意给大家分享一些东西，冯老师说他考虑两天，看看有什么可以分享的。&lt;/p&gt;

&lt;p&gt;两天之后，冯老师在 Slack 上说，他想做一个分享：《回归初心，从容器化到组件化》。时下，容器化，插件化流行：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;大小团队如何技术选型？&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如何提升开发效率？&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如何提高项目可维护性？&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如何模块化？如何解耦？依赖注入？&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如何加快项目构建速度？&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;在 2012 年底加入阿里巴巴无线事业部开始的漫长技术探索中，Atlas 是唯一一个伴随着我从始至终的项目。三年来的不断思考、试错和推倒重来，从插件化到动态化、从组件化到单元化，我们自认为构建了一个宏伟的框架。但最近这一年离开阿里后的独立开发之路，才让我有机会站在一个微末的视角重新审视此前的雄心壮志。回归原点，重拾初心，方得拨云见日，希望这次能带给大家我对『组件化』的朴素诠释。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;相信你会和我一样，从这里找到一些答案和启示。&lt;/p&gt;

&lt;h3&gt;滴滴，国际化&lt;/h3&gt;

&lt;p&gt;Trinea( &lt;a href=&quot;https://github.com/Trinea&quot;&gt;https://github.com/Trinea&lt;/a&gt; ）同学去了滴滴后，在社区很难见到他的身影了。他一直勤勤恳恳，低头做事，频繁来返于京杭，飞越白天黑夜穿梭于北京和纽约。&lt;/p&gt;

&lt;p&gt;前不久，滴滴和 UBer 合并，规模再次扩张。这半年多，我去过滴滴好几次，每次看到那些紧张忙碌的人们，都心生感想，是这些朴素低调务实的人们，滴滴有了这样一个规模。&lt;/p&gt;

&lt;p&gt;我和很多个滴滴的同学联系，问他们是否有时间来做个分享，他们都说忙不过来了。我有些沮丧，这几年滴滴的规模的增长，里面技术的挑战不可谓不大，能在倾听他们的心得，体会，不可谓不是一件幸事，难道今年就这样算了？&lt;/p&gt;

&lt;p&gt;一个多月前的一天，我抱着试试看的心态（估计 Trinea 看到这个的时候，以他对技术社区的热情，他心里会嘀咕：有什么不好意思的，这事，再忙也得来啊），问他：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;『国内？国外？』，&lt;/p&gt;

&lt;p&gt;『国内啊』&lt;/p&gt;

&lt;p&gt;『北京？杭州？』&lt;/p&gt;

&lt;p&gt;……&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;第二天，我收到他的一条微信：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;想了下安排，为了和你跟冯老师们一聚，我争取最近半个月内把要处理的事处理完。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;是夜，凌晨一点。&lt;/p&gt;

&lt;p&gt;在后来的这一个月里，我们多次在凌晨沟通，交流，议题选定，行程安排，Keynote 修改。到目前，终于一切妥当。这次，Trinea 同学，会给我们分享滴滴国际化方面的技术挑战：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;如何做地图选型？&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如何做地图扩展适配？&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;网络如何优化？&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如何对项目整体做技术拆分？&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;项目演进的过程中，有什么经验教训和心得体会？&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;24 号，欢迎交流。&lt;/p&gt;

&lt;h3&gt;Facebook: Fresco, loading image faster&lt;/h3&gt;

&lt;p&gt;本次会议，除了国内一流的公司和团队，我也计划邀请一些国际上顶尖的团队或开发者过来交流。&lt;/p&gt;

&lt;p&gt;图片加载几乎是任何一个 App 都要处理的事情。Fresco(&lt;a href=&quot;http://fresco-cn.org&quot;&gt;http://fresco-cn.org&lt;/a&gt; / &lt;a href=&quot;http://frescolib.org/&quot;&gt;http://frescolib.org/&lt;/a&gt;) 这个 Android 中加载图片的库，将图片加载这个事情做到了极致。项目开源一年多来，吸引了大量的用户。其在 5.0 以下，用匿名共享内存存放 BitMap 数据的做法是一个创举。&lt;/p&gt;

&lt;p&gt;Fresco 处理了大量面对业务的开发者不需要关注的细节。我们只需要使用 Fresco 就好了，剩下的交给 Fresco 都会搞定。但是我们如果了解这些细节，对开发出一个出色的 App，成为一个卓越的工程师，是大有裨益的。&lt;/p&gt;

&lt;p&gt;这次，我们非常荣幸地邀请到了 Fresco Team 的工程师给我们分享关于 Android 中的图片加载，关于 Fresco。&lt;/p&gt;

&lt;p&gt;同时 姚家艺（ &lt;a href=&quot;https://github.com/desmond1121&quot;&gt;https://github.com/desmond1121&lt;/a&gt; ）和我作为 Fresco 中文文档的译者和维护者，也都在现场。关于图片加载，关于 Fresco，欢迎交流。&lt;/p&gt;

&lt;h3&gt;性能优化&lt;/h3&gt;

&lt;p&gt;关于 Android 性能优化，虽然已经有大量的资料可考，但这是一个常谈常新的话题。张明云(&lt;a href=&quot;https://github.com/zmywly8866&quot;&gt;https://github.com/zmywly8866&lt;/a&gt;) 同学，活跃于『简书』和『知乎』，运营了多个 Android 相关的话题。对于性能优化，他持续总结，持续实践。我对性能优化算是有一定了解的，之前他发表的『应用开发进阶必经之路之性能优化』(&lt;a href=&quot;http://www.jianshu.com/p/65efbccfacf7&quot;&gt;http://www.jianshu.com/p/65efbccfacf7&lt;/a&gt;) 总结得非常好。他在『知乎 Live』上的分享也很不错。&lt;/p&gt;

&lt;p&gt;这次他会就：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;应用性能状况&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;性能优化流程、原则、指标和工具&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;性能优化实战/ 实际优化效果&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;等方面，分享他的心得和体会。敬请期待。&lt;/p&gt;

&lt;h3&gt;微信 Tinker 热补丁实践演进之路&lt;/h3&gt;

&lt;p&gt;六月的时候，和微信 Android 团队的 赵原（&lt;a href=&quot;https://github.com/kirozhao&quot;&gt;https://github.com/kirozhao&lt;/a&gt; ）同学见面（之前只在电脑屏幕上看过他的一个技术演讲），他是一个低头认真做事的典范。这个 86 年小伙子，从微信的第一行代码开始，到现在负责整个 Android 团队，对微信的技术变革了如指掌。他告诉我，接下来，微信会开源一部分成熟的，通用的技术。&lt;/p&gt;

&lt;p&gt;七月的时候，我问他可否推荐一个同学，分享一下微信的最近的技术演进，或者任何其他。他说有个优秀的，更年轻的小伙子可以去做分享，他叫：张绍文 （&lt;a href=&quot;https://github.com/shwenzhang/&quot;&gt;https://github.com/shwenzhang/&lt;/a&gt; ），是微信高级开发工程师，主要负责架构、插件化、编译、性能优化、组件化等。&lt;/p&gt;

&lt;p&gt;而分享的话题是：《微信 Tinker 热补丁实践演进之路》。微信这个体量的应用，热修复技术的演进，遇到的问题，经验心得，是非常有参考价值的。&lt;/p&gt;

&lt;p&gt;更为重要的是，Tinker 将会在 24 号这天开源！让我们拭目以待，24 号 GitHub 上，Tencent（&lt;a href=&quot;https://github.com/Tencent/&quot;&gt;https://github.com/Tencent/&lt;/a&gt; ）这个目前还没任何公开项目的组织上，第一个出现的项目会是什么！&lt;/p&gt;

&lt;h3&gt;其它的更多&lt;/h3&gt;

&lt;p&gt;还有其他更多优秀的讲师和精彩的议题，阿里的，网易的，等等，篇幅所限，这里不再一一谈及。可到大会网站了解更多。&lt;a href=&quot;http://mdcc.csdn.net/&quot;&gt;http://mdcc.csdn.net/&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;社区专家&lt;/h3&gt;

&lt;p&gt;这次，我们还邀请了一些社区的开发者作为社区嘉宾参会：&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名字&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;吴晶&lt;/td&gt;
&lt;td&gt;小米&lt;/td&gt;
&lt;td&gt;小米软件开发工程师，Android笔记博主&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://www.race604.com&quot;&gt;http://www.race604.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;许建林&lt;/td&gt;
&lt;td&gt;YOLO&lt;/td&gt;
&lt;td&gt;热爱编程，目前专注于安卓开发，喜欢开源，喜欢敏捷，喜欢技术，喜欢折腾……&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/Piasy&quot;&gt;https://github.com/Piasy&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;张会超&lt;/td&gt;
&lt;td&gt;郑州GDG&lt;/td&gt;
&lt;td&gt;菜鸟 Android 程序猿，Google Fans，Android开发技术周报 ( &lt;a href=&quot;http://www.androidweekly.cn&quot;&gt;http://www.androidweekly.cn&lt;/a&gt; ) 和 AndroidDevTools ( &lt;a href=&quot;http://www.androiddevtools.cn&quot;&gt;http://www.androiddevtools.cn&lt;/a&gt; ) 网站创办者，郑州GDG组织者，爱开源，爱Android，爱折腾 :)&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/inferjay&quot;&gt;https://github.com/inferjay&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;孙鹏飞&lt;/td&gt;
&lt;td&gt;百度-金融&lt;/td&gt;
&lt;td&gt;孙鹏飞，百度金融团队高级安卓开发工程师，长期关注开源社区，github 重度用户，对 hotfix 和插件技术有一定了解。&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/dodola&quot;&gt;https://github.com/dodola&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;何红辉&lt;/td&gt;
&lt;td&gt;明日虫洞科技有限公司&lt;/td&gt;
&lt;td&gt;热爱技术，热爱分享的工程师&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/hehonghui&quot;&gt;https://github.com/hehonghui&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;张勇&lt;/td&gt;
&lt;td&gt;乐视体育／产品技术中心／技术总监&lt;/td&gt;
&lt;td&gt;DroidPlugin 作者，插件化&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/cmzy&quot;&gt;https://github.com/cmzy&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;白云鹏&lt;/td&gt;
&lt;td&gt;霍尼韦尔&lt;/td&gt;
&lt;td&gt;移动应用开发者&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://baiyunpeng.com&quot;&gt;http://baiyunpeng.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;姚家艺&lt;/td&gt;
&lt;td&gt;BiliBili / Android 平台组 / Android开发&lt;/td&gt;
&lt;td&gt;努力成为全栈中的 Android 开发者。Fresco 中文文档译者之一。&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/desmond1121&quot;&gt;https://github.com/desmond1121&lt;/a&gt;  &lt;a href=&quot;http://desmondyao.com&quot;&gt;http://desmondyao.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;王玉成&lt;/td&gt;
&lt;td&gt;清华大学微电子所&lt;/td&gt;
&lt;td&gt;/ 6年嵌入式系统及驱动开发经验。对物联网及智能硬件领域时刻关注&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://blog.csdn.net/wfing&quot;&gt;http://blog.csdn.net/wfing&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;孙胜杰&lt;/td&gt;
&lt;td&gt;Xmonster Inc. 技术负责人&lt;/td&gt;
&lt;td&gt;AndResGuard 维护者，前微信、手机 QQ 开发，linux kernel committer，多个 android 开源项目的贡献者&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/simpleton&quot;&gt;https://github.com/simpleton&lt;/a&gt;  &lt;a href=&quot;http://simsun.me&quot;&gt;http://simsun.me&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;王永杰&lt;/td&gt;
&lt;td&gt;京东 Android 系统架构组负责人&lt;/td&gt;
&lt;td&gt;国防科大学士，北交大硕士，曾担任盛大创新院高级研究员，负责微酷等应用的研发工作。2013年加入京东，任无线业务部技术专家、架构委员会主任架构师、Android系统架构负责人。&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/wangyj&quot;&gt;https://github.com/wangyj&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;任玉刚&lt;/td&gt;
&lt;td&gt;滴滴出行 技术专家&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://github.com/singwhatiwanna&quot;&gt;http://github.com/singwhatiwanna&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;张鸿洋&lt;/td&gt;
&lt;td&gt;百度科技&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://blog.csdn.net/lmj623565791&quot;&gt;http://blog.csdn.net/lmj623565791&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;以上是部分参会的社区的同学，这些同学都会在会议现场，欢迎交流。&lt;/p&gt;

&lt;h3&gt;会议的 App&lt;/h3&gt;

&lt;p&gt;虽然我只是在 Android 专场帮忙，但为了这次会议，我们几个小伙伴还做了一个会议的 App，目前 iOS 和 Android 版本目前都已经可以在应用市场下载安装了。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Pober Wong（&lt;a href=&quot;https://github.com/Bob1993/&quot;&gt;https://github.com/Bob1993/&lt;/a&gt; ）负责用 React Native 开发 App&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;OKernal （刘舒，Flipboard 中国，负责产品，&lt;a href=&quot;http://weibo.com/206781304&quot;&gt;http://weibo.com/206781304&lt;/a&gt; ）帮忙做产品层面的一些事情。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;我。帮忙抓取数据，提供后端接口支持，做了一些力所能及的小事：&lt;a href=&quot;https://github.com/liaohuqiu&quot;&gt;https://github.com/liaohuqiu&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这其中大部分的工作，都是在中秋节时完成的。现在，项目也已经开源： &lt;a href=&quot;https://github.com/Bob1993/mdcc-client&quot;&gt;https://github.com/Bob1993/mdcc-client&lt;/a&gt; ，为了感谢这两位同学，MDCC 赠送他们两张嘉宾票。&lt;/p&gt;

&lt;h3&gt;Meetup&lt;/h3&gt;

&lt;p&gt;为了这次聚会，同学们有的跨越高山，有的飞越重洋。『千里逢迎』，和去年一样，我继续做东，薄酒一份，招待大家。&lt;/p&gt;

&lt;p&gt;有『胜友如云』，期待『高朋满座』。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//img1.liaohuqiu.com/large/599e230bjw1f81dqsy40dj20zk0qowk2.jpg&quot; alt=&quot;MDCC 2015 Meet up&quot;&gt;&lt;/p&gt;

&lt;p&gt;好了，到时见。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>命令行终端保持连接</title>
      <link>http://liaohuqiu.net/cn/posts/keep-alive-terminal-connection/</link>
      <pubDate>Tue, 16 Aug 2016 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/keep-alive-terminal-connection</guid>
      <description>&lt;h3&gt;服务器希望断开闲置连接&lt;/h3&gt;

&lt;p&gt;为了控制 ssh 的连接数，服务器希望断开一段时间无操作的连接，可在 &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt; 中配置：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# Disable TCPKeepAlive and use ClientAliveInterval instead to prevent TCP Spoofing attacks
TCPKeepAlive no
ClientAliveInterval 60
ClientAliveCountMax 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如在指定时间内没收到客户端响应，连接断开。&lt;/p&gt;

&lt;h3&gt;客户端希望保持连接&lt;/h3&gt;

&lt;p&gt;如果你正在不同的服务器上，开了好几个窗口，分别切换到不同的目录下，机械键盘敲得啪啪作响。这个时候，同事过来讨论问题，讨论完后，你喝了口水，看了看屏幕，恢复了思路，手指重回键盘，开始继续敲入熟悉的命令，结果：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Write failed broken pipe
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;看来，你需要重新连接了&lt;/strong&gt;。&lt;/p&gt;

&lt;h5&gt;iTerm2&lt;/h5&gt;

&lt;p&gt;iTerm2 中有一个选项： &lt;code&gt;When idle, send ASCII code 0 every 10 seconds&lt;/code&gt;，其中，ASCII code 和时间可指定。&lt;/p&gt;

&lt;p&gt;通过这个配置，可以达到保持连接的目的，但同时也带来一些副作用，比如：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;一些命令行输出中会有不期待出现的字符；&lt;/li&gt;
&lt;li&gt;或者，&lt;strong&gt;VI / Vim 中会插入一些不想要的内容&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;正确的做法&lt;/h5&gt;

&lt;p&gt;正确的做法是，通过配置 &lt;code&gt;ServerAliveInterval&lt;/code&gt; 来实现，在 &lt;code&gt;~/.ssh/config&lt;/code&gt; 中加入：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;ServerAliveInterval=30
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;数值根据实际情况做调整。&lt;/p&gt;

&lt;p&gt;当然，各个服务器的配置不一样，你也可以做差异化的配置，以减少不必要的发包：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Host *hostname.com
   ServerAliveInterval 60
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;另外，如果你是第一次配置 &lt;code&gt;~/.ssh/config&lt;/code&gt;，请注意该文件的权限，否则配置将不起作用：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;chmod 600 ~/.ssh/config
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;好了，这样问题就完美解决了，&lt;strong&gt;Enjoy!&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>不停向前，只为更好的自己 —— 致参加 Study Jams 的同学们</title>
      <link>http://liaohuqiu.net/cn/posts/mountains/</link>
      <pubDate>Tue, 07 Jun 2016 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/mountains</guid>
      <description>&lt;p&gt;5 月 17 日，Mountain View 的『Sports Page』酒吧，程路和我并排坐着，我们有一句没一句地聊着。&lt;/p&gt;

&lt;p&gt;他说，你知道吗，Study Jams 这个活动，有近 600 人坚持完成了课程并获得证书，有 140 多位同学成功把自己的 App 发布到 Google Play。&lt;/p&gt;

&lt;p&gt;我感到非常震惊。他们是一群零基础的同学，有些人甚至从来都没写过代码。&lt;/p&gt;

&lt;p&gt;我想着那一个月中，这几百个同学经历的挫折和挑战；我想着那一个月中，他们收获的成功和喜悦；我抬头望天空，加州夏天 7 点来钟的夜晚，全是瑰丽的晚霞。&lt;/p&gt;

&lt;p&gt;我想起，我本科和研究生学的是『航空宇航推进』，研究生毕业后，几乎所有的同学都去了研究所工作。安稳的工作，不错的待遇。而对我来说，那是毫无悬念的日子，可预知的未来。为了能有更大的挑战，寻找更大的可能性，我决定去互联网行业工作。这在当时被一些老师称为是『愚蠢的决定』，还被当做笑谈讲给后届的同学听。&lt;/p&gt;

&lt;p&gt;我想起，我还在阿里巴巴工作的时候，中午经常可以看到有一个人在楼下的广场滑旱冰，我看着他一次次地变得熟练。一天，我们遇到了，他居然是个老头！他说，他今年 61 岁了。&lt;/p&gt;

&lt;p&gt;我之前一直用拼音输入法，但是拼音输入法的重码太多了，而五笔重码很少。为了达到更快的输入速度，我开始练习『五笔』。当我说我要练习『五笔』的时候，有些人打赌说我肯定学不会的。而现在，现在这篇文章就是用五笔输入法写的。虽然现在输入速度还是很慢，但我知道以后会越来越快的。&lt;/p&gt;

&lt;p&gt;这几年，我们练习音乐，练习写作；我们阅读，我们倾听；我们去旅行，我们去经历；我们不断接纳新事物，迎接新挑战，我们不断向前，只为更好的自己。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Firebase 简介</title>
      <link>http://liaohuqiu.net/cn/posts/take-a-glance-at-fire-base/</link>
      <pubDate>Fri, 03 Jun 2016 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/take-a-glance-at-fire-base</guid>
      <description>&lt;p&gt;上礼拜参加了 I/O 2016，按照以往的惯例，每次 I/O 大会回来后社区都会办一次 I/O Recap 的回顾活动，向本地的开发者讲述 I/O 经历、介绍最新技术。&lt;/p&gt;

&lt;p&gt;本文对 Firebase 的功能特性，应用场景做简单介绍，是我在 I/O Recap 分享的大纲。&lt;/p&gt;

&lt;p&gt;关于 Firebase，有两个很好的途径可以了解信息，分别是官网的文档和 Youtube 的视频。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://firebase.google.com&quot;&gt;https://firebase.google.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/user/Firebase&quot;&gt;https://www.youtube.com/user/Firebase&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;本文是在反复阅读文档和观看视频后的总结，供大家参考。&lt;/p&gt;

&lt;h3&gt;Firebase 解决的问题&lt;/h3&gt;

&lt;p&gt;创业公司 / 团队面临的挑战：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Technical：是否能实现？&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Product：如何打造用户喜爱的产品？&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Market：如何推广？&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Finance：如何盈利？如何生存？&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Scale：如何面对规模的增长？&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Firebase 旨在打造『无服务器』的 app 开发，助力 app 快速改进，实现精准的推广&lt;/strong&gt;。 &lt;/p&gt;

&lt;h3&gt;Firebase 功能点&lt;/h3&gt;

&lt;h4&gt;核心功能&lt;/h4&gt;

&lt;p&gt;Firebase 拥有丰富的功能，其中核心功能是 Analiytics。除了各种报表，Analiytics 有：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;和其他功能联通的报表展示&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;强大的事件支持：完善的默认事件和自定义事件&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;强大的受众（用户）定义&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;面向开发者的功能&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Remote Config&lt;/p&gt;

&lt;p&gt;远程配置，支持根据各种条件返回配置。可做 AB Testing。结合 Analiytics 报表，可快速进行更改迭代。这个是亮点。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Cloud Messaging&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Firebase Cloud Messaging (FCM) is the new version of GCM. It inherits the reliable and scalable GCM infrastructure, plus new features!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;看来国内还是不能用。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Crash Reporting&lt;/p&gt;

&lt;p&gt;报表做得很不错。支持自定义日志。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Test Lab&lt;/p&gt;

&lt;p&gt;用于真机测试。国内有些替代解决方案。目前按设备时长收费。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Authentication&lt;/p&gt;

&lt;p&gt;用户认证，支持多种帐号体系，也支持注册和密码重置，免注册，自定义 UI。开发者不需要自己开发这样的通用系统，结省大量时间。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Realtime Database&lt;/p&gt;

&lt;p&gt;数据库支持。同时支持实时分发到订阅。看起来可做聊天了。有存储和连接数限制。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Storage&lt;/p&gt;

&lt;p&gt;存储支持。实际就是 Google Cloud Storage 的封装。结合 Authentication 实现用户存储。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Hosting&lt;/p&gt;

&lt;p&gt;资源托管，CDN 支持。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cloud Messaging，Crash Reporting，Test Lab 是 app 开发的标配。 Remote Config，Authentication，Storage，Hosting 则是『无服务器』化的支持。&lt;/p&gt;

&lt;h4&gt;面向业务增长的功能&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Notification console&lt;/p&gt;

&lt;p&gt;结合 Analiytics，对指定用户发送 Notification，比如给加入购物车但未付款的用户发送代金券。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;App Indexing&lt;/p&gt;

&lt;p&gt;将 web 和 app 联系起来，在搜索结果页展示 app 信息，点击即可安装或者打开指定页面。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Dynamic Links&lt;/p&gt;

&lt;p&gt;适用于推广，尤其是个性化推广，app 安装后可进入指定页面；也可用于 app 指定内容的分享。结合 Analiytics，效果一目了然。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Invite&lt;/p&gt;

&lt;p&gt;和 Dynamic Links 一样，集成之后，用来作类似优惠码邀请这样的功能，结合 Analiytics 进行数据分析。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Adwords&lt;/p&gt;

&lt;p&gt;初次可针对特定人群进行广告推广，后续可选用 Analiytics 中的特定人群，比如安装后付费的用户，以提高转化率。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;以上几点都是为 app 增长量身定做和功能。&lt;/p&gt;

&lt;h3&gt;应用场景&lt;/h3&gt;

&lt;h4&gt;App 快速开发&lt;/h4&gt;

&lt;p&gt;对于小团队，资源有限，『无服务器』加快了开发速度。Crash Reporting， Test Lab 等功能提高了 app 质量。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://firebase.googleblog.com/2015/05/firebase-now-works-with-react-native_40.html&quot;&gt;目前 Firebase 支持 React Native 了&lt;/a&gt;。&lt;/p&gt;

&lt;h4&gt;基于数据的产品改进&lt;/h4&gt;

&lt;p&gt;开发集成后可用 Firebase 进行快速的实验和改进。针对不同的用户，Remote Config 给出不同的配置，app 以此提供不同的功能。&lt;/p&gt;

&lt;p&gt;通过 Analiytics 可直观地看出效果好坏，改变 Remote Config 的值进行功能的全量开放。&lt;/p&gt;

&lt;p&gt;数据真实，速度快，非常高效，而这所有的一切，一个人就可完成。&lt;/p&gt;

&lt;h4&gt;市场推广&lt;/h4&gt;

&lt;p&gt;SEO，邀请，分享，广告，定向 Notification 解决了很大一部分的市场推广问题。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Google I/O 见闻</title>
      <link>http://liaohuqiu.net/cn/posts/google-io-2016/</link>
      <pubDate>Wed, 18 May 2016 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/google-io-2016</guid>
      <description>&lt;p&gt;本次 Google I/O 几乎大部分内容，都可以看到实时的视频了，足不出户，就可以看到精心拍摄的画面。&lt;/p&gt;

&lt;p&gt;我和几个朋友参加了现场的会议，感受了一下现场的气氛，并和很多开发者做了面对面的交流。&lt;/p&gt;

&lt;p&gt;这里介绍一下我的见闻感想，以及今天主会场的一些内容概要。现在视频已经可以看了，有时间的朋友可以看一遍视频，你会了解所有的内容细节。&lt;/p&gt;

&lt;h2&gt;开场&lt;/h2&gt;

&lt;p&gt;开场前有两个小互动游戏：画板和纸飞机。当来自于某个地区的纸飞机数量很多的时候，会在屏幕上显示国家和地区。每当一个国家名字出现时，会场就会有一部分人欢呼。&lt;/p&gt;

&lt;p&gt;好像没看到中国的地区出现，也没听到欢呼，多少有些落寞。&lt;/p&gt;

&lt;p&gt;会场很多人在折纸飞机，会场上空飘满了纸飞机，期间还有一辆民航飞机从会场上空飞过。&lt;/p&gt;

&lt;p&gt;开场音乐，从主舞台到观众席上的两个高塔上之间，有类似琴弦的钢丝链接。左右高塔上各有一人在弹奏。很美妙。我称之为：『天空之弦』。&lt;/p&gt;

&lt;p&gt;一阵劲爆的音乐后，开场了。&lt;/p&gt;

&lt;p&gt;开场后，Sundar Pichai 说了一下 I/O 发展史，提到在优酷，大概有一百万的人在在线观看。会场一阵欢呼和尖叫。&lt;/p&gt;

&lt;p&gt;是的，很多中国的开发者都还在关注着 Google。&lt;/p&gt;

&lt;h3&gt;会场和内容&lt;/h3&gt;

&lt;p&gt;早上主会场是 Keynote，下午 1PM ~ 2PM 是 『What&amp;#39;s new in Android』。下午以及之后两天，都是在各个分会场进行各个主题。&lt;/p&gt;

&lt;p&gt;从分会场的演讲主题数量来看，前三的是 Android 65，Mobile Web 31，Firebase 28。&lt;/p&gt;

&lt;p&gt;分会场一个小时一场，一共 7000 个人参会，应该是 10 个分会场，每个会场大概能容纳 100 ~ 200 人的样子。所以有可能排一个小时队，最后人满了，进不去了。&lt;/p&gt;

&lt;p&gt;大部分的内容都有直播了，而没有直播的分会场又进不去，所以我们准备后续的时间主要用于在各个展台交流了。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;我们路过 Spaces 展台被『抓』，安装了 Spaces 才放行；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在 Firebase 和 Cloud Test Lab 展台和工作人员做了交流，云测试真是创业公司的福音；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在 Android Wear 展台，&lt;a href=&quot;https://github.com/oasisfeng&quot;&gt;冯老师&lt;/a&gt; 问了很多中国开发者关心的问题。Android Wear 是为数不多的可以在中国使用的 Google 的产品，甚至还有专门为中国区定制的 SDK。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;主会场的 Keynote&lt;/h2&gt;

&lt;p&gt;早上的 Keynote 提到了：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Google Home。智能家居，放放音乐，定定行程，控制控制家里的家电什么的。基于 Google 强大的搜索和语义分析，效果『可能』会比 Siri 好。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Allo，一个聊天应用。引入了类似 Slack 那样的机器人，对话过程中，可以和机器人互动，基于 Google 强大的技术积累，基于上下文的语义，提供了非常不错基于内容的体验。现在有很多聊天类应用都有这样的机器人，Allo 优势是其他 App 不具有的。&lt;/p&gt;

&lt;p&gt;另外，还有一些贴心的聊天体验。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Duo 一个视频聊天应用，接听之前，可以试试看到视频发起方的图像。你可视情况决定是否接听。&lt;/p&gt;

&lt;p&gt;以上两个应用都还没发布。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;VR。介绍了他们的 Daydream，前几个主题的视频都挺精彩，Daydream 的宣传视频，效果并不好，看了给人一种：What the hell is this / 这是什么鬼 的感觉。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Android&lt;/p&gt;

&lt;p&gt;这部分的内容还是本次大会的大头，大致有：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Android N Developer Preview，提到了性能提升，Constraint Layout 的可视化设计提高生产效率。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Android Studio 2.2 Preview&lt;/p&gt;

&lt;p&gt;提到了性能提升，也提到了更加智能。还提到了 Top 125 的 App 使用 Android Studio 开发。说 Google Play 上 92% 的应用都有 Android Studio 开发，不知道这个时候还在使用 ADT 进行开发的人心里怎么想。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Android VR&lt;/p&gt;

&lt;p&gt;和 Daydream 结合。Keynote 并没有透露出更多令人激动的特性。大家可以保持关注。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Android Wear 2.0&lt;/p&gt;

&lt;p&gt;可以脱离手机使用了。这个『有可能』是为了和 iOS 平台对接。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Multi Windows&lt;/p&gt;

&lt;p&gt;多窗口，多任务。『众所周知』的新闻了。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Recording APIs&lt;/p&gt;

&lt;p&gt;做 UI 测试一个高效的办法就是脚本回放，这个功能不错，看了展台的演示，看起来他的操作，行云流水，个人感觉比 XCode 的好用。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;Firebase&lt;/h3&gt;

&lt;p&gt;好东西，去用吧。免费，无限制，Google 有钱就是任性啊。&lt;/p&gt;

&lt;h3&gt;Google Play 和 Android instant apps&lt;/h3&gt;

&lt;p&gt;介绍了 Google Play 取得的成绩，65 billion 的 app 安装量。&lt;/p&gt;

&lt;p&gt;重点谈到了 AI instant apps。&lt;/p&gt;

&lt;p&gt;这个是一个『大快所有人心的大好事』，应用的试用成本变得很低，无需下载，即可使用。演示了一个视频应用，一个购物应用，体验很不错。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;真是让人『大声笑，笑出声』。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;技术上，&lt;a href=&quot;https://github.com/oasisfeng&quot;&gt;冯老师&lt;/a&gt; 和 Google Play 团队做了了解，就是容器技术，开发者需要按照规范提供另外的一个包。&lt;/p&gt;

&lt;h3&gt;机器学习&lt;/h3&gt;

&lt;p&gt;这个领域我个人了解不多，听不出名堂。&lt;/p&gt;

&lt;p&gt;介绍了 Alpha Go / TensorFlow / Tensor Processing Unit。&lt;/p&gt;

&lt;p&gt;还介绍了，Google 利用机器学习和 AI 在糖尿病视网膜病变（Diabetic Retinopathy）提前诊断方面的工作。&lt;/p&gt;

&lt;h2&gt;Android 主会场&lt;/h2&gt;

&lt;p&gt;23.2 的库出来很久了，会上介绍的很多特性，之前都已经在官方博客提到了。这里列几个新的特性。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Constraint Layout, alpha 1, preview&lt;/p&gt;

&lt;p&gt;在设计器上，可轻松完成布局设计，并且给出了 Material Design 的规范提示。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Drag and Drop&lt;/p&gt;

&lt;p&gt;和多窗口结合，支持跨 Activity 拖放。&lt;/p&gt;

&lt;p&gt;From an activity to another&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Display Size&lt;/p&gt;

&lt;p&gt;图像也支持和文字一样的全局缩放了。我不知道这个是好事还是坏事。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;多语言 / 区域&lt;/p&gt;

&lt;p&gt;可以选择多个语言 / 区域，并设置优先级。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Doze mode&lt;/p&gt;

&lt;p&gt;提到了一些性能提升，将 Marshmallow 和 N 做了对比。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Project Svelte&lt;/p&gt;

&lt;p&gt;使用 JobScheduler 替代 ConnnetivityManager.CONNECTIVITY_ACTION，Camera.ACTION_NEW_VIDOE，Camera.ACTION_NEW_PICTURE。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Android for Work&lt;/p&gt;

&lt;p&gt;Work mode 时，很多通知会被禁用，从而使用户不会分心。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;其他的更多&lt;/p&gt;

&lt;p&gt;有很多新特性，我这里没有提到，有兴趣的朋友可以看视频，很详细。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;一些花絮和体验&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;昨天签到到现在，Google 举办这场参会者 7000 人的盛会，充分地展示了 Google 作为一个世界级的科技公司的实力和风范。国内的几个大型或联网公司，想要达成这样的国际影响力，还有很长的路要走。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;看了一些关于 Google I/O 中文的报道，和 Google News 上的那些报道相比，相差太多了，前者看起来更像娱乐新闻。大量缺乏事实依据的猜想和臆断。而关于 Google 重回中国市场更是各种流言纷飞 —— 这些人，总想搞个大新闻。&lt;/p&gt;

&lt;p&gt;缺乏事实依据的报道，缺乏专业素养的新闻，充满了谬误和滑稽。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;看前段时间阿里的 Weex 的高调开源预热。再看 Google 发布会上关于技术改进的态度：没有大新闻，just make it better。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;国内现在部分技术会议，喜欢邀请一些新引人隐球的女性作为演讲者，技术回忆请个技术实力不怎样的女主播什么的。早上的 Keynote 也有几位女性演讲者，演讲水平，专业素养让人佩服。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;路遇 Sundar Pichai，商量者去合影什么的。到了他面前，被人抢先，我帮他们拍一张之后，Pichai 说，Sorry I am with my family，遁走了……&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;这几天的阳光，真是明媚和毒辣。哦，对了，今年没有赠品。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>美丽的卷积云</title>
      <link>http://liaohuqiu.net/cn/posts/cirro-cumulus/</link>
      <pubDate>Wed, 11 May 2016 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/cirro-cumulus</guid>
      <description>&lt;p&gt;整理旧物，发现了一本以前的笔记本。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//img1.liaohuqiu.com/large/599e230bjw1f3ry2m8h6fj20zk0q0ai4.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;我很清楚是哪天，在哪里买了这个笔记本。&lt;/p&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;它突然让我想起了刚毕业的那段时间。&lt;/p&gt;

&lt;p&gt;那如风的日子。我总记得，那时微熹的早晨，那轻柔的晨风，那天边美丽的卷积云。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//img1.liaohuqiu.com/large/599e230bjw1f3ry2l8jw2j20zk0nptdl.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;我想，如果是的话，那样的日子一定也是如风的五月。&lt;/p&gt;

&lt;p&gt;那会，我刚毕业，在万柳租了一套房。考了摩托车驾照，买了辆 GP150 做通勤。每天都在公司待到很晚，经常 11，12 点回到住处。&lt;/p&gt;

&lt;p&gt;回去之后，洗澡收拾，准备一下第二天的要穿的衣服，或者要带的东西，看会书就睡觉了。&lt;/p&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;每天早上，我都会早早起来去小区旁边的『长春健身园』锻炼。&lt;/p&gt;

&lt;p&gt;我有一个很简单的蒸蛋器，晚上定好时，早上开始煮，锻炼回来，吃个鸡蛋垫垫肚子，洗个澡，然后就去公司了。&lt;/p&gt;

&lt;p&gt;到公司时，8 点来钟。很多时候，都是第一个。&lt;/p&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;简单，安静的生活。有时安静到让我感到慌张。&lt;/p&gt;

&lt;p&gt;然而就这样，日复一日。&lt;/p&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;这样的日子，我过了很长时间，直到有一天，我平静的生活被打破了。&lt;/p&gt;

&lt;p&gt;我翻开笔记本，看到了当时我的心情：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//img1.liaohuqiu.com/large/599e230bjw1f3ry2n6v4hj20qy0ctgo4.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;字迹有点潦草，写的是：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;9 月 4 日&lt;/p&gt;

&lt;p&gt;『天边美丽的卷积云啊，你可知昨晚我蒸鸡蛋没放鸡蛋啊。』&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;呵呵，『我的生活，放荡……，像只狗……，像只流浪狗。』&lt;/p&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>BitMask 使用参考</title>
      <link>http://liaohuqiu.net/cn/posts/bitmasp-and-lipo/</link>
      <pubDate>Mon, 09 May 2016 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/bitmasp-and-lipo</guid>
      <description>&lt;h3&gt;为什么要使用 BitMask&lt;/h3&gt;

&lt;p&gt;在前一篇文章：&lt;a href=&quot;http://www.liaohuqiu.net/cn/posts/android-enum-memory-usage/&quot;&gt;Android 中的 Enum 到底占多少内存？该如何用？&lt;/a&gt; 中提到内存占用的问题。&lt;/p&gt;

&lt;p&gt;对于 Java 类应用，内存方面需要注意：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;不要占用大量内存，否则可用内存少；触发 GC 或 &lt;code&gt;OutOfMemoryError&lt;/code&gt;；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;不要频繁创建对象，频繁内存分配，触发 GC。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;对于枚举和常量:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;使用枚举，并不会使得对象的创建更加频繁。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;枚举类会比常量占用更多的内存，在程序运行期间，如果不卸载枚举类，内存就一直占用着。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;相对于常量&lt;/strong&gt;，枚举占用的内存是较为可观的。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;使用常量，可以大量节省内存，在 C 之类的语言中，大量使用 BitMask 来进行状态表示。&lt;/p&gt;

&lt;p&gt;在 Android 中，也大量地使用了 BitMask，比如 &lt;code&gt;android.view.View&lt;/code&gt; 这个类。&lt;/p&gt;

&lt;h3&gt;位操作&lt;/h3&gt;

&lt;p&gt;在使用 BitMask 前，我们先复习一下基本的位操作。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;NOT&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;NOT 0000 0001
  = 1111 1110
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;比如：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;OR&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;OR  0000 0001
    0000 0010
  = 0000 0011
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;比如：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AND&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;AND 0000 0101
    0000 0110
  = 0000 0100
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;比如：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;BitMask&lt;/h3&gt;

&lt;p&gt;我们知道，每一个 bit 可以有两种取值：0 或 1。&lt;/p&gt;

&lt;p&gt;BitMask 采用一个数值来记录状态，使用这个数值的每一位来表达一个状态。&lt;/p&gt;

&lt;p&gt;使用 BitMask 可用非常少的资源表达非常丰富的状态。&lt;/p&gt;

&lt;p&gt;在 Java 中，一个 byte 类型，有 8 位（bit），可以表达 8 个不同的状态，并且这些状态是互不影响的。而 int 类型，则有 32 位，可以表达 32 种状态。&lt;/p&gt;

&lt;p&gt;更为重要的是，基于 BitMask 可 &lt;strong&gt;非常简单地&lt;/strong&gt; 进行组合状态查询。&lt;/p&gt;

&lt;h4&gt;BitMask 基本操作&lt;/h4&gt;

&lt;p&gt;假设我们用一个表示状态的数值: &lt;code&gt;status&lt;/code&gt;，初始值为 0。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我们定义一个 mask 数值，该数第二位为 1：&lt;code&gt;0000 0010&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;我们把 1 往左移动 1 位来得到这个数：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mask&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x01&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;设置状态&lt;/p&gt;

&lt;p&gt;其他位不管，把第 2 位变为 1 即可。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;    xxxx xxxx
OR  0000 0010
  = xxxx xx1x
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;代码&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;清除状态&lt;/p&gt;

&lt;p&gt;其他位不管，把第 2 位置为 0。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;    xxxx xxxx
AND 1111 1101
  = xxxx xx0x
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这实际是对 &lt;code&gt;status&lt;/code&gt; 和 &lt;code&gt;mask&lt;/code&gt; 的反码进行逻辑『与』运算：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查询状态&lt;/p&gt;

&lt;p&gt;确定第 2 位是 0 还是 1，和 &lt;code&gt;mask&lt;/code&gt; 进行逻辑『与』运算：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;    xxxx xxxx
AND 0000 0010
  = 0000 00x0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果为 1，返回一个大于 0 的值，否则返回 0。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isOn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;例子&lt;/h3&gt;

&lt;p&gt;下面结合一个例子来做说明。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;相关代码在这里： &lt;a href=&quot;https://github.com/liaohuqiu/android-BitMaskSample/blob/master/app%2Fsrc%2Fmain%2Fjava%2Fin%2Fsrain%2Fbitmasksample%2Fpeople%2FPoet.java&quot;&gt;https://github.com/liaohuqiu/android-BitMaskSample&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Li_Bai&quot;&gt;李白&lt;/a&gt; 是个诗人，生活简单『朴素』：有时候写诗；有时候喝酒；有时候边写诗，边喝酒。&lt;/p&gt;

&lt;p&gt;不管是忙于写诗还是忙于喝酒，李白都是在忙碌状态中。&lt;/p&gt;

&lt;p&gt;我们用一个字节来表示他的状态，一个字节有 8 位，我们从低位起开始取两位分别代表写诗和喝酒。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;   writing  ------+
                  |
                  v
     -------+---+---+---+
       x  x |   |   | x |
     -------+---+---+---+
              ^
              |
   drinking --+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;两个 mask 为：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 0000 0010&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STATE_BUSY_IN_WRITING&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x01&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 0000 0100&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STATE_BUSY_IN_DRINKING&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x01&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;状态设置与清除&lt;/p&gt;

&lt;p&gt;以设置 drinking 状态为例子，设置状态即和 mask 值进行逻辑『或』，清除状态与 mask 的反码进行逻辑『与』运算。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setBusyInDrinking&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;busy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;busy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STATE_BUSY_IN_DRINKING&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;STATE_BUSY_IN_DRINKING&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;状态查询&lt;/p&gt;

&lt;p&gt;与 mask 进行逻辑『与』运行，判断是否为零即可：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;isBusyInDrinking&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STATE_BUSY_IN_DRINKING&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;组合状态查询&lt;/p&gt;

&lt;p&gt;不管是忙于写诗还是忙于饮酒，都称为『李白很忙』，这是一种组合状态。只要处于这两种状态中的一种，即处于组合状态中。&lt;/p&gt;

&lt;p&gt;要进行状态组合，用逻辑『或』运算即可，当进行多个状态组合时，特别方便：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;STATE_BUSY_MASK&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STATE_BUSY_IN_WRITING&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STATE_BUSY_IN_DRINKING&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;判断是否处于组合状态中：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;isBusy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STATE_BUSY_MASK&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;Android 中的 IntDef&lt;/h3&gt;

&lt;p&gt;使用 IntDef 注解来声明常量值，定义变量时，加上 IntDef 所定义的声明，编译器会检查赋值是否合法。&lt;/p&gt;

&lt;p&gt;声明：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 最后 8 位 0000 1100&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VISIBILITY_MASK&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x0000000C&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VISIBLE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00000000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 最后 8 位 0000 0100&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INVISIBLE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00000004&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 最后 8 位 0000 1000&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GONE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00000008&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@IntDef&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VISIBLE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INVISIBLE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GONE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Retention&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RetentionPolicy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SOURCE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Visibility&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setVisibility&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@Visibility&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;visibility&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;setFlags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;visibility&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VISIBILITY_MASK&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上面我们看到，代码中采用了最左的 3，4 位来表达 View 的可见性。&lt;/p&gt;

&lt;h3&gt;结论&lt;/h3&gt;

&lt;p&gt;除了 IntDef，还有 StringDef，有兴趣的同学可以看源码。&lt;/p&gt;

&lt;p&gt;在 Android 的代码中有大量的 BitMask 的运用，像 &lt;code&gt;View&lt;/code&gt;，&lt;code&gt;MotionEvent&lt;/code&gt;  这样的核心基础类中，需要认真考虑内存的使用，能省则省。&lt;/p&gt;

&lt;p&gt;如果你真想完全地掌控内存的使用，追求卓越的品质，想最大限度节省内存，BitMask 是你不错的选择。&lt;/p&gt;

&lt;p&gt;同时，我们也应该清楚枚举也不是不能用。&lt;/p&gt;

&lt;p&gt;我听到过很多论调，说用『枚举不好，官方也建议别用，因为占用很多内存，效率不高』，这些也都是人云亦云的典型。&lt;/p&gt;

&lt;p&gt;实际上，除非你写的是类似 &lt;code&gt;View&lt;/code&gt; 这样的核心基础类或者超大型应用，否则，如果连枚举这样内存开销都有问题的话，这个项目的问题就真的大了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>我所认识的『天才』少年：Lody</title>
      <link>http://liaohuqiu.net/cn/posts/lody/</link>
      <pubDate>Thu, 05 May 2016 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/lody</guid>
      <description>&lt;h4&gt;Lody 同学&lt;/h4&gt;

&lt;p&gt;最近我问 &lt;a href=&quot;https://github.com/oasisfeng&quot;&gt;冯老师&lt;/a&gt; 有没有认识很不错的同学。&lt;a href=&quot;https://github.com/oasisfeng&quot;&gt;冯老师&lt;/a&gt; 沉吟了一会，说 &lt;a href=&quot;https://github.com/asLody&quot;&gt;Lody&lt;/a&gt; 不错。&lt;/p&gt;

&lt;p&gt;哦，&lt;a href=&quot;https://github.com/asLody&quot;&gt;Lody&lt;/a&gt; 同学，是不错。&lt;/p&gt;

&lt;p&gt;他的中文名字是：罗迪，目前在宁波上学，高二。听说，他对插件化和安全有一些研究。&lt;/p&gt;

&lt;p&gt;4 月 20 号，他发布了一个项目: &lt;a href=&quot;https://github.com/asLody/TurboDex&quot;&gt;TurboDex&lt;/a&gt;，也正是这项目，使得更多的同学认识了 &lt;a href=&quot;https://github.com/asLody&quot;&gt;Lody&lt;/a&gt; 同学。&lt;/p&gt;

&lt;p&gt;这个项目用于快速加载 dex，从中可以看到了许多的亮点，全英文的注释和 README，jni 部分的代码非常工整。&lt;/p&gt;

&lt;p&gt;我惊讶于这是一个高二的同学做的项目，于是转了他的微博：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://weibo.com/1503535883/DrXm4DGSn&quot;&gt;『三个事情：1. Lody 同学这个项目实现了快速加载 dex；2. Lody 同学的代码写得不错； 3. Lody 同学，今年高二。』&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;//img1.liaohuqiu.com/large/599e230bjw1f3lmoxph2gj21kw0hlmyn.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;很多同学和朋友在留言中对一个能写出这样代码的 &lt;a href=&quot;https://github.com/asLody&quot;&gt;Lody&lt;/a&gt; 同学感到很好奇。&lt;/p&gt;

&lt;p&gt;于是我在微信上简单地和他聊了聊，进行了一个简单的交流，下面的部分是当时我们的交谈记录：&lt;/p&gt;

&lt;h5&gt;什么时候开始写代码&lt;/h5&gt;

&lt;blockquote&gt;
&lt;p&gt;你是几年级因为什么原因开始写代码的啊？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Lody:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;初二那段时间我爸买了个新手机，不久系统就被玩坏了，我一不小心学会了刷机，之后开始定制手机的 ROM 包，发布给用户。 &lt;/p&gt;

&lt;p&gt;但是后来又觉得单纯的做 ROM，很没有意思，我需要更深入的了解 Android，于是我开始学习 Smali（我学的第一个语言不是 Java），Smali 这个语言是虚拟机字节码的描述语言。&lt;/p&gt;

&lt;p&gt;我在没有学习 JAVA 的情况下去鼓捣这个总觉得有哪里不通，后来我终于开始学习高级语言，从 C++ 搞到 JAVA，又从 JAVA 学到 Android，大概到了初三基础就扎实了。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5&gt;使用哪些编程语言&lt;/h5&gt;

&lt;blockquote&gt;
&lt;p&gt;你主要编程语言是什么，现在看来。你 C++ 和 Java 都写，今天也看了你的代码了，确实写得不错。其他语言你还有涉猎吗？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Lody:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;除了 Android 以外，我对 Node.js 技术也比较感兴趣，所以我对 JavaScript 以及衍生的 CoffeeScript 和 TypeScript 也有涉猎。&lt;/p&gt;

&lt;p&gt;还有一段时间我热衷于 Unity3D，趁机领略了 C#。&lt;/p&gt;

&lt;p&gt;在高一那段时间，我对 Android 跟动态化有关的技术都非常感兴趣，我尝试将 Lua 移植到 Android，Android 跟 Lua 结合带来的好处是能够动态执行代码，于是我领略了 Lua。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5&gt;如何安排时间&lt;/h5&gt;

&lt;p&gt;我记得我上高中的时候，课业压力很重，不知道 Lody 同学是怎么安排时间的。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;我们之前就看你开源了一个项目，这次又开源了一个项目，这些项目的代码量都不算小，需要很大的时间投入。你现在读高二，应该是课业繁重的时候。你现在觉得学习压力大吗？你是如何安排学习时间和写代码的时间的？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Lody:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;学习压力肯定会有，不过适逢高考改革，写代码也成为了高考的一门科目，这让我有了更多发挥的空间。一般只有到了晚上和休息天我才有可以自我安排的时间，这样的时间最适合写代码了，不过还是学习第一，代码第二。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5&gt;关于英语&lt;/h5&gt;

&lt;blockquote&gt;
&lt;p&gt;我们看了你的项目，你的注释，文档全部都是英文，你的英文水平很好啊，你平时都是怎么学习英语的？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Lody:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;除了高中英语外，我的英文颇受 Android 源码里的注释的影响，Google 工程师写的注释我有好多不认识，所以我在看代码的时候会同时打开翻译软件。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5&gt;关于解决问题&lt;/h5&gt;

&lt;blockquote&gt;
&lt;p&gt;我们看到你项目中有好些技术难点；周围同学写代码的人很少，你现在所涉猎项目，都是非常前沿的技术，想请问，平时如果你遇到问题，你都是怎么解决的呢？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Lody:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;我研究的很多东西（或者说是鼓捣），都是没有前人探索过或者总结过经验的，对于非基础的东西，我更倾向于将问题细化，尝试在搜索引擎中寻找线索，搜索引擎未必有，那么我就会直接翻阅源码，有句话说得好：Read the fucking source code，一切问题都能从源头找到答案。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5&gt;什么是天才&lt;/h5&gt;

&lt;blockquote&gt;
&lt;p&gt;我们都看到，你现在在编码方面做得相当不错了，我听到有人说：『Lody 是天才！』。这三年多来，你付出了大量的时间在学习和编码上，关于天分和勤奋，你是怎么看的？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Lody:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;我不认为自己是天才，因为毕竟写代码的能力都是磨练出来的。我觉得这可能跟我的性格和思考的方式有关，很多的项目都是大脑里突然闪现的奇思妙想。 所以我觉得勤奋是最重要的东西，勤奋能为自己的能力打下坚实的基础，有了基础，后面的道路就是一条阳光大道。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5&gt;同学们都在干嘛&lt;/h5&gt;

&lt;blockquote&gt;
&lt;p&gt;嗯，你现在是学校里面的风云人物吗？你的同学当中或者你认识的同龄人中，像你这样写代码的同学多吗？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Lody:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;风云人物不敢当，认识我的比较多。说实话，这样年龄喜欢写代码的寥寥无几，大多数同学还是把时间泡在了游戏上面，但是同龄人里面写代码的也是有的，去年 DaoCloud 还给青年码农搞了一个 GTC（青少年开发者大会），挺有意思的。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5&gt;父母的支持&lt;/h5&gt;

&lt;blockquote&gt;
&lt;p&gt;你的爸妈对你写程序有什么样的看法呢？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Lody:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;我爸妈也看到了我写代码这方面的能力，挺支持我的，如果没有他们的支持，我也不会买到第一本100RMB的《C++从入门到放弃》.可以说，每一个脚步都是机缘.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5&gt;关于大学&lt;/h5&gt;

&lt;blockquote&gt;
&lt;p&gt;你有参加过，或者计划参加类似 NOI 这样的信息竞赛吗？关于大学，你有什么想法？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Lody:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;没有参加过这方面的竞赛，因为我不是很偏向算法这块。大学的话，代码写得好跟高考有帮助，我还去申请了专利，万一校长一鸡冻，高考都不用了。&lt;/p&gt;

&lt;p&gt;我觉得大学随遇而安即可，而且强求也未必有结果。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5&gt;关于未来&lt;/h5&gt;

&lt;p&gt;看起来，他对自己的有过很认真的考虑的：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;关于未来，你有什么计划吗？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Lody:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;我有幸认识了很多这个领域的技术大牛，让我发现我还有很多很多的不足，能够认识这些朋友，绝对是我学习之路的捷径。 &lt;/p&gt;

&lt;p&gt;现在我也积累了不少 Android 这块的东西，很多东西我有自己独到的理解，尤其是动态化的领域，所以我计划在未来写一本无水分的 Android 干货技术书。关于未来的工作方向，我偏向于当一个 RD，有时间研究非业务层的东西，提升才能更快。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5&gt;想去实习&lt;/h5&gt;

&lt;p&gt;听到他说他想当一个 RD，我想我有个公司的话，我是很希望 Lody 这样的同学来我公司实习的，于是我问：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;如果你有时间的话，你是否会考虑一些公司的实习岗位？如果考虑的话，你倾向于什么样类型的公司？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Lody:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;会的，我最缺少的就是团队经验，如果有实习的机会我不会错过。关于公司，我没有明确的选择，主要看公司里面是怎样的团队，能和有激情的coder们一起愉快的写代码，那再好不过了。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5&gt;经验分享&lt;/h5&gt;

&lt;p&gt;到最后，我想问一下，Lody 是否有什么经验或者心得想和大家分享的：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;你有什么想和大家分享的吗？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Lody:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;我建议大家都装一个 &lt;a href=&quot;http://www.teamviewer.com/en/&quot;&gt;TeamViewer&lt;/a&gt;，没事的时候直播写代码或者找认识的同学直播给你写代码。&lt;/p&gt;

&lt;p&gt;也可以上这个网站: &lt;a href=&quot;https://www.livecoding.tv%EF%BC%8C%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E5%8D%83%E5%A5%87%E7%99%BE%E6%80%AA%E7%9A%84%E4%BA%BA%E5%86%99%E5%8D%83%E5%A5%87%E7%99%BE%E6%80%AA%E7%9A%84%E4%BB%A3%E7%A0%81%E3%80%82&quot;&gt;https://www.livecoding.tv，可以看到千奇百怪的人写千奇百怪的代码。&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;我眼中的 Lody&lt;/h3&gt;

&lt;p&gt;交谈到了上面就结束了，但我和 Lody 同学的交流一直持续着。&lt;/p&gt;

&lt;p&gt;他有空的时候，也会和我们一起讨论，交流。除了技术上的潜质，我还看到了他身上的善良和勇敢。&lt;/p&gt;

&lt;p&gt;群里有时大家会说一些成人意味较浓的笑话，他会表示他的不喜；魏则西去世所折射出来的无奈，也让我们看到了他的难过。&lt;/p&gt;

&lt;p&gt;他有着强大的独立思考能力，正确的学习方法；聪明勤奋，勇敢善良。&lt;/p&gt;

&lt;p&gt;他期待着的未来，也是我期待的未来，在他身上，我看到了美好。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Android 中的 Enum 到底占多少内存？该如何用？</title>
      <link>http://liaohuqiu.net/cn/posts/android-enum-memory-usage/</link>
      <pubDate>Thu, 28 Apr 2016 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/android-enum-memory-usage</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;听说过一些论调，Enum 不该用啊，占用了很大的 dex 文件，占用很多内存。而到底确切占用了多少内存，没说。本文分析了枚举所占用的精确的内存大小，方便大家权衡选择，希望对大家有帮助。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;关于 Enum 的使用&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;Enum&lt;/code&gt; 需要占用较大的内存，如果对内存敏感，请尽量少使用 &lt;code&gt;Enum&lt;/code&gt;，换用做静态常量。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://developer.android.com/training/articles/memory.html#Overhead&quot;&gt;文档&lt;/a&gt; 提到：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Enums often require more than twice as much memory as static constants. You should strictly avoid using enums on Android.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;关于具体要占用多少内存呢？说得比较模糊。&lt;/p&gt;

&lt;h3&gt;内存占用对比&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://www.liaohuqiu.net/posts/android-object-size-dalvik/&quot;&gt;我&lt;/a&gt; 在 《&lt;a href=&quot;http://www.liaohuqiu.net/posts/android-object-size-dalvik/&quot;&gt;Dalvik 中的对象大小&lt;/a&gt;》一文中， 介绍过如何衡量对象的大小，这个文章非常详细，建议大家看看
，现举例说明。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MonthEnum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 4 bytes&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;JANUARY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// -&amp;gt; 87 bytes&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 4 bytes&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;FEBRUARY&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// -&amp;gt;  88 bytes&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 生成的数组 24 + 4 + 4&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// MonthEnum[] values&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MonthConst&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 4 bytes&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JANUARY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 4 bytes&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FEBRUARY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UseMonth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 4 bytes&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mMonth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MonthConst&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;JANUARY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 4 bytes&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MonthEnum&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mMonthEnum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MonthEnum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;JANUARY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我们不考虑 &lt;code&gt;MonthEnum&lt;/code&gt; 和 &lt;code&gt;MonthConst&lt;/code&gt; 他们对于 dex 大小的影响，这个没什么意义，几十个 &lt;code&gt;Enum&lt;/code&gt; 占用的大小，也不及一张图片。&lt;/p&gt;

&lt;p&gt;我们要对比的是 &lt;code&gt;UseMonth&lt;/code&gt; 中这两种写法所占用的内存大小在 Dalvik 虚拟机下的区别。&lt;/p&gt;

&lt;p&gt;在 &lt;code&gt;UseMonth&lt;/code&gt; 中，他们一个是 &lt;code&gt;int&lt;/code&gt; 类型，一个是对象引用，都是 4 字节，没有区别。&lt;/p&gt;

&lt;p&gt;我们对比的大小，指的是对象本身的大小加上对象成员指向的其他对象大小，即 shadow heap + maintain heap。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;MonthEnum&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;对于一个 &lt;code&gt;MonthEnum&lt;/code&gt;， &lt;code&gt;JANUARY&lt;/code&gt; 和 &lt;code&gt;FEBRUARY&lt;/code&gt; 是两个指向 &lt;code&gt;MonthEnum&lt;/code&gt; 实例的引用。他们分别占用 4 个字节。&lt;/p&gt;

&lt;p&gt;他们指向的实例对象还要占用额外的内存。&lt;/p&gt;

&lt;p&gt;我们看看 &lt;code&gt;enum&lt;/code&gt; 的定义：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Enum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ordinal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;作为 &lt;code&gt;Enum&lt;/code&gt; 成员变量 &lt;code&gt;name&lt;/code&gt;（对象引用） 和 &lt;code&gt;ordinal&lt;/code&gt;（int） 他们各占用 4 个字节，该对象实例占用：12 + 4 + 4 = 20 bytes，对齐之后是 24 字节。&lt;/p&gt;

&lt;p&gt;但是，&lt;code&gt;name&lt;/code&gt; 是字符串，空字符串对象本身就是 32 字节，加上其中的字符数组最少也会占据 24 个字节, 对字符串加字符数组最少会占据 56 个字节。故一个 &lt;code&gt;Enum&lt;/code&gt; 实例，最少 80 个字节。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;MonthEnum.JANUARY&lt;/code&gt;，含有 7 个字符，87 个字节；&lt;code&gt;MonthEnum.FEBRUARY&lt;/code&gt;，8 个字符，88 个字节。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/143285/how-much-memory-do-enums-take&quot;&gt;枚举编译完之后&lt;/a&gt; 会有一个 &lt;code&gt;values()&lt;/code&gt; 数组，两个对象引用的数组占用： 24 + 4 + 4 = 32 bytes。&lt;/p&gt;

&lt;p&gt;总计是: 4 + 4 + 87 + 88 + 32&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;MonthConst&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;JANUARY&lt;/code&gt; 和 &lt;code&gt;FEBRUARY&lt;/code&gt; 各占 4 个字节。共计 8 个字节。&lt;/p&gt;

&lt;p&gt;总计是: 4 + 4&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;上面我们对比了只具有两个枚举值的枚举和常量，如果数量更多的话，枚举的命名更长的话，这个差距会更大。&lt;/p&gt;

&lt;h4&gt;文档所说的两倍&lt;/h4&gt;

&lt;p&gt;所以实际占用的内存，并非 &lt;a href=&quot;http://developer.android.com/training/articles/memory.html#Overhead&quot;&gt;文档&lt;/a&gt; 所说的两倍左右。&lt;/p&gt;

&lt;p&gt;假设有 n 个枚举值，仅仅考虑枚举类，静态占用的内存，n 个引用 + n 个数组 + 24 空数组长度： 8n + 24。&lt;/p&gt;

&lt;p&gt;而对于 n 个值的常量，则有 4n 字节。当 n 很大时，这样的关系是两倍，但是枚举引用所指向的内存（retained heap）没有考虑进来。&lt;/p&gt;

&lt;h3&gt;该用不该用？&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://developer.android.com/training/articles/memory.html#Overhead&quot;&gt;文档&lt;/a&gt; 提到：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You should strictly avoid using enums on Android.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;枚举有其其他的特性，如果你需要这些特性，比如：非连续数值的判断，重载等时，可以用。&lt;/p&gt;

&lt;p&gt;另外，内存用量也并非那么地可怕，枚举带来的编码的便捷，代码可读性的提升也是很大的利好。&lt;/p&gt;

&lt;p&gt;看到这里，你应该了解了所有的细节了，是否该用，各位自己权衡。&lt;/p&gt;

&lt;p&gt;更多的讨论，可以看这里： &lt;a href=&quot;http://stackoverflow.com/questions/29183904/should-i-strictly-avoid-using-enums-on-android&quot;&gt;该不该用枚举&lt;/a&gt;。&lt;/p&gt;

&lt;h3&gt;如何更好地使用常量&lt;/h3&gt;

&lt;p&gt;如果应用确实对内存用量敏感，或者你就是追求极致，可用常量来代替枚举。&lt;/p&gt;

&lt;p&gt;常量一般会和 Bit  Mask 结合起来用，这样可以极致地减少了内存使用，同时使代码有较好的可读性。&lt;/p&gt;

&lt;p&gt;下一篇文章会提到。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fail2Ban: whois is taking up 100% of the cpu</title>
      <link>http://liaohuqiu.net/posts/fail-to-ban-whois-cup-100/</link>
      <pubDate>Fri, 08 Apr 2016 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/posts/fail-to-ban-whois-cup-100</guid>
      <description>&lt;p&gt;Today I noticed that one of my linode has been in 100% usage of CPU from May 31.&lt;/p&gt;

&lt;p&gt;I login in to it, use &lt;code&gt;htop&lt;/code&gt; to check what is going on:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#39;//img1.liaohuqiu.com/large/599e230bjw1f2p5ap0vw6j21yc07ojt2.jpg&#39;/&gt;&lt;/p&gt;

&lt;p&gt;As we can seen, whois is taking up most of the cpu, and I&amp;#39;ve never used this command before.&lt;/p&gt;

&lt;p&gt;So I use &lt;code&gt;ps&lt;/code&gt; to figure out which process started &lt;code&gt;whois&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[huqiu@*** ~]$ ps -ef | grep whois
root     25775  2649  0 Mar31 ?        00:00:00 sh -c printf %b &amp;quot;Subject: [Fail2Ban] SSH: banned 118.220.255.157 from `uname -n`?Date: `LC_TIME=C date -u +&amp;quot;%a, %d %h %Y %T +0000&amp;quot;`?From: Fail2Ban &amp;lt;fail2ban@example.com&amp;gt;?To: you@example.com\n?Hi,\n?The IP 118.220.255.157 has just been banned by Fail2Ban after?5 attempts against SSH.\n\n?Here is more information about 118.220.255.157:\n?`/usr/bin/whois 118.220.255.157 || echo missing whois program`\n?Regards,\n?Fail2Ban&amp;quot; | /usr/sbin/sendmail -f
fail2ban@example.com you@example.com
root     25776 25775  0 Mar31 ?        00:00:00 sh -c printf %b &amp;quot;Subject: [Fail2Ban] SSH: banned 118.220.255.157 from `uname -n`?Date: `LC_TIME=C date -u +&amp;quot;%a, %d %h %Y %T +0000&amp;quot;`?From: Fail2Ban &amp;lt;fail2ban@example.com&amp;gt;?To: you@example.com\n?Hi,\n?The IP 118.220.255.157 has just been banned by Fail2Ban after?5 attempts against SSH.\n\n?Here is more information about 118.220.255.157:\n?`/usr/bin/whois 118.220.255.157 || echo missing whois program`\n?Regards,\n?Fail2Ban&amp;quot; | /usr/sbin/sendmail -f
fail2ban@example.com you@example.com
root     25782 25776  0 Mar31 ?        00:00:00 sh -c printf %b &amp;quot;Subject: [Fail2Ban] SSH: banned 118.220.255.157 from `uname -n`?Date: `LC_TIME=C date -u +&amp;quot;%a, %d %h %Y %T +0000&amp;quot;`?From: Fail2Ban &amp;lt;fail2ban@example.com&amp;gt;?To: you@example.com\n?Hi,\n?The IP 118.220.255.157 has just been banned by Fail2Ban after?5 attempts against SSH.\n\n?Here is more information about 118.220.255.157:\n?`/usr/bin/whois 118.220.255.157 || echo missing whois program`\n?Regards,\n?Fail2Ban&amp;quot; | /usr/sbin/sendmail -f
fail2ban@example.com you@example.com
root     25783 25782 99 Mar31 ?        7-06:42:01 /usr/bin/whois 118.220.255.157
huqiu    32576 29742  0 03:37 pts/3    00:00:00 grep whois
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is very clear that Fail2Ban are trying to collecting some information and send the alarm email. (Ops, I did not config the right email address.)&lt;/p&gt;

&lt;p&gt;I kill the process, and everything is working normally. I am search this on Google then I got this link which described the same issue:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://unix.stackexchange.com/questions/165053/why-would-whois-take-up-100-of-the-cpu&quot;&gt;http://unix.stackexchange.com/questions/165053/why-would-whois-take-up-100-of-the-cpu&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>欢迎大家参加 Google Study Jams 学习小组</title>
      <link>http://liaohuqiu.net/cn/posts/google-study-jams/</link>
      <pubDate>Mon, 28 Mar 2016 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/google-study-jams</guid>
      <description>&lt;p&gt;该活动结束啦，谢谢大家的关注。&lt;/p&gt;

&lt;p&gt;April 28, 2016 更新。&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;关于学习和学习小组&lt;/h3&gt;

&lt;p&gt;这几天，看到 Google Study Jams 的时候，我想起，不管是我在学校还是近些年走向工作以后，我都喜欢找三五好友一起，组一个学习小组，一起学习。&lt;/p&gt;

&lt;p&gt;在学校时，那些考试前夕，几个小伙伴一起复习，在夜归的路上的场景，犹如在眼前。&lt;/p&gt;

&lt;p&gt;工作之后，周末的时候，相约一起去咖啡厅或者其中一个小伙伴的公司，看书，编码，聊天，也是乐趣无穷。&lt;/p&gt;

&lt;h3&gt;什么是 Google Study Jams&lt;/h3&gt;

&lt;div class=&#39;row&#39;&gt;
    &lt;div class=&#39;col-md-8 col-md-offset-2&#39;&gt;
        &lt;img src=&#39;//img1.liaohuqiu.com/large/8a41f469jw1f27y2nqh6ij21cw0iw77t.jpg&#39;/&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://developerstudyjams.com/&quot;&gt;英文官网的解释&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;Google Developers Study Jams is a free series of global, community-run, in-person study groups. The current Study Jams series is presented in partnership with Udacity and will follow their Android for Beginners curriculum.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Google Study Jams 是一个免费的学习小组，目前进行的是面向初学者（甚至零基础）的 Android 开发课程。&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;适用人群&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt; 完全不懂编程的人&lt;/li&gt;
&lt;li&gt; 编程新手&lt;/li&gt;
&lt;li&gt; 有编程经验但希望转入 Android 开发的人&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;学习小组的形式&lt;/h3&gt;

&lt;p&gt;这个是一个全球性的，社区支持驱动的，免费的，纯公益的活动，任何人都可以参加，对零基础，即使你不会编程。&lt;/p&gt;

&lt;p&gt;你也可以邀请你身边的朋友们一起来参与，活动的形式有线上和线下两种。&lt;/p&gt;

&lt;p&gt;在学校小组中，有讲师带领大家，或者大家通过自学，互相帮助，交流沟通，最终完成一个 App，然后发布到应用市场。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;当然，如果你很了解 Android 的开发，你可以担任讲师。&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;时间安排&lt;/h3&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;时间&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2016 年 3 月 22 日&lt;/td&gt;
&lt;td&gt;网站发布活动通知，报名启动&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3 月 22 日 ~ 4 月 30 日&lt;/td&gt;
&lt;td&gt;各报名团队进行 Android 技术学习&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2016 年 4 月 30 日&lt;/td&gt;
&lt;td&gt;网站关闭报名渠道，截止结业申请&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2016 年 5 月 02 日&lt;/td&gt;
&lt;td&gt;网站公布结业成员和证书获得者&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2016 年 6 月 15 日&lt;/td&gt;
&lt;td&gt;网站截至 App 作品提交&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2016 年 6 月 30 日&lt;/td&gt;
&lt;td&gt;网站公布参与者 App 作品和优秀作品获得者&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;h3&gt;你会收获什么&lt;/h3&gt;

&lt;p&gt;如果你想学习编程，这将是一个绝好的机会。&lt;/p&gt;

&lt;p&gt;除了技能上的收获，你会认识很多热爱学习的朋友，和优秀的 Android 开发者。&lt;/p&gt;

&lt;p&gt;另外所有活动的参与者，都可以得到相应的证书，以及一些小礼物作为奖励。&lt;/p&gt;

&lt;p&gt;关于优胜者，还设有以下的奖励:&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;奖励&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2016 Google Developer StudyJams 中国结业证书&lt;/td&gt;
&lt;td&gt;参加 StudyJams 活动并顺利完成课程提交apk的学习者将获得此证书&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2016 Google Developer StudyJams 中国优秀组织者/讲师证书&lt;/td&gt;
&lt;td&gt;组委会将按照小组结业率、小组参与人数评选全国前10%，为小组组织者和讲师颁发证书&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2016 Google Developer StudyJams 中国最有影响力证书&lt;/td&gt;
&lt;td&gt;组委会将统计报名阶段推荐人，按照推荐人推荐参与人数和结业率排名选取前10%，为推荐人颁发证书&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2016 Google Developer StudyJams 中国作品奖杯&lt;/td&gt;
&lt;td&gt;在实践阶段中成功上传至GooglePlay的作品即符合条件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2016 Google Developer StudyJams 中国优胜作品奖杯&lt;/td&gt;
&lt;td&gt;组委会将邀请评委会成员一起选取前10%，为优秀作品开发者颁发奖杯&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;blockquote&gt;
&lt;p&gt;仅供参考，最终以 &lt;a href=&quot;http://www.studyjamscn.com/&quot;&gt;活动论坛&lt;/a&gt; 为准。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;课程预览视频&lt;/h3&gt;

&lt;div class=&#39;row&#39;&gt;
    &lt;div class=&#39;col-md-8 col-md-offset-2&#39;&gt;
        &lt;embed src=&quot;http://static.video.qq.com/TPout.swf?vid=u0189bvpj48&amp;auto=0&quot; allowFullScreen=&quot;true&quot; quality=&quot;high&quot; width=&quot;580&quot; height=&quot;480&quot; align=&quot;middle&quot; allowScriptAccess=&quot;always&quot; type=&quot;application/x-shockwave-flash&quot;/&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;h3&gt;课程中包含的 Googler 想对你说的话&lt;/h3&gt;

&lt;div class=&#39;row&#39;&gt;
    &lt;div class=&#39;col-md-8 col-md-offset-2&#39;&gt;
        &lt;embed src=&quot;http://static.video.qq.com/TPout.swf?vid=q0189eptczk&amp;auto=0&quot; allowFullScreen=&quot;true&quot; quality=&quot;high&quot; width=&quot;580&quot; height=&quot;480&quot; align=&quot;middle&quot; allowScriptAccess=&quot;always&quot; type=&quot;application/x-shockwave-flash&quot;/&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;h3&gt;报名&lt;/h3&gt;

&lt;div class=&#39;row&#39;&gt;
    &lt;div class=&#39;col-md-8 col-md-offset-2&#39;&gt;
        &lt;img src=&#39;//img1.liaohuqiu.com/large/8a41f469jw1f27yaqt2kzj21cw0iwwjc.jpg&#39;/&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;如果你愿意付出时间，和别人组队，解答问题，热爱分享，那么就快些加入我们吧。报名地址请点击 &lt;a href=&quot;https://gdgdocs.org/r/liFNzc)&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;全国的 Android 初学者都在等你的加入，希望与你一起成长。&lt;/p&gt;

&lt;p&gt;同时，这个活动的受众群体是零编程基础的朋友，如果你是一位有经验的开发者，活动参与过程中，请给予更多的包容和理解。&lt;/p&gt;

&lt;p&gt;如果针对这个活动有任何问题，你可以邮件到： 
&lt;a href=&quot;mailto:study-jams-china@google.com&quot;&gt;study-jams-china@google.com&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;重要的链接&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;更多的信息，欢迎访问 &lt;a href=&quot;http://www.studyjamscn.com/&quot;&gt;活动论坛&lt;/a&gt; 。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;报名地址请点击 &lt;a href=&quot;https://gdgdocs.org/r/liFNzc)&quot;&gt;这里&lt;/a&gt;。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Make GIF Snapshot for Android APP</title>
      <link>http://liaohuqiu.net/posts/make-gif-for-android-app/</link>
      <pubDate>Sat, 13 Feb 2016 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/posts/make-gif-for-android-app</guid>
      <description>&lt;p&gt;Recently, a lot of friends asked me how to make the GIF snapshots for an anroid APP, like the pictures here: &lt;a href=&quot;https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh&quot;&gt;https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here I will give out 2 methods:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/lepht/licecap&quot;&gt;Licecap&lt;/a&gt; + &lt;a href=&quot;https://www.genymotion.com/&quot;&gt;Genymotion&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/lepht/licecap&quot;&gt;Licecap&lt;/a&gt; can capture the screen easily, it is also very easy to use.&lt;/p&gt;

&lt;p&gt;Your can run your app in &lt;a href=&quot;https://www.genymotion.com/&quot;&gt;Genymotion&lt;/a&gt;, then use &lt;a href=&quot;https://github.com/lepht/licecap&quot;&gt;Licecap&lt;/a&gt; to reocord the screen.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;adb shell&lt;/code&gt; + &lt;a href=&quot;http://ezgif.com/&quot;&gt;ezgif.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If your app can not run in &lt;a href=&quot;https://www.genymotion.com/&quot;&gt;Genymotion&lt;/a&gt;, you can choose this sloution.&lt;/p&gt;

&lt;p&gt;We can use &lt;code&gt;adb shell&lt;/code&gt; to record the snapshots in &lt;code&gt;mp4&lt;/code&gt; format on the device which API level is greater than 19, then convert it into &lt;code&gt;GIF&lt;/code&gt; on &lt;a href=&quot;http://ezgif.com/&quot;&gt;ezgif.com&lt;/a&gt;.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Reocord screen and pull the movie&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;adb shell screenrecord --bit-rate 8000000  /sdcard/tmp-movie.mp4
adb pull /sdcard/tmp-movie.mp4 ~/tmp/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Click &lt;a href=&quot;http://developer.android.com/tools/help/shell.html#screenrecord&quot;&gt;Here&lt;/a&gt; to read more about &lt;code&gt;adb shell&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Convert to GIF&lt;/p&gt;

&lt;p&gt;Once we have the movie, wo can use &lt;a href=&quot;http://ezgif.com/&quot;&gt;ezgif.com&lt;/a&gt; to convert it into GIF&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://ezgif.com/&quot;&gt;ezgif.com&lt;/a&gt; has a lot of awesome features, it can convert movies into GIF and also can edit and optmize the image.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;By the way, I really like &lt;a href=&quot;http://ezgif.com/&quot;&gt;ezgif.com&lt;/a&gt; and I&amp;#39;ve made a donate for it, hope you will like this website.&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;RoboGif&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/izacus/RoboGif&quot;&gt;RoboGif&lt;/a&gt; is a project on GitHub which can do these things for you. &lt;/p&gt;

&lt;p&gt;It calls &lt;code&gt;adb shell&lt;/code&gt; to record the screen then use &lt;code&gt;ffmpeg&lt;/code&gt; to convert this image automatically.&lt;/p&gt;

&lt;p&gt;Thanks for mentioning that &lt;a href=&quot;http://github.com/kyze8439690&quot;&gt;@kyze8439690&lt;/a&gt; :)&lt;/p&gt;

&lt;p&gt;But if you want to edit your GIF: remove some frames, optmize it&amp;#39;s size, &lt;a href=&quot;http://ezgif.com/&quot;&gt;ezgif.com&lt;/a&gt; still you&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>微信助手 Chrome 插件开发手记</title>
      <link>http://liaohuqiu.net/cn/posts/wechat-helper/</link>
      <pubDate>Wed, 13 Jan 2016 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/wechat-helper</guid>
      <description>&lt;p&gt;现在项目已经开源，大家一起来完善这个项目吧。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/liaohuqiu/wechat-helper&quot;&gt;https://github.com/liaohuqiu/wechat-helper&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;项目背景&lt;/h3&gt;

&lt;p&gt;上个礼拜看到 &lt;a href=&quot;https://github.com/0x5e&quot;&gt;@0x5e&lt;/a&gt; 同学的 &lt;a href=&quot;https://github.com/0x5e/wechat-deleted-friends&quot;&gt;wechat-deleted-friends&lt;/a&gt; 项目，提出了一种新的检查自己是否被联系人删除的新方式。真是一个伟大的创新。&lt;/p&gt;

&lt;p&gt;很多人会群发消息，验证自己是否已经被他人删除了。这种方式是非常不好的方式，对联系人是一种骚扰。而目前这个新的方式，优雅了很多。&lt;/p&gt;

&lt;p&gt;原理很简单，利用微信的 Web API 将联系人加入到群组中，如果不是好友关系，无法加入。&lt;/p&gt;

&lt;p&gt;不过遗憾的是，但是原项目是一段 Python 代码，使用起来需要计算机功底，我想让普通用户也能享受这样一种便利。&lt;/p&gt;

&lt;h3&gt;想法&lt;/h3&gt;

&lt;p&gt;当时有两个想法：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;写 Windows 版本，这个用户基数最大，直接 Windows 窗体，安装使用都很方便，.net 系列的技术我也很熟悉。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;写 Chrome 插件，在网页版中直接发送请求，还省去了登录验证的麻烦。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;由于 .net 开发之前做得很长时间了，并且当时是当作一个商业项目做的，实现目前这个项目完全没有挑战，所以我选择了较为有挑战的 Chrome 插件。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;虽然我之前写过一个小插件：&lt;a href=&quot;https://github.com/liaohuqiu/list-sorter&quot;&gt;List Sorter&lt;/a&gt;，不过那个是非常实验性的一个项目，几乎没什么受众。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这次，我想做的是一个可以给大众用的产品。&lt;/p&gt;

&lt;h3&gt;时间&lt;/h3&gt;

&lt;p&gt;除去工作之外，现在我手头有好几个事情在同时进行。&lt;/p&gt;

&lt;p&gt;时间是从上周三开始，本周一开始内部测试，周三正式对外发布。都是业余时间。&lt;/p&gt;

&lt;p&gt;但是我原计划是，周日晚上就发布的，结果项目途中遇到了很多问题，最后是一周时间。&lt;/p&gt;

&lt;h3&gt;做了些什么&lt;/h3&gt;

&lt;p&gt;在这段时间内，完成了：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;分析了项目的定位和独有优势&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Chrome 插件，图形化界面，易于使用&lt;/li&gt;
&lt;li&gt;对于大量好友，保存上次状态，下次继续可以跳过&lt;/li&gt;
&lt;li&gt;可检查黑名单&lt;/li&gt;
&lt;li&gt;项目开源后可作为 Chrome 开发的一个参考&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;项目的 UI 方面的设计，包括&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;导航栏中显示一个按钮&lt;/p&gt;

&lt;p&gt;增加网页版微信入口，方便用户使用。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;左侧菜单的设计&lt;/p&gt;

&lt;p&gt;包括菜单的显示的内容和交互方式，如何尽量不给用户带去骚扰。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;以及一个丑陋的图标&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;所有的交互文案&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;快速地完成了开发，技术点包括&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Webpack 打包方案&lt;/p&gt;

&lt;p&gt;Chrome 插件有三个入口，需要高定制化的打包方案。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Iconfont 技术&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用事件，分离出了 UI 和 具体业务逻辑。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;全套的打包脚本&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;日志分级&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Chrome 插件下 基于 Webpack 的模板使用&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Chrome 插件下的 Google Analytics &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Chrome 插件的 i18n 方案&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;完成了数据统计。&lt;/p&gt;

&lt;p&gt;包括所有页面的访问，按钮点击。用户改进产品。&lt;/p&gt;

&lt;p&gt;一个完善的产品一定要有数据统计。这为产品的改进，功能的好坏提供直接参考。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;测试和发布&lt;/p&gt;

&lt;p&gt;经过多轮测试和改进，最终发布到 Chrome 商店。 &lt;a href=&quot;https://chrome.google.com/webstore/detail/bdfbkchemknlpmmopkncahjdmocnambd/&quot;&gt;https://chrome.google.com/webstore/detail/bdfbkchemknlpmmopkncahjdmocnambd/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;经完成了开源&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/liaohuqiu/wechat-helper&quot;&gt;https://github.com/liaohuqiu/wechat-helper&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;遇到的问题&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;UI 和交互设计，进度慢，反复改进多次。术业有专攻，这部分我确实需要多加锻炼。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;白天要工作。到了晚上（东八区）上午，微信的网络延迟非常高，效率很低。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;缺少测试账号，接口访问受限之后，只能等着，去做其他事情先了。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;操作过于频繁，接口访问受限，现在折衷的办法是记录之前检查过的好友，下次继续的时候跳过。&lt;/p&gt;

&lt;p&gt;只要是 Web API 目前都有可能遇到这个问题。暂时还没想到解法。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;心得体会&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;事情虽小，但是标准不会降低。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;这次开发时间比较短，但是类似： &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Debug / Release 包的区分，日志分级，数据统计，多语言支持等等&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;一般情况下，只有较大规模的产品才会处理这些事情，作为一个小插件，我把这些全部做了一遍。&lt;/p&gt;

&lt;p&gt;项目发布第一天，Google Analytics 显示，有 1000 多的用户。看到同时在线的人数，最高是 80 。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;开源&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;目前，这个项目看起来，还不错。现在将代码开源，希望对大家有所帮助。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/liaohuqiu/wechat-helper&quot;&gt;https://github.com/liaohuqiu/wechat-helper&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Write the code, change the world. Happy coding!&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>appcfg.py: Save the authorization information</title>
      <link>http://liaohuqiu.net/posts/save-authorization-information-for-appcfg/</link>
      <pubDate>Mon, 04 Jan 2016 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/posts/save-authorization-information-for-appcfg</guid>
      <description>&lt;p&gt;If we have mutilple Google accounts and mutilple applications to manager, the applications are under different accounts, we need to manager to authorization information for different accounts.&lt;/p&gt;

&lt;p&gt;For example, we have two applications under two accounts, we want to update the application automatically on the command line for each project.&lt;/p&gt;

&lt;h3&gt;How it works&lt;/h3&gt;

&lt;p&gt;The authorization information will be saved to &lt;code&gt;~/.appcfg_oauth2_tokens&lt;/code&gt; after
a successful authorization.&lt;/p&gt;

&lt;p&gt;Next time appcfg.py will try to use this authorization in this file.&lt;/p&gt;

&lt;p&gt;If we have the previous authorization.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Copy the authorization file to &lt;code&gt;~/.appcfg_oauth2_tokens&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Execute the action.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If we do not have a previous authorization file.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Remove the previous authorization information if exists.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Execute an action to finish the authorization. Update the application, for example.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Backup the authorization file.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;The code&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; exe_cmd&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;root_dir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;config_file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$root_dir&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/.appcfg_oauth2_tokens&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;home_config_file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;~/.appcfg_oauth2_tokens&amp;#39;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# use the previous authorization information&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; -f &lt;span class=&quot;nv&quot;&gt;$config_file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
    exe_cmd &lt;span class=&quot;s2&quot;&gt;&amp;quot;cp $config_file $home_config_file&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    exe_cmd &lt;span class=&quot;s2&quot;&gt;&amp;quot;rm $home_config_file&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# here we update the Application&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# After a successful authorization, the authorization will be saved to&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# ~/.appcfg_oauth2_tokens&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# use --noauth_local_webserver&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Do not run a local web server to&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# handle redirects during OAuth authorization.&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# change this line do the things you want&lt;/span&gt;
exe_cmd &lt;span class=&quot;s2&quot;&gt;&amp;quot;appcfg.py update app.yaml --noauth_local_webserver&amp;quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# save authorization information&lt;/span&gt;
exe_cmd &lt;span class=&quot;s2&quot;&gt;&amp;quot;cp $home_config_file $config_file&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Here is the code on GitHub: &lt;a href=&quot;https://github.com/liaohuqiu/appcfg.py-save-authorization&quot;&gt;https://github.com/liaohuqiu/appcfg.py-save-authorization&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Centering List Items Horizontally</title>
      <link>http://liaohuqiu.net/posts/centering-list-items-horizontally/</link>
      <pubDate>Sat, 02 Jan 2016 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/posts/centering-list-items-horizontally</guid>
      <description>&lt;p&gt;There are two simple ways to center list item horizontally.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;display: inline-block &amp;amp; text-align: center&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;.list-container {
    text-align: center;
    .list-item {
        display: inline-block;
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It&amp;#39;s from &lt;a href=&quot;https://css-tricks.com/centering-list-items-horizontally-slightly-trickier-than-you-might-think/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;width: fit-content &amp;amp; margin: 0 auto;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;.list-centered {
    margin: 0 auto;
    width: fit-content;
    width: -moz-fit-content;
    width: -webkit-fit-content;

    .list-item {
        float: left;
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It&amp;#39;s from &lt;a href=&quot;https://martinwolf.org/2013/04/23/centered-fluid-width-navigation-with-floating-links-thanks-to-fit-content/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Notice: The width of the clildren can not be percentage;&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Bye2015Hi2016 —— 他年他月再相见</title>
      <link>http://liaohuqiu.net/cn/posts/2015/</link>
      <pubDate>Thu, 31 Dec 2015 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/2015</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;本文投递到了: &lt;a href=&quot;https://github.com/winter-fall/Bye2015Hi2016/issues/74&quot;&gt;《Bye2015Hi2016》&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5&gt;更新:&lt;/h5&gt;

&lt;p&gt;李商隐的代表作《锦瑟》，朦胧难解。大量借用典故，用比兴等手法，情真意长，感人至深。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;锦瑟
锦瑟无端五十弦，一弦一柱思华年。
庄生晓梦迷蝴蝶，望帝春心托杜鹃。
沧海月明珠有泪，蓝田日暖玉生烟。
此情可待成追忆，只是当时已惘然。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;过去一年，发生了很多事情。有太多我感念的人，有太过我感叹的事。下文中的 &lt;strong&gt;&lt;code&gt;你&lt;/code&gt;&lt;/strong&gt;，指的是：是亲情，是爱情，是友情；是温暖，是理想，是明天，是我向往的一切美好。并无特定具指，更不指代女孩。&lt;/p&gt;

&lt;p&gt;谢谢各位给我张罗介绍女朋友的同学了。&lt;/p&gt;

&lt;hr&gt;

&lt;blockquote&gt;
&lt;p&gt;我的醉后言语，关于过去，关于未来，关于捉摸不定的你。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;去年今日&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;去年的这个光景，我应该是和同事们正在去国贸烤翅的路上，那个晚上几瓶蒙古王下肚，我和东极，奔跑在通惠河畔。&lt;/p&gt;

&lt;p&gt;在通惠河辅路，迎面遇上了岁末的末班车。那是 6 号车，很和蔼的杜师傅。&lt;/p&gt;

&lt;p&gt;空空的班车，我们坐在最后一排。理想如同刚下肚的烈酒，在内中燃烧；一时间，似乎忘记了所有的不自由，所有的不快乐。&lt;/p&gt;

&lt;p&gt;呼啸的岁月，挟裹着我们一路向前。过去一年啊，有太多的变数，太多的故事，我将如何讲给你听？&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;我想留一张纸给你，告诉你我一生的际遇。&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;今年夏天&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;今年夏天，我反复练习陶笛。&lt;/p&gt;

&lt;p&gt;关于陶笛的故事，关于这个夏天的旅行，将来我们把酒言欢，你一定要听我讲完我的醉后言语。&lt;/p&gt;

&lt;p&gt;而那个夏天，我总是一壶酒，一本书，一支曲；&lt;/p&gt;

&lt;p&gt;而那个夏天，只有杜师傅和我河边有一句没一句地聊着：&lt;/p&gt;

&lt;p&gt;他说他现在自己一个人。我送了一盆铜钱草给他。&lt;/p&gt;

&lt;p&gt;我说我要走了，他说：哦。啊？你要走了？那不行，周末我过来找你一趟，我请你吃饭。&lt;/p&gt;

&lt;p&gt;我说不用了，周一我过来和你道别，以后我会经常回来的。&lt;/p&gt;

&lt;p&gt;我会经常回来的。是啊。经常就是不知何年何月。&lt;/p&gt;

&lt;p&gt;而现在是，我思念的人儿们，现在都天各一方了，思念说不出口，想念说不出口。夜深人静的时候，看看照片，问一句：你，还好么。&lt;/p&gt;

&lt;p&gt;这么多年以来，一直匆匆在路上，匆匆相遇，匆匆告别。离开之后才发现，回头是那么地艰难和无力。&lt;/p&gt;

&lt;p&gt;这一年，我认识的朋友们呐，你们还好么。我多想和你畅聊，多想去你的家乡，多想去拜望你的父母。&lt;/p&gt;

&lt;p&gt;周朝的苹果，小智的烈酒，雷子的海滩，王帅家的田野！&lt;/p&gt;

&lt;p&gt;国征啊，刘舒，你们还好么；老大啊，福星和小星，你们都有过着你自己想过的生活吗。&lt;/p&gt;

&lt;p&gt;所有认识的朋友们呐，你们的愿望都实现了吗！&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;我的骄傲&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;现如今，弟弟在美国东海岸，我在西海岸，妈妈在东八区，父亲在世界的尽头。&lt;/p&gt;

&lt;p&gt;今年唯一值得骄傲的事情，那就是，在母亲 50 岁的时候，我和我弟弟，双双陪伴在了她的身边。&lt;/p&gt;

&lt;p&gt;母亲的微笑，我们的骄傲。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Bye2015Hi2016&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;如果说这是 &lt;a href=&quot;https://github.com/winter-fall/Bye2015Hi2016&quot;&gt;#Bye2015Hi2016#&lt;/a&gt; 的寄语，更像是我对自己的喃喃自语。&lt;/p&gt;

&lt;p&gt;述不尽往事，言不尽相思。『为你夜夜梦深深，为你留在梦尽头』, 而你却不知。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hello it&amp;#39;s me, can you hear me, I&amp;#39;m in California dreaming about who we used to be. &lt;/p&gt;

&lt;p&gt;When we are young and free.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;再见，我的朋友们。&lt;/p&gt;

&lt;p&gt;再见，期待中的雨未落。&lt;/p&gt;

&lt;p&gt;再见，我飞奔在环路的日子。&lt;/p&gt;

&lt;p&gt;这世界的美好无比，全是你写的一字一句，留我年复一年朗读。&lt;/p&gt;

&lt;p&gt;晚安。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;2015 年 12 月 31 日，凌晨 4 时，和我的百合花一起，于 California。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>jekyll-multiple-languages 2.0 is released now</title>
      <link>http://liaohuqiu.net/posts/jekyll-multiple-languages-2.0/</link>
      <pubDate>Sat, 26 Dec 2015 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/posts/jekyll-multiple-languages-2.0</guid>
      <description>&lt;h5&gt;&lt;a href=&quot;https://github.com/liaohuqiu/jekyll-multiple-languages&quot;&gt;jekyll-multiple-languages 2.0&lt;/a&gt; is released now.&lt;/h5&gt;

&lt;p&gt;In the past half year, I was so busy with my work and life that I did not notice that this plugin was broken with Jekyll 3.&lt;/p&gt;

&lt;p&gt;Thank &lt;a href=&quot;https://github.com/bobgle&quot;&gt;@bobgle&lt;/a&gt; for reporting this &lt;a href=&quot;https://github.com/liaohuqiu/jekyll-multiple-languages/issues/11&quot;&gt;issue&lt;/a&gt;, but I was still have no time to fix it.&lt;/p&gt;

&lt;p&gt;Thanks to the holiday in the past Christmas, I fixed this issue and most of the open issues.&lt;/p&gt;

&lt;p&gt;In this release, I&amp;#39;ve tried to make this plugin simpler and easier to use:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Removed some some useless variables and configurations which are vague, for example:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;url_no_language&lt;/code&gt;, &lt;code&gt;no_fill_default_content&lt;/code&gt;, &lt;code&gt;fill_default_content&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Rewrote the document site and the sample project for this plugin.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyll-langs.liaohuqiu.net/&quot;&gt;http://jekyll-langs.liaohuqiu.net/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Updated the sample project, make sure it contains all the futures in this plugin.&lt;/p&gt;

&lt;p&gt;Sample project: &lt;a href=&quot;https://github.com/liaohuqiu/jekyll-multiple-languages-sample/tree/master&quot;&gt;https://github.com/liaohuqiu/jekyll-multiple-languages-sample/tree/master&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sample site: &lt;a href=&quot;http://jekyll-langs-sample.liaohuqiu.net/&quot;&gt;http://jekyll-langs-sample.liaohuqiu.net/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Happy coding!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>十年磨一剑: 开发者的孤独与伟大</title>
      <link>http://liaohuqiu.net/cn/posts/roman-wasnot-built-in-a-day/</link>
      <pubDate>Thu, 03 Dec 2015 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/roman-wasnot-built-in-a-day</guid>
      <description>&lt;p&gt;美国西海岸时间，2015 年 12 月 3 号。&lt;/p&gt;

&lt;p&gt;php.net 挂出了 《&lt;a href=&quot;http://php.net/archive/2015.php#id2015-12-03-1&quot;&gt;PHP 7.0.0 Released&lt;/a&gt;》的 Release Note，PHP7 终于正式发布！有幸在社区，目睹整个过程，深感过程之不易。曾经一度，我还以为项目会流产，而现在终于发布，带来了 100% 的性能提升和许多新特性。从 2014 年初开始到现在，两年时间。&lt;/p&gt;

&lt;p&gt;同时，今天早上，&lt;a href=&quot;https://github.com/apple/swift/&quot;&gt;Swift&lt;/a&gt; 开源了。一天下来，已经将近 10000 个 star。从早上9点到现在，这个项目异常活跃，一整天都在不停地 merge。&lt;/p&gt;

&lt;p&gt;项目现在已经有 28000+ 个提交，回溯提交历史，第一个提交，来自于 2010 年，所用的版本管理系统，还是 svn。人们纷纷在&lt;a href=&quot;https://github.com/apple/swift/commit/18844bc65229786b96b89a9fc7739c0fc897905e&quot;&gt;第一个提交&lt;/a&gt;下，用各国文字评论和留言。Swift 项目，从第一行代码到 2014 年发布，四年时间。&lt;/p&gt;

&lt;p&gt;Swift 和 PHP7 无疑是伟大的项目。发布或者开源之后，引起了业界巨大的轰动，随之而来的，可以想象的，是各种报道，新闻，项目看起来光鲜无比。&lt;/p&gt;

&lt;p&gt;然而又有多少人知道，这些项目的开发者的艰辛和寂寞？&lt;/p&gt;

&lt;p&gt;看着 Swift 项目开发者们时疏时密的提交频率，以及 2014 年发布之前和发布之后截然不同的提交频率，我想象着他们遇到的困难。而在 2013 年之前，长达将近三年的时间里，一直只有 &lt;a href=&quot;https://github.com/lattner&quot;&gt;@lattner&lt;/a&gt; 和 &lt;a href=&quot;https://github.com/DougGregor&quot;&gt;@DougGregor&lt;/a&gt; 两个人，我无法想象他们的孤独和寂寞。&lt;/p&gt;

&lt;div class=&#39;row&#39;&gt;
&lt;div class=&#39;col-md-8 col-md-offset-2&#39;&gt;
&lt;img src=&#39;//img1.liaohuqiu.com/large/599e230bgw1eynf3qvyr1j20s70iz77r.jpg&#39; /&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;而对于 PHP7：项目早期成员的辛苦的，甚至夜以继日的工作；PHP NG 是否要合并的纷争；PHP7 长达将近两年的开发。相信只有很少的，也许只是订阅了邮件组的那些人知道。&lt;/p&gt;

&lt;p&gt;我们都渴望做出伟大的事情，向往远方，向往海阔天空。然而十年磨一剑，又有多少人，能够忍受日复一日的寂寞，长长的路途，无边的寂寞？&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://weibo.com/laruence&quot;&gt;@Laruence&lt;/a&gt; 说：PHP7 要发布了，他们只是在 twitter 相互庆祝一下罢了。因为他们中的很多人，甚至都没见过面。&lt;/p&gt;

&lt;div class=&#39;row&#39;&gt;
&lt;div class=&#39;col-md-5 col-md-offset-3&#39;&gt;
&lt;img src=&#39;//img1.liaohuqiu.com/large/599e230bgw1eynm9leb0uj20ku112n34.jpg&#39; /&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>我们辛勤劳作的母亲</title>
      <link>http://liaohuqiu.net/cn/posts/an-apple/</link>
      <pubDate>Wed, 11 Nov 2015 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/an-apple</guid>
      <description>&lt;p&gt;感谢大家的帮忙，好多朋友过来是找购买链接的，我放到最前面吧：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://detail.koudaitong.com/show/goods?alias=1yf1q1eutunvu&amp;amp;redirect_count=2&amp;amp;sf=wx_sm&quot;&gt;http://detail.koudaitong.com/show/goods?alias=1yf1q1eutunvu&amp;amp;redirect_count=2&amp;amp;sf=wx_sm&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;我需要一杯酒，来把这个事情说完。&lt;/p&gt;

&lt;p&gt;之前代码家在朋友圈转了一个帖子《买苹果的程序猿》，时间是 10 月 20 号吧，19 号刚落地，时差还没倒过来，半夜睡不着迷迷糊糊看完了，没什么印象了。&lt;/p&gt;

&lt;p&gt;再次看到这个帖子的时候，是前几天了。帖子是&lt;a href=&quot;http://weibo.com/u/1605961742&quot;&gt;@周朝同学&lt;/a&gt;写的。&lt;a href=&quot;http://weibo.com/u/1605961742&quot;&gt;@周朝同学&lt;/a&gt;帮着组织北京的 GDG，他邀请我做个分享，无奈我不在国内，无法参加。&lt;/p&gt;

&lt;p&gt;帖子里面讲到：家里种了些苹果，一年到头辛苦劳作，指望着卖苹果能赚些钱了。但是自己没有销路，收购的中间商又像往年一样压价。&lt;/p&gt;

&lt;p&gt;在农村，收入来源是那么的有限，一年到头的希望，最终幻灭成泡影，在农村长大的我，深知这其中的无奈，这其中的绝望。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://weibo.com/u/1605961742&quot;&gt;@周朝同学&lt;/a&gt;，这个老实憨厚的北方汉子，想了很多办法，他联系了熊猫优选，也在朋友圈微信群宣传。但我看到时，仍旧销量寥寥。&lt;/p&gt;

&lt;p&gt;那是上周日的旧金山的夜晚，下着寒冷的雨。距离 10 月 20 号，已经过去了好长时间了。气温渐降，我不知道那树上的苹果现在如何了。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;是啊。天气渐渐寒冷，电话中母亲的声音略带沙哑，年过五旬的她，还每天挣扎着要去山里劳作，说是想为我减轻一些负担。每每劝着，不要再去奔忙了，不要再去劳作了，钱我会想办法慢慢赚到的。&lt;/p&gt;

&lt;p&gt;因为一直对朋友们也不吝啬，出手也大方，朋友们都戏称我为秋百万。但空空的行囊，怕是无人能知。&lt;/p&gt;

&lt;p&gt;想必周朝，也和我一样。&lt;/p&gt;

&lt;p&gt;想必很多人，也都和我一样。&lt;/p&gt;

&lt;p&gt;我们远离家乡，坐在冬天有暖气，夏天有空调的办公室里；过着看似体面的，看似令人羡慕的生活，但实际如何大家也都知道。年迈的父母不管寒暑，仍旧在田间劳作，为的是单纯地想为子女减轻些负担。&lt;/p&gt;

&lt;p&gt;我们能写很好的代码，设计优秀的架构，我们构建的应用，为成千上万的人服务，但父母需要我们帮忙的时候，我们却又是如此的无能无力。&lt;/p&gt;

&lt;p&gt;唉！&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://weibo.com/u/1605961742&quot;&gt;@周朝同学&lt;/a&gt;的苹果，目前还剩1000多箱。&lt;/p&gt;

&lt;div class=&#39;row&#39;&gt;
&lt;div class=&#39;col-md-5 col-md-offset-3&#39;&gt;
&lt;img src=&#39;//img1.liaohuqiu.com/large/599e230bgw1exx65njxoqj20ih0wu77x.jpg&#39; /&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/div&gt;
&lt;div class=&#39;row&#39;&gt;
&lt;div class=&#39;col-md-5 col-md-offset-3&#39;&gt;
&lt;img src=&#39;//img1.liaohuqiu.com/large/599e230bgw1exx65p3ubuj20ih0wujvl.jpg&#39; /&gt;
&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;
&lt;div class=&#39;row&#39;&gt;
&lt;div class=&#39;col-md-5 col-md-offset-3&#39;&gt;
&lt;img src=&#39;//img1.liaohuqiu.com/large/599e230bgw1exx65qtcdij20ih0wuwiv.jpg&#39; /&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;作为朋友，能做的也有限，今天买了三箱苹果，打算送给微博上的朋友。希望可以帮他做下宣传，^_^ ：&lt;/p&gt;

&lt;div class=&#39;row&#39;&gt;
&lt;div class=&#39;col-md-5 col-md-offset-3&#39;&gt;
&lt;img src=&#39;//img1.liaohuqiu.com/large/599e230bgw1exx65s9aa3j20ih0wugop.jpg&#39; /&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/div&gt;
&lt;div class=&#39;row&#39;&gt;
&lt;div class=&#39;col-md-5 col-md-offset-3&#39;&gt;
&lt;img src=&#39;//img1.liaohuqiu.com/large/599e230bgw1exx65u1tklj20ih0wun29.jpg&#39; /&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;我今年怕是没机会吃到你们家的苹果了，&lt;a href=&quot;http://weibo.com/u/1605961742&quot;&gt;@周朝同学&lt;/a&gt;，等我回来。&lt;/p&gt;

&lt;div class=&#39;row&#39;&gt;
&lt;div class=&#39;col-md-5 col-md-offset-3&#39;&gt;
&lt;img src=&#39;//img1.liaohuqiu.com/large/599e230bgw1exx65xet71j20qo0zku0x.jpg&#39; /&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;各位朋友，各位同学，如果可以，请帮我分享这个帖子，希望&lt;a href=&quot;http://weibo.com/u/1605961742&quot;&gt;@周朝同学&lt;/a&gt;的苹果可以早日卖完，希望母亲们开心，幸福。&lt;/p&gt;

&lt;p&gt;下面的原文链接，可以直接购买。谢谢各位。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://detail.koudaitong.com/show/goods?alias=1yf1q1eutunvu&amp;amp;redirect_count=2&amp;amp;sf=wx_sm&quot;&gt;http://detail.koudaitong.com/show/goods?alias=1yf1q1eutunvu&amp;amp;redirect_count=2&amp;amp;sf=wx_sm&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;这个是微信群，&lt;a href=&quot;http://weibo.com/u/1605961742&quot;&gt;@周朝同学&lt;/a&gt; 在里面：&lt;/p&gt;

&lt;div class=&#39;row&#39;&gt;
&lt;div class=&#39;col-md-5 col-md-offset-3&#39;&gt;
&lt;img src=&#39;//img1.liaohuqiu.com/large/599e230bgw1exx7bq6c0wj20io0ovwhd.jpg&#39; /&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;我的微信公众号：&lt;/p&gt;

&lt;div class=&#39;row&#39;&gt;
&lt;div class=&#39;col-md-5 col-md-offset-3&#39;&gt;
&lt;img src=&#39;//img1.liaohuqiu.com/large/599e230bgw1exx6fk70kpj20by0bygmg.jpg&#39; /&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>再谈 Android API 兼容性处理</title>
      <link>http://liaohuqiu.net/cn/posts/android-api-compat-guide/</link>
      <pubDate>Fri, 23 Oct 2015 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/android-api-compat-guide</guid>
      <description>&lt;p&gt;在 &lt;a href=&quot;http://www.liaohuqiu.net/cn/posts/using-high-api-level-method-compatibly/&quot;&gt;Android
高版本API方法在低版本系统上的兼容性处理&lt;/a&gt; 一文中提到了简单的 API 兼容性处理。&lt;/p&gt;

&lt;p&gt;简单的兼容，if else 分支就可以，复杂的兼容就没这么简单了。在 &lt;code&gt;android.support.v4.view.ViewCompat&lt;/code&gt; 中有很好的一个复杂的兼容性处理的例子。&lt;/p&gt;

&lt;p&gt;本文以 ClipboardManager 的兼容性处理为例，阐述兼容性处理的一般方法，即：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; 抽象。即抽象出通用的方法或者接口。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;根据情况&lt;/strong&gt;对各个API进行实现。&lt;/p&gt;

&lt;p&gt;之所以是&lt;strong&gt;根据情况&lt;/strong&gt;，是因为在不同的 API level 中，可能无法做实现，或者花费代价巨大。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;运行时，根据 API level 选择不同的 API level 对应的实现。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;ClipboardManager&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在 API level &amp;lt; 11 之前，ClipboardManager 在 &lt;code&gt;android.text&lt;/code&gt; 中，功能有限:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ClipboardManager&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;CharSequence&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CharSequence&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hasText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;而在 API level &amp;gt;= 11 之后，&lt;code&gt;android.text.ClipboardManager&lt;/code&gt; 已经弃用，&lt;code&gt;Context.getSystemService(Context.CLIPBOARD_SERVICE)&lt;/code&gt; 返回的是 &lt;code&gt;android.content.ClipboardManager&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;功能也丰富了许多，比如有了 &lt;code&gt;OnPrimaryClipChangedListener&lt;/code&gt; 可以监控剪切板变化了：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;OnPrimaryClipChangedListener&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onPrimaryClipChanged&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;ClipboardManager&lt;/code&gt; 中也增加了相关的方法：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ClipboardManager&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;addPrimaryClipChangedListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OnPrimaryClipChangedListener&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;what&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;removePrimaryClipChangedListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OnPrimaryClipChangedListener&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;what&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;兼容到 API level 1&lt;/h3&gt;

&lt;p&gt;为了在所有的 API level 上方便使用 &lt;code&gt;ClipboardManager&lt;/code&gt; 需要对其进行兼容性处理。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;抽象：&lt;/p&gt;

&lt;p&gt;我们希望所有 API level 上都可以监听剪切板变化，即都有 &lt;code&gt;OnPrimaryClipChangedListener&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;因 &lt;code&gt;android.content.ClipboardManager.OnPrimaryClipChangedListener&lt;/code&gt; 仅在 API level 11 及其以后中才有，故我们需要重新定义一个 API level 无关的接口：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;srain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;cube&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;clipboardcompat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;OnPrimaryClipChangedListener&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onPrimaryClipChanged&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;同样，&lt;code&gt;ClipboardManager&lt;/code&gt; 我们也定义一个 API level 无关的接口： &lt;code&gt;ClipboardManagerCompat&lt;/code&gt; ：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;srain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;cube&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;clipboardcompat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ClipboardManagerCompat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;addPrimaryClipChangedListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OnPrimaryClipChangedListener&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;removePrimaryClipChangedListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OnPrimaryClipChangedListener&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;CharSequence&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CharSequence&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hasText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;实现：&lt;/p&gt;

&lt;p&gt;在 API level 11 及其之后，简单包装一下即可。API level 11 之前，对 &lt;code&gt;addPrimaryClipChangedListener&lt;/code&gt; 和 &lt;code&gt;removePrimaryClipChangedListener&lt;/code&gt; 需要重新做实现。&lt;/p&gt;

&lt;p&gt;此处采用的是间隔为 1 秒的定时器调用 &lt;code&gt;getText&lt;/code&gt; 方法进行检查。&lt;/p&gt;

&lt;p&gt;具体实现细节，可参考&lt;a href=&quot;https://github.com/liaohuqiu/android-ClipboardManagerCompat&quot;&gt;源码&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;运行时，根据 API level 不同选择不同实现：&lt;/p&gt;

&lt;p&gt;采用一个 Factory 实现，如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ClipboardManagerCompatFactory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ClipboardManagerCompat&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;VERSION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SDK_INT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;VERSION_CODES&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;HONEYCOMB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ClipboardManagerCompatImplHC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ClipboardManagerCompatImplHCBefore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;结论&lt;/p&gt;

&lt;p&gt;嗯，就是这样。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/liaohuqiu/android-ClipboardManagerCompat&quot;&gt;源码&lt;/a&gt; 在这里。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;关于 Google Support Library 风格的兼容性处理&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://weibo.com/u/1869137113&quot;&gt;杨辉&lt;/a&gt; 同学提到 Google Support Library 风格的兼容性处理。如果是工具类或者其他构造参数是 API level 无关的类时，用 Google Support Library 风格的兼容性处理。&lt;/p&gt;

&lt;p&gt;以下为 &lt;a href=&quot;http://weibo.com/u/1869137113&quot;&gt;杨辉&lt;/a&gt; 同学提到的内容，括号内是我加的注释。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;先是提供一个统一入口：&lt;code&gt;ClipboardMangerCompat&lt;/code&gt;，里面有一些需要兼容的 static 函数，第一个参数为 &lt;code&gt;ClipboardManager&lt;/code&gt; 实例（注意，此时，该实例应该是 API level 无关的，但本例子中 &lt;code&gt;ClipboardManager&lt;/code&gt; 是和 API level 相关的）。&lt;/p&gt;

&lt;p&gt;内部针对 &lt;code&gt;ClipboardManagerCompatImpl&lt;/code&gt; 接口实现各个版本的实现，如 &lt;code&gt;HCClipboardManagerCompatImpl&lt;/code&gt;，&lt;code&gt;BaseClipboardManagerCompatImpl&lt;/code&gt;。&lt;code&gt;ClipboardManagerCompat&lt;/code&gt; 内部再根据 API level 实现对应实例，并利用这种暴露接口对应调用，如下:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;static final ClipboardManagerImpl IMPL;

static {
    final int version = android.os.Build.VERSION.SDK_INT;
    if (version &amp;gt;= 11) {
        IMPL = new HCClipboardManagerCompatImpl();
    } else {
        IMPL = new BaseClipboardManagerCompatImpl();
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;

&lt;p&gt;感谢 &lt;a href=&quot;http://weibo.com/u/1869137113&quot;&gt;杨辉&lt;/a&gt; 同学：&lt;/p&gt;

&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>Android 悬浮窗的小结</title>
      <link>http://liaohuqiu.net/cn/posts/android-windows-manager/</link>
      <pubDate>Thu, 22 Oct 2015 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/android-windows-manager</guid>
      <description>&lt;p&gt;&lt;a href=&quot;http://weibo.com/2951317192&quot;&gt;睡不着起不来的万先生&lt;/a&gt; 的 &lt;a href=&quot;http://www.jianshu.com/p/167fd5f47d5c&quot;&gt;Android无需权限显示悬浮窗, 兼谈逆向分析app&lt;/a&gt; 对 UC 浏览器的弹窗实现做了详尽的分析。&lt;/p&gt;

&lt;p&gt;我看了顺手做了个小 &lt;a href=&quot;https://github.com/liaohuqiu/android-UCToast&quot;&gt;Demo&lt;/a&gt; ，发布之后收到反馈说并非所有机型都可以显示悬浮窗。&lt;a href=&quot;http://weibo.com/2951317192&quot;&gt;睡不着起不来的万先生&lt;/a&gt; 也收到了类似的反馈，并第一时间(凌晨2，3点)做了研究并给出了一个结论。我资质愚钝，在他之后，继续花了很多时间，想把这个事情弄清楚，现在算弄明白了，这里小结一下。&lt;/p&gt;

&lt;h3&gt;目的&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/liaohuqiu/android-UCToast&quot;&gt;Demo&lt;/a&gt; 和 UC 浏览器的目的都是使用 &lt;code&gt;WindowManager&lt;/code&gt; 在尽可能多的机器上，在任何应用中（包括在桌面时），显示悬浮窗（System Overlay View)，并且这些 View 需要可以接收触摸（点击）和按键事件，点击悬浮窗可以跳转进入到应用。&lt;/p&gt;

&lt;h3&gt;总结&lt;/h3&gt;

&lt;p&gt;总结起来:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;使用 &lt;code&gt;type&lt;/code&gt; 值为 &lt;code&gt;WindowManager.LayoutParams.TYPE_PHONE&lt;/code&gt; 和 &lt;code&gt;WindowManager.LayoutParams.TYPE_SYSTEM_ALERT&lt;/code&gt; 需要申请 &lt;code&gt;android.permission.SYSTEM_ALERT_WINDOW&lt;/code&gt; 权限，否则无法显示，报错：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;E/AndroidRuntime: android.view.WindowManager$BadTokenException: Unable to add window android.view.ViewRoot$W@b64b5458 -- permission denied for this window type
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;type&lt;/code&gt; 值为 &lt;code&gt;WindowManager.LayoutParams.TYPE_TOAST&lt;/code&gt; 显示的 System overlay view 不需要权限，即可在任何平台显示。&lt;/p&gt;

&lt;p&gt;但仅在 API level &amp;gt;= 19 时可以达到目的。API level 19 以下因无法接收无法接收触摸（点击)和按键事件，故无法达到目的。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于 API level &amp;lt; 19 的机器（MIUI除外），想要达到目的，需要:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; 要有 &lt;code&gt;android.permission.SYSTEM_ALERT_WINDOW&lt;/code&gt; 权限&lt;/li&gt;
&lt;li&gt; 将 &lt;code&gt;type&lt;/code&gt; 设置为 &lt;code&gt;WindowManager.LayoutParams.TYPE_PHONE&lt;/code&gt; 或者 &lt;code&gt;WindowManager.LayoutParams.TYPE_SYSTEM_ALERT&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MIUI V5&lt;/p&gt;

&lt;p&gt;在给悬浮窗权限之后，表现同 3 。但是，不给悬浮窗权限时，应用在前台时，却&lt;strong&gt;可以&lt;/strong&gt;显示。这点非常不一样。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;最后&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;为什么采用 &lt;code&gt;TYPE_TOAST&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;API level 19 之后，&lt;code&gt;TYPE_SYSTEM_ALERT&lt;/code&gt; 就可以达到 &lt;code&gt;TYPE_SYSTEM_ALERT&lt;/code&gt; 效果（即可以达到&lt;strong&gt;目的&lt;/strong&gt;）。&lt;/p&gt;

&lt;p&gt;但在 API level 23 (Android 6.0) 上，悬浮窗权限也单独弄出来了，需要到单独开启，这个处理和现在 Smartisan 还有小米类似。&lt;/p&gt;

&lt;p&gt;故采用 &lt;code&gt;TYPE_TOAST&lt;/code&gt; 能让用不开启悬浮窗权限的情况下，也能显示。为的就是尽量少请求权限。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;为什么 API level 19 之后 &lt;code&gt;TYPE_TOAST&lt;/code&gt; 可以接受事件&lt;/p&gt;

&lt;p&gt;&lt;code&gt;PhoneWindowManager.adjustWindowParamsLw()&lt;/code&gt;，API level 19 后做了调整。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;当我们使用 &lt;code&gt;TYPE_TOAST&lt;/code&gt;, Android 会偷偷给我们加上 &lt;code&gt;FLAG_NOT_FOCUSABLE&lt;/code&gt; 和 &lt;code&gt;FLAG_NOT_TOUCHABLE&lt;/code&gt; , 4.0.1 开始, 会额外再去掉 &lt;code&gt;FLAG_WATCH_OUTSIDE_TOUCH&lt;/code&gt;。 这样真的是什么事件都没了。&lt;/p&gt;

&lt;p&gt;而4.4开始, &lt;code&gt;TYPE_TOAST被移除了&lt;/code&gt;。所以从 4.4 开始, 使用 &lt;code&gt;TYPE_TOAST&lt;/code&gt; 的同时还可以接收触摸事件和按键事件了, 而4.4以前只能显示出来, 不能交互。&lt;/p&gt;

&lt;p&gt;来自&lt;a href=&quot;http://weibo.com/2951317192&quot;&gt;睡不着起不来的万先生&lt;/a&gt; 的 &lt;a href=&quot;http://www.jianshu.com/p/634cd056b90c&quot;&gt;Android悬浮窗使用TYPE_TOAST的小结&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;争取做到极致&lt;/p&gt;

&lt;p&gt;在弹窗这个事情上，UC 也算做得挺极致了。&lt;/p&gt;

&lt;p&gt;发现问题，&lt;a href=&quot;http://weibo.com/2951317192&quot;&gt;睡不着起不来的万先生&lt;/a&gt; 第一时间探求真相，并本着认真负责的态度立刻更新了博客。&lt;/p&gt;

&lt;p&gt;我也修改了 &lt;a href=&quot;https://github.com/liaohuqiu/android-UCToast&quot;&gt;Demo&lt;/a&gt; 将 API level 兼容到了 9 。 为此还专门做了 &lt;code&gt;ClipboardManager&lt;/code&gt; 的兼容。&lt;/p&gt;

&lt;p&gt;由于手头没机器，幸得群里 &lt;a href=&quot;http://weibo.com/u/2319578217&quot;&gt;脉脉不嘚語&lt;/a&gt; &lt;a href=&quot;http://weibo.com/u/1649198280&quot;&gt;付国征&lt;/a&gt; 等朋友的帮助，期间也一直和 &lt;a href=&quot;http://weibo.com/2951317192&quot;&gt;睡不着起不来的万先生&lt;/a&gt; 一直交流。&lt;/p&gt;

&lt;p&gt;现在这个问题，我们已经最大的能力，给弄清楚了。谢谢上面提到的几个朋友的帮助。&lt;/p&gt;

&lt;p&gt;非常感谢，尤其是 &lt;a href=&quot;http://weibo.com/2951317192&quot;&gt;睡不着起不来的万先生&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>React Native: Android 的打包</title>
      <link>http://liaohuqiu.net/cn/posts/react-native-android-package/</link>
      <pubDate>Mon, 28 Sep 2015 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/react-native-android-package</guid>
      <description>&lt;p&gt;&lt;a href=&quot;http://www.liaohuqiu.net/cn/posts/react-native-1/&quot;&gt;上一篇文章&lt;/a&gt;提到了 React Native 的环境配置和基本的开发调试。本文介绍 React Native 中的资源打包，重点介绍使用 react-native-gradle 插件进行 Android APP 的打包。&lt;/p&gt;

&lt;h3&gt;关于打包&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;打包目的&lt;/p&gt;

&lt;p&gt;除了热部署，我们知道，APP 运行的时候不应再从 Debug Server 获取资源。分发应用时 js 资源应该被打包到 APP 中。&lt;/p&gt;

&lt;p&gt;另外对外发布的安装包，资源中的业务代码的混淆也是必须的。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;React Native 打包方式&lt;/p&gt;

&lt;p&gt;目前 iOS 应用可用 &lt;code&gt;react-native bundle&lt;/code&gt; 命令进行打包，同时对 Android 的支持工作也已经开始了。但在目前 npm 中最新的版本(0.11.4)暂时还不支持。&lt;a href=&quot;https://github.com/facebook/react-native/tree/0ff3a421c9adbe4137e07e158c9812062b34ea5a/local-cli%2Fbundle.js&quot;&gt;最新的代码中&lt;/a&gt;看似已经支持了，但还没最终发布。等正式发布支持了，我另写一篇文章介绍使用 &lt;code&gt;react-native bundle&lt;/code&gt; 命令进行打包。&lt;/p&gt;

&lt;p&gt;目前对于 Android 的 React Native 应用，可用 react-native-gradle 插件进行打包。该插件灵活配置打包参数，使用 Gradle Task 将资源打包到资源文件夹。&lt;/p&gt;

&lt;p&gt;但&lt;a href=&quot;https://github.com/facebook/react-native/issues/2786&quot;&gt;官方计划使用 &lt;code&gt;react-native bundle&lt;/code&gt; 命令进行打包，并且有放弃对 Gradle 插件支持的倾向&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;都使用 &lt;code&gt;react-native bundle&lt;/code&gt; 进行打包，对开发人员来说，只要掌握一套打包命令即可。但是对于 Android 的开发者来说，插件方式似乎更符合平时的开发习惯。各位自行取舍。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;React Native 开发目前非常活跃，代码变迭频繁，本文所讨论的代码版本为: &lt;a href=&quot;https://github.com/facebook/react-native/tree/0ff3a421c9adbe4137e07e158c9812062b34ea5a&quot;&gt;https://github.com/facebook/react-native/tree/0ff3a421c9adbe4137e07e158c9812062b34ea5a&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;本文中目前所指的时间为: 2015年09月28日20点，太平洋时间；中国2015年09月29日11点。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;react-native-gradle 插件&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;编译插件&lt;/p&gt;

&lt;p&gt;借助插件 react-native-gradle：&lt;a href=&quot;https://github.com/facebook/react-native/tree/0ff3a421c9adbe4137e07e158c9812062b34ea5a/react-native-gradle%2FREADME.md&quot;&gt;com.facebook.react:gradleplugin:1.0.+&lt;/a&gt; 可完成混淆及资源打包。&lt;/p&gt;

&lt;p&gt;然而这个插件并没有发布到 JCenter 或者 Maven Centry。需要自己编译，然后发布到本地 Maven 库。源码在 &lt;a href=&quot;https://github.com/facebook/react-native/tree/0ff3a421c9adbe4137e07e158c9812062b34ea5a/react-native-gradle&quot;&gt;react-native-gradle&lt;/a&gt; 目录下。按照&lt;a href=&quot;https://github.com/facebook/react-native/tree/0ff3a421c9adbe4137e07e158c9812062b34ea5a/react-native-gradle%2FREADME.md&quot;&gt;文档&lt;/a&gt; 编译安装：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mac-2:react-native-gradle srain&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gradle build install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;结果是测试用例报错，这个问题，官方一直没修复，且置之不理。&lt;a href=&quot;https://github.com/facebook/react-native/issues/2786&quot;&gt;给出的解释&lt;/a&gt;前面提到了。&lt;/p&gt;

&lt;p&gt;我们可跳过测试用例，直接安装。虽然官方提供的测试用例本身有问题，无法进行测试，但我&lt;code&gt;亲测可用&lt;/code&gt;。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;题外话，对于给出的解释，显得非常不讲究，目前整个项目处于高度活跃中，文档和实际功能严重脱节，很多不一致的地方。
看来任何团队都会面临项目压力，变得节奏不再优雅啊，所谓的理想团队都是瞬时态。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;跳过测试用例，直接安装:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mac-2:react-native-gradle srain&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gradle install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;安装完成：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mac-2:react-native-gradle srain&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ll ~/.m2/repository/com/facebook/react/gradleplugin/
total 8
drwxr-xr-x  &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt; srain  staff  &lt;span class=&quot;m&quot;&gt;170&lt;/span&gt; Sep &lt;span class=&quot;m&quot;&gt;28&lt;/span&gt; 15:10 1.0.0-SNAPSHOT
-rw-r--r--  &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; srain  staff  &lt;span class=&quot;m&quot;&gt;326&lt;/span&gt; Sep &lt;span class=&quot;m&quot;&gt;28&lt;/span&gt; 15:10 maven-metadata-local.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在项目中使用&lt;/p&gt;

&lt;p&gt;&lt;code&gt;build.gradle&lt;/code&gt; 配置如下:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;&lt;span class=&quot;n&quot;&gt;buildscript&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;repositories&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mavenLocal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// 本地依赖&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;jcenter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dependencies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;classpath&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;com.android.tools.build:gradle:1.3.0&amp;#39;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;classpath&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;com.facebook.react:gradleplugin:1.0.+&amp;#39;&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// 插件依赖&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;app/build.gradle&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;&lt;span class=&quot;n&quot;&gt;apply&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;plugin:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;com.facebook.react&amp;#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;react&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;bundleFileName&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;index.android.bundle&amp;quot;&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// assets 目录下 js 文件名&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;bundlePath&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/index.android.bundle&amp;quot;&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;// js 路径&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;jsRoot&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;../&amp;quot;&lt;/span&gt;                            &lt;span class=&quot;c1&quot;&gt;// js 源文件位置&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;packagerHost&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;localhost:8081&amp;quot;&lt;/span&gt;           &lt;span class=&quot;c1&quot;&gt;// debug server 地址&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;packagerCommand&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;./node_modules/react-native/packager/packager.sh&amp;quot;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 打包命令地址&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;devParams&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;skip&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;dev&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;inlineSourceMap&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;minify&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;runModule&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;releaseParams&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;skip&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;dev&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;inlineSourceMap&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;minify&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;runModule&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置说明&lt;/p&gt;

&lt;p&gt;上面 react 项中的配置已经在注释中说明。其中，&lt;code&gt;packagerCommand&lt;/code&gt; &lt;a href=&quot;https://github.com/facebook/react-native/tree/0ff3a421c9adbe4137e07e158c9812062b34ea5a/react-native-gradle%2FREADME.md&quot;&gt;官方给出的文档描述有误&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;devParams&lt;/code&gt; 和 &lt;code&gt;releaseParams&lt;/code&gt; 分别 debug 版本和 release 版本的参数。它们各有五个参数：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;skip&lt;/code&gt; 参数为 &lt;code&gt;true&lt;/code&gt; 则跳过从本地资源加载，从 Debug Server 请求资源。为 false 时从打包资源，运行时，从本地加载。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;其他四个参数通过 url 传给 Debug Server&lt;/p&gt;

&lt;p&gt;比如: &lt;code&gt;http://localhost:8081/index.android.bundle?dev=true&amp;amp;inlineSourceMap=true&amp;amp;minify=false&amp;amp;runModule=true&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;参数意义如下：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;dev: 等同于全局变量 &lt;code&gt;__DEV__&lt;/code&gt;, React Native 核心类库的开发选项。&lt;/li&gt;
&lt;li&gt;minify: 混淆。&lt;/li&gt;
&lt;li&gt;inlineSourceMap: 是否加入 source map。默认为 &lt;code&gt;false&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;runModule: 默认为 &lt;code&gt;true&lt;/code&gt;，是否在最后以 &lt;code&gt;require(XXX)&lt;/code&gt; 的形式加入 module 的入口点。如:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;require(&amp;quot;AwesomeProject/index.android.js&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;参数的英文说明文档在: &lt;a href=&quot;https://github.com/facebook/react-native/blob/master/packager/README.md&quot;&gt;https://github.com/facebook/react-native/blob/master/packager/README.md&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;打包&lt;/p&gt;

&lt;p&gt;每次打包，插件都会根据配置，决定是否打包以及以怎样的配置打包资源。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Demo&lt;/h3&gt;

&lt;p&gt;这里是一个 Demo: &lt;a href=&quot;https://github.com/liaohuqiu/ReactNativeTestGradlePlugin%E3%80%82&quot;&gt;https://github.com/liaohuqiu/ReactNativeTestGradlePlugin。&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Demo 主要演示了 build.gradle 的配置，用 Android Stuido 打开即可运行，不要修改 Dev Setting 中的 Debug Server，因为资源都已经打包，不再在从 Debug Server 下载。可以解开 debug.apk 看 assets 目录下的文件。&lt;/p&gt;

&lt;p&gt;其中包含了一个编译安装 react-native-gradle 到本地 Maven 库的脚本，运行即可。&lt;/p&gt;

&lt;h3&gt;react-native bundle 命令简介&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;命令用法如下:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mac-2:AwesomeProject srain&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;react-native bundle --help
Usage: react-native bundle &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;options&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

Options:
  --dev     sets DEV flag to &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;，同插件配置的 dev 
  --minify  minify js bundle，同插件配置的 minify
  --root        add another root&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; to be used in bundling in this project
  --assetRoots      specify the root directories of app assets
  --out     specify the output file， 输出文件的位置
  --url     specify the bundle file url，js bundle 路径
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对 iOS 打包时：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;react-native bundle --minify
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;本文写于旅途，从洛杉矶到旧金山的 greyhound 大巴车上。时间仓促，水平有限，如有谬误，还请纠正，原始文档在&lt;a href=&quot;https://github.com/liaohuqiu/liaohuqiu.github.io/blob/docs/_posts/blog/2015/2015-09-28-react-native-android-package.cn.md&quot;&gt;这里&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;有问题欢迎留言或在微博上和我交流: &lt;a href=&quot;http://weibo.com/liaohuqiu&quot;&gt;http://weibo.com/liaohuqiu&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>React Native: 配置和起步</title>
      <link>http://liaohuqiu.net/cn/posts/react-native-1/</link>
      <pubDate>Wed, 23 Sep 2015 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/react-native-1</guid>
      <description>&lt;p&gt;2015 年 9 月 15 号，React Native for Android 发布。至此，React 基本完成了对多端的支持。基于 React / React Native 可以：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;H5, Android, iOS 多端代码复用&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;实时热部署&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在接下来的时间，我会通过一系列文章来介绍 React Native。本文介绍环境配置以及如何建立一个简单的项目。本篇文章 iOS 和 Android 开发都适用。&lt;/p&gt;

&lt;p&gt;目前使用 React Native 开发&lt;strong&gt;只能在 Mac 系统&lt;/strong&gt; 上进行。写 iOS 的同学，应该都是 Mac （除了听说网易有些部门写 iOS 给黑苹果之外，哈哈哈哈）。 开发 Android 的同学, 如果公司配发的不是 Mac 的话，建议自己入手一个，能显著提高生产力，就当投资自己吧。我大阿里对 Android 开发也是不给 Mac 的（不知道公司什么思路，现在倒是可以申请 Mac air了，air的性能……），所以我也是自己买的。&lt;/p&gt;

&lt;h3&gt;环境配置&lt;/h3&gt;

&lt;p&gt;需要安装的有:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; 是 Mac 中的一个包管理器。没有安装的话，&lt;a href=&quot;http://brew.sh/&quot;&gt;点击这里安装&lt;/a&gt; 我的版本如下:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mac-2:~ srain&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew -v
Homebrew 0.9.5 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;git revision ac9a7&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; last commit 2015-09-21&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;版本过低将会导致无法安装后续几个组件。可用  &lt;code&gt;brew update&lt;/code&gt; 升级。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mac-2:react-native srain&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew update
Updated Homebrew from ac9a71c8 to 4257c3da.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; 和 &lt;a href=&quot;https://docs.npmjs.com/&quot;&gt;npm&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; 需要 &lt;code&gt;4.0&lt;/code&gt; 及其以上版本。安装好之后，&lt;a href=&quot;https://docs.npmjs.com/&quot;&gt;npm&lt;/a&gt; 也有了。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;通过 &lt;a href=&quot;https://github.com/creationix/nvm#installation&quot;&gt;nvm&lt;/a&gt; 安装 &lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/creationix/nvm#installation&quot;&gt;nvm&lt;/a&gt; 是 &lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; 的版本管理器，可以轻松安装各个版本的 &lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; 版本。&lt;/p&gt;

&lt;p&gt;安装 &lt;a href=&quot;https://github.com/creationix/nvm#installation&quot;&gt;nvm&lt;/a&gt; 可以通过 &lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; 安装:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;brew install nvm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;或者 &lt;a href=&quot;https://github.com/creationix/nvm#installation&quot;&gt;按照这里的方法&lt;/a&gt; 安装。&lt;/p&gt;

&lt;p&gt;然后安装 &lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt;：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;nvm install node &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; nvm &lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;default node
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;也可以直接下载安装 &lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt;： &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;https://nodejs.org/en/download/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;安装好之后，如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;mac-2:react-native srain$ node -v
v4.0.0
mac-2:react-native srain$ npm -v
2.14.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装 &lt;a href=&quot;https://facebook.github.io/watchman/docs/install.html&quot;&gt;watchman&lt;/a&gt; 和 &lt;a href=&quot;http://www.flowtype.org/&quot;&gt;flow&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;这两个包分别是监控文件变化和类型检查的。安装如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;brew install watchman
brew install flow
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;安装 React-Native&lt;/h3&gt;

&lt;p&gt;通过 &lt;a href=&quot;https://docs.npmjs.com/&quot;&gt;npm&lt;/a&gt; 安装即可：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;npm install -g react-native-cli
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;APP 开发环境的设置&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;iOS &lt;/p&gt;

&lt;p&gt;XCode 6.3 及其以上即可。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Android &lt;/p&gt;

&lt;p&gt;这个比较麻烦。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;设置环境变量：&lt;code&gt;ANDROID_HOME&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ANDROID_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/opt/android-sdk
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SDK Manager 安装以下包：&lt;/p&gt;

&lt;p&gt;Android SDK Build-tools version 23.0.1&lt;/p&gt;

&lt;p&gt;Android 6.0 (API 23)&lt;/p&gt;

&lt;p&gt;Android Support Repository&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;初始化一个项目&lt;/h3&gt;

&lt;p&gt;文档提到：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;react-native init AwesomeProject
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;初始化一个项目，其中 &lt;code&gt;AwesomeProject&lt;/code&gt; 是项目名字，这个随意。等待&lt;strong&gt;一段时间之后&lt;/strong&gt;（具体视网络情况而定），项目初始化完成。&lt;/p&gt;

&lt;p&gt;进入到项目目录：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;AwesomeProject
mac-2:AwesomeProject srain&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ls -l
total 24
drwxr-xr-x  &lt;span class=&quot;m&quot;&gt;14&lt;/span&gt; srain  staff   &lt;span class=&quot;m&quot;&gt;476&lt;/span&gt; Sep &lt;span class=&quot;m&quot;&gt;21&lt;/span&gt; 09:52 android
-rw-r--r--   &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; srain  staff  &lt;span class=&quot;m&quot;&gt;1023&lt;/span&gt; Sep &lt;span class=&quot;m&quot;&gt;21&lt;/span&gt; 11:47 index.android.js
-rw-r--r--   &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; srain  staff  &lt;span class=&quot;m&quot;&gt;1065&lt;/span&gt; Sep &lt;span class=&quot;m&quot;&gt;20&lt;/span&gt; 11:58 index.ios.js
drwxr-xr-x   &lt;span class=&quot;m&quot;&gt;6&lt;/span&gt; srain  staff   &lt;span class=&quot;m&quot;&gt;204&lt;/span&gt; Sep &lt;span class=&quot;m&quot;&gt;20&lt;/span&gt; 11:58 ios
drwxr-xr-x   &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt; srain  staff   &lt;span class=&quot;m&quot;&gt;170&lt;/span&gt; Sep &lt;span class=&quot;m&quot;&gt;21&lt;/span&gt; 10:31 node_modules
-rw-r--r--   &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; srain  staff   &lt;span class=&quot;m&quot;&gt;209&lt;/span&gt; Sep &lt;span class=&quot;m&quot;&gt;20&lt;/span&gt; 11:58 package.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其中 &lt;code&gt;android&lt;/code&gt; 和 &lt;code&gt;ios&lt;/code&gt; 中分别为两个平台的项目文件。&lt;code&gt;index.android.js&lt;/code&gt; 和 &lt;code&gt;index.ios.js&lt;/code&gt; 为两个页面对应的 js 文件。&lt;/p&gt;

&lt;h3&gt;运行项目&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;不管是 iOS 还是 Android，在开发调试阶段，都需要在 Mac 上启动一个 HTTP 服务，称为`Debug Server`，默认运行在 8081 端口，APP 通 Debug Server 加载 js。

iOS 和 Android 的模拟器，连接 Mac 本机的服务都很方便。但是通过 USB 或者 Wifi 连接调试，就稍微麻烦一些了。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;iOS &lt;/p&gt;

&lt;p&gt;还是非常简单，XCode 打开项目，点击运行就好。修改 &lt;code&gt;index.ios.js&lt;/code&gt;, 在模拟器中 &lt;code&gt;⌘ + R&lt;/code&gt; 重新载入 js 即可看到相应的变化。&lt;/p&gt;

&lt;p&gt;iOS 真机调试也简单，修改HTTP地址即可。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;jsCodeLocation = [NSURL URLWithString:@&amp;quot;http://localhost:8081/index.ios.bundle&amp;quot;];
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Android&lt;/p&gt;

&lt;p&gt;按照官方文档，需要一个模拟器（Genymotion模拟器也可以）。但是不像 iOS，Android 开发平时更多是直接用真机进行开发和调试，如何运行部署到真机，下面会提到。&lt;/p&gt;

&lt;p&gt;运行命令&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;react-native run-android
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后就会部署到模拟器，修改 &lt;code&gt;index.android.js&lt;/code&gt; ，调出模拟器菜单键，选择重新载入 js 即可看到变化。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Android 真机调试&lt;/p&gt;

&lt;p&gt;示例 APP 直接部署到真机，红色界面报错，无法连接到 Debug Server。&lt;/p&gt;

&lt;p&gt;如果是 5.0 或者以上机型，可通过 adb 反向代理端口，将 Mac 端口反向代理到测试机上。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;adb reverse tcp:8081 tcp:8081
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果 5.0 以下机器，应用安装到测试机上之后，摇动设备，在弹出菜单中选择 Dev Setting &amp;gt; Debug Server host for device，然后填入 Mac 的 IP 地址（&lt;code&gt;ifconfig&lt;/code&gt; 命令可查看本机 IP）&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;关于修改 DevHelper 来进行和 iOS 一样的开发调试，后续关于热部署时，我会介绍到。&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在 Android Studio 中调试开发&lt;/p&gt;

&lt;p&gt;我们可能希望在 Android Studio 打开项目，然后编译部署到真机。&lt;/p&gt;

&lt;p&gt;这个时候，在命令行启动 Debug Server 即可：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;react-native start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;结论和后续&lt;/h3&gt;

&lt;p&gt;本篇文章，iOS 和 Android 都适用。至此，环境配置和示例项目运行应该都好了。后续我会继续发几篇文章介绍：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;重点介绍 Android 相关的开发：包括组件，源码分析等&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;动态热部署&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;多端代码复用&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;参考文档:&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;官方文档：&lt;a href=&quot;https://facebook.github.io/react-native/docs/getting-started.html#content&quot;&gt;https://facebook.github.io/react-native/docs/getting-started.html#content&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;时间仓促，水平有限，如有谬误，还请纠正，原始文档在&lt;a href=&quot;https://github.com/liaohuqiu/liaohuqiu.github.io/blob/docs/_posts%2Fblog%2F2015%2F2015-09-23-react-native-1.cn.md&quot;&gt;这里&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;有问题欢迎留言或在微博上和我交流: &lt;a href=&quot;http://weibo.com/liaohuqiu&quot;&gt;http://weibo.com/liaohuqiu&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>为 PHP 构建 RPC 服务</title>
      <link>http://liaohuqiu.net/cn/posts/build-rpc-service-for-php/</link>
      <pubDate>Thu, 27 Aug 2015 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/build-rpc-service-for-php</guid>
      <description>&lt;p&gt;本文为 &lt;a href=&quot;http://wattech.eventdove.com/&quot;&gt;&amp;quot;2015 年一淘网、腾讯网媒&amp;amp;微博商业联合技术沙龙&amp;quot;&lt;/a&gt; Keynote 对应的博客文章。&lt;/p&gt;

&lt;p&gt;对应的 Keynote 在 &lt;a href=&quot;http://www.slideshare.net/HuqiuLiao/build-rpc-for-php&quot;&gt;http://www.slideshare.net/HuqiuLiao/build-rpc-for-php&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;有问题随时交流，欢迎关注我新浪微博: &lt;a href=&quot;http://weibo.com/liaohuqiu&quot;&gt;http://weibo.com/liaohuqiu&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;本文提到的所有项目和代码都在我的 GitHub: &lt;a href=&quot;https://github.com/liaohuqiu&quot;&gt;https://github.com/liaohuqiu&lt;/a&gt; 同样欢迎关注。&lt;/p&gt;

&lt;h3&gt;PHP + RPC&lt;/h3&gt;

&lt;p&gt;PHP 为了资源格式，用进程方式处理请求，这使得一些和业务系统的状态量无法在 PHP 程序中进行良好的访问。&lt;/p&gt;

&lt;p&gt;一些类似实时排行的业务需求，借助缓存实现或者 DB （当然，这时非常错误的做法）都无法很好实现。&lt;/p&gt;

&lt;p&gt;对于类似这样系统业务状态量的实时计算更新使用中间件来实现再方便不过了。&lt;/p&gt;

&lt;p&gt;现在 ICE， Thrift 等解决方案稍显笨重，开发调试部署并非一件轻松愉快的事情。而类似 YAR 这样的实现，简单但却非高效。&lt;/p&gt;

&lt;p&gt;对于 PHP 我们需要一个简单高效，容易开发，容易调试，容易维护和扩展的 RPC 服务。&lt;/p&gt;

&lt;h3&gt;Cube PRC&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://weibo.com/liaohuqiu&quot;&gt;Cube RPC&lt;/a&gt; 是基于 TCP/UDP 的半双工的 RPC 协议。简单，高效，容易调试和部署。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;    +--------+           +--------+
    |        | &amp;lt;-------- |        |
    | Server |           | Client |
    |        | --------&amp;gt; |        |
    +--------+           +--------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;本文给出该协议设计时的一些考虑。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;序列化协议的选择&lt;/p&gt;

&lt;p&gt;选用简单类型的序列化协议，没有选择低效的 JSON， 也没有使用 Google Protobuf。选用了 &lt;a href=&quot;http://binpack.liaohuqiu.net/&quot;&gt;BinPack&lt;/a&gt;，比 MessagePack 更为简单和高效。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;RPC 协议&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;消息包含消息头部和消息体，如下&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;+--------------------+ 
| HEADER + BODY ...  |
+--------------------+ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;消息类型&lt;/p&gt;

&lt;p&gt;Query (From client to server)
Answer (From server to client)
Welcome (From server to client)
Close (client to server, or server to client)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;调用流程图&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;+--------+      +--------+
| Server |      | Client |
+--------+      +--------+
     |               |
     | &amp;lt;-------------|
     |               |
     |  Welcome      |
     | ------------&amp;gt; |
     |               |
     |  Query        |
     | &amp;lt;-------------|
     |               |
     |  Answer       |
     | ------------&amp;gt; |
     |               |
     | &amp;lt;-------------|
     | ------------&amp;gt; |
     |               |
     |  Closed       |
     | &amp;lt;-------------|
     |               |
     |               |
     | ---- X -------|
     |               |
     |               |
     |               |
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;调用流程&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;连接建立，Server 发送 Welcome 消息。Client 收到 Welcome 消息之后才可以发送 &lt;code&gt;Query&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;当 Client 或者 Server 要关闭连接时，发送 Closed 消息，另一方资源清理然后断开链接，己方侦测到链接断开后清理资源。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Proxy&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;在 Server 侧，Proxy 看起来是一个 Client&lt;/li&gt;
&lt;li&gt;在 Client 侧，Proxy 看起来却又像一个 Server&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;消息头部&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;数据结构&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Header&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;union&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;u16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;magic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;     * only Query and Answer has this field&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;     */&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bodySize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// little engine&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;文本表现形式:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;byte    &amp;quot;C&amp;quot;
byte    &amp;quot;B&amp;quot;
byte    version
byte    message_type

int32   body_size
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Message Type&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;MESSAGE_TYPE_WELCOME        = 0x01
MESSAGE_TYPE_CLOSE          = 0x02
MESSAGE_TYPE_QUERY          = 0x03
MESSAGE_TYPE_ANSWER         = 0x04
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;消息体&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Query&lt;/p&gt;

&lt;p&gt;Query 消息体是一个数组&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;int     qid;      // 1
string  service;  // android-gems
string  method;   // get_index_data
dict    params;   // {}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;PHP 代码如下:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-PHP&quot; data-lang=&quot;PHP&quot;&gt;&lt;span class=&quot;x&quot;&gt;// pack data&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$data = array($qid, $this-&amp;gt;service, $method, $params);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$str = bin_encode($data);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$data_len = strlen($str);&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;// pack header&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$header = pack(&amp;#39;A2C2V&amp;#39;, self::MESSAGE_MAGIC, self::MESSAGE_VER, self::MESSAGE_TYPE_QUERY, $data_len);&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;// send data&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$buf = $header . $str;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$ret = socket_write($this-&amp;gt;socket, $buf);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Answer Body&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;int     qid;        // 1
integer status;     // 0 for normal response, none-zero for exception
dict    data;       // {}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;正常响应下，status 为 0，否则为非零数字，并且 data 需要包含以下字段：&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Key&lt;/th&gt;
&lt;th&gt;Value type&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;exception&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;exception name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;code&lt;/td&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;message&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;raiser&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;method*service @proto:host:port&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;detail&lt;/td&gt;
&lt;td&gt;dict&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;日志 / 异常 / 调试&lt;/h4&gt;

&lt;p&gt;日志&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;2015-08-27 12:24:43,692 DEBUG (&amp;#39;127.0.0.1&amp;#39;, 33441): message received: proxy.Query((2, &amp;#39;android-gems&amp;#39;, &amp;#39;index_data&amp;#39;, []))
2015-08-27 12:24:43,692 DEBUG handle_normal_servant: proxy.Query((2, &amp;#39;android-gems&amp;#39;, &amp;#39;index_data&amp;#39;, []))
2015-08-27 12:24:43,692 DEBUG (&amp;#39;127.0.0.1&amp;#39;, 33441): reply answer: proxy.Answer((2, 0, {&amp;#39;libs&amp;#39;: [], &amp;#39;un_review_count&amp;#39;: 1, &amp;#39;users&amp;#39;: []}))
2015-08-27 12:24:43,723 DEBUG (&amp;#39;127.0.0.1&amp;#39;, 33441): connection has been closed by client.
2015-08-27 12:24:43,723 DEBUG (&amp;#39;127.0.0.1&amp;#39;, 33441): close connection
2015-08-27 12:24:43,723 DEBUG (&amp;#39;127.0.0.1&amp;#39;, 33441): answer fiber stop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;包含异常信息的错误日志&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;2015-08-27 12:25:06,468 DEBUG (&amp;#39;127.0.0.1&amp;#39;, 33452): message received: proxy.Query((3, &amp;#39;android-gems&amp;#39;, &amp;#39;index_data1&amp;#39;, []))
2015-08-27 12:25:06,468 DEBUG handle_normal_servant: proxy.Query((3, &amp;#39;android-gems&amp;#39;, &amp;#39;index_data1&amp;#39;, []))
2015-08-27 12:25:06,469 ERROR method index_data1 not found
2015-08-27 12:25:06,469 DEBUG (&amp;#39;127.0.0.1&amp;#39;, 33452): reply answer: proxy.Answer((3, 100, {&amp;#39;exception&amp;#39;: &amp;#39;MethodNotFound&amp;#39;, &amp;#39;code&amp;#39;: 1, &amp;#39;raiser&amp;#39;: u&amp;#39;android-gems@tcp:0.0.0.0:2099&amp;#39;, &amp;#39;message&amp;#39;: u&amp;#39;servant android-gems do no have method index_data1 in adapter android-gems@tcp:0.0.0.0:2099&amp;#39;}))
2015-08-27 12:25:06,491 DEBUG (&amp;#39;127.0.0.1&amp;#39;, 33452): connection has been closed by client.
2015-08-27 12:25:06,491 DEBUG (&amp;#39;127.0.0.1&amp;#39;, 33452): close connection
2015-08-27 12:25:06,491 DEBUG (&amp;#39;127.0.0.1&amp;#39;, 33452): answer fiber stop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;实现&lt;/h4&gt;

&lt;p&gt;目前已经有的实现：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Python:  &lt;a href=&quot;https://github.com/liaohuqiu/cube-rpc-python&quot;&gt;https://github.com/liaohuqiu/cube-rpc-python&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;JAVA，即将开源&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;C++，即将开源&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;现实世界的例子&lt;/h4&gt;

&lt;p&gt;现实世界中，已经有一些应用了。&lt;/p&gt;

&lt;p&gt;比如 &lt;a href=&quot;http://www.android-gems.com/&quot;&gt;Android-Gems&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;另外，在阿里巴巴内部的一些应用，比如 “阿里巴巴技术协会” 网站，提供了排行，动态，标签等服务。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>升级到 Android 6.0</title>
      <link>http://liaohuqiu.net/cn/posts/m-developer-preview-3-final-sdk/</link>
      <pubDate>Tue, 18 Aug 2015 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/m-developer-preview-3-final-sdk</guid>
      <description>&lt;p&gt;昨天（2015-08-17T10:23:00-07:00）Android 6.0 发布。今天 &lt;a href=&quot;http://weibo.com/u/1919737834&quot;&gt;@空之(小地方的布丁雪糕)&lt;/a&gt; 一大早就带了一包棉花糖分给大家吃，这样的技术调调，真是让我们非常感动。&lt;/p&gt;

&lt;p&gt;现在 Android 6.0 SDK 已经可以更新了，API Level 是 &lt;code&gt;23&lt;/code&gt;。更新之后，就可以修改 &lt;code&gt;compileSdkVersion&lt;/code&gt; 和 &lt;code&gt;targetSdkVersion&lt;/code&gt; 到 &lt;code&gt;23&lt;/code&gt; 体验新的特性了。&lt;/p&gt;

&lt;p&gt;同时 Android Support Library 也更新到了 &lt;code&gt;23&lt;/code&gt;，同时发布的还有 &lt;code&gt;customtabs&lt;/code&gt;, &lt;code&gt;percent&lt;/code&gt;, &lt;code&gt;recommendation&lt;/code&gt;, &lt;code&gt;preference-v7&lt;/code&gt;,  &lt;code&gt;preference-v14&lt;/code&gt;, 和 &lt;code&gt;preference-leanback-v17&lt;/code&gt; 这些支持类库。&lt;/p&gt;

&lt;p&gt;在升级 APP 到 API Level &lt;code&gt;23&lt;/code&gt; 的过程中，请注意新平台特性带来的一些新的权限的处理。比如指纹识别，省电模式等。&lt;/p&gt;

&lt;p&gt;参考链接: &lt;a href=&quot;http://android-developers.blogspot.com/2015/08/m-developer-preview-3-final-sdk.html&quot;&gt;http://android-developers.blogspot.com/2015/08/m-developer-preview-3-final-sdk.html&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Speed up your build in Android Studio</title>
      <link>http://liaohuqiu.net/posts/speed-up-your-build/</link>
      <pubDate>Wed, 22 Jul 2015 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/posts/speed-up-your-build</guid>
      <description>&lt;p&gt;Gradle provides a lot of flexibility, but this power comes at the cost of a slower build process. Android Studio is based on Gradle.&lt;/p&gt;

&lt;p&gt;When we are working with Android Studio, as our project is getting bigger and bigger, our daily / development build is getting slower and slower.&lt;/p&gt;

&lt;p&gt;For example, one of our project need more than 40s to complete build once after we modified the Java code. If we build 100 times per day, the build process will take nearly an hour. Image that we can do nothing but only wait in an hour, that is really a waste of time.&lt;/p&gt;

&lt;p&gt;Today we will try to make the build a little faster.&lt;/p&gt;

&lt;p&gt;There are some solution we can find easily by a simple search:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;org.gradle.daemon = true&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;org.gradle.parallel = true&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;make gradle work in &lt;code&gt;offline work&lt;/code&gt; mode&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;set up large vm heap size: 2G&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But all of them can not bring significant speeding up, the build tool in Android Studio has already done most these work.&lt;/p&gt;

&lt;h3&gt;Profile&lt;/h3&gt;

&lt;p&gt;If you want to figure out the cause, you can try profiling your build process. You can add the &lt;code&gt;--profile&lt;/code&gt; flag to any Gradle task. Adding this flag will create a report under &lt;code&gt;build/reports/profile&lt;/code&gt;. It looks like:&lt;/p&gt;

&lt;div class=&#39;row&#39;&gt;
    &lt;div class=&#39;col-md-8 col-md-offset-2&#39;&gt;
        &lt;img src=&#39;/assets/img/speed-up-your-build/profile.png&#39; width=&#39;100%&#39;/&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;/assets/speed-up-your-build-profile/profile-sample.html&quot;&gt;Here&lt;/a&gt; is an example.&lt;/p&gt;

&lt;p&gt;To enable &lt;code&gt;profile&lt;/code&gt; in Android Studio, you must config the command line options like bellow:&lt;/p&gt;

&lt;div class=&#39;row&#39;&gt;
    &lt;div class=&#39;col-md-8 col-md-offset-2&#39;&gt;
        &lt;img src=&#39;/assets/img/speed-up-your-build/enable-profile-in-as.png&#39; width=&#39;100%&#39;/&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;h3&gt;Why it is so slow&lt;/h3&gt;

&lt;p&gt;After we inspect the profile again and again, we can figure out some reasons that make build process slow:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;some long running tasks&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;multiDexEnabled&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;too much dependencies&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Solutions&lt;/h3&gt;

&lt;h4&gt;1. Disable long running task&lt;/h4&gt;

&lt;p&gt;We can disable some long running tasks in dev mode.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;&lt;span class=&quot;n&quot;&gt;tasks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;whenTaskAdded&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;startsWith&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;:zxing:&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;startsWith&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;:share-lib:&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;enabled&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;2. Shrink the project&lt;/h4&gt;

&lt;p&gt;We can not really shrink the project unless we remove some functions of our APP. But we can shrink our project in dev mode. We can disable some module, here is the structure of our project:&lt;/p&gt;

&lt;div class=&#39;row&#39;&gt;
    &lt;div class=&#39;col-md-4 col-md-offset-4&#39;&gt;
        &lt;img src=&#39;/assets/img/speed-up-your-build/project-structure.png&#39; width=&#39;100%&#39;/&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;There are two grops of module:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;share-lib&lt;/code&gt; and &lt;code&gt;share-lib-no-op&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;zxing&lt;/code&gt; and &lt;code&gt;zxing-no-op&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;no-op&lt;/code&gt; project is an empty module, we include this empty module in debug complie:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;&lt;span class=&quot;n&quot;&gt;debugCompile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;:share-lib-no-op&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;releaseCompile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;:share-lib&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;debugCompile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;:zxing-no-op&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;releaseCompile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;:zxing&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The code in &lt;code&gt;share-lib&lt;/code&gt; do the real work:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ShareProxyImpl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sendShare&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ShareRequestDO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Activity&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ISShareController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;startShare&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ShareRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onActivityResult&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requestCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ISShareController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onActivityResult&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;requestCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And the code in &lt;code&gt;share-lib-no-op&lt;/code&gt; does nothing:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ShareProxyImpl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sendShare&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ShareRequestDO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Activity&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;makeText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;ShareProxyImpl:no-op:sendShare&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LENGTH_SHORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onActivityResult&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requestCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;makeText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;ShareProxyImpl:no-op:onActivityResult&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LENGTH_SHORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this way, we can reduce a lot of dependence in debug complie. Once the project is shrinked, we do not need &lt;code&gt;multiDexEnabled&lt;/code&gt; in debug mode. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;This is the profile before we adjust our project:&lt;/p&gt;

&lt;div class=&#39;row&#39;&gt;
    &lt;div class=&#39;col-md-8 col-md-offset-2&#39;&gt;
        &lt;img src=&#39;/assets/img/speed-up-your-build/profile-before.png&#39; width=&#39;100%&#39;/&gt;
    &lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;And this is the current profile:&lt;/p&gt;

&lt;div class=&#39;row&#39;&gt;
    &lt;div class=&#39;col-md-8 col-md-offset-2&#39;&gt;
        &lt;img src=&#39;/assets/img/speed-up-your-build/profile-after.png&#39; width=&#39;100%&#39;/&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;We only need about 15 seconds to finish a debug build, if we only modify the resource, that will be faster.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;3. Jack and Jill&lt;/h4&gt;

&lt;p&gt;It is a experimental new Android tool chain, it may be faster in the future, for it can meger the dex file in a very fast way.&lt;/p&gt;

&lt;div class=&#39;row&#39;&gt;
    &lt;div class=&#39;col-md-8 col-md-offset-2&#39;&gt;
        &lt;img src=&#39;/assets/img/speed-up-your-build/jack-and-jill.png&#39; width=&#39;100%&#39;/&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;But currently(2015/07/28) it is very slow, the complie process take a very long time, it is nearly 2 minitues in our project.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ISO 8601 in Bash, Java, PHP, Python</title>
      <link>http://liaohuqiu.net/posts/iso-8601-date-format/</link>
      <pubDate>Fri, 17 Jul 2015 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/posts/iso-8601-date-format</guid>
      <description>&lt;p&gt;Here is &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601&quot;&gt;https://en.wikipedia.org/wiki/ISO_8601&lt;/a&gt;,  what we want is &lt;code&gt;2015-07-17T17:47:18+08:00&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;BASH&lt;/h3&gt;

&lt;p&gt;format:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;date +&lt;span class=&quot;s2&quot;&gt;&amp;quot;%Y-%m-%dT%H:%M:%S%:z&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cyberciti.biz/faq/linux-unix-formatting-dates-for-display/&quot;&gt;http://www.cyberciti.biz/faq/linux-unix-formatting-dates-for-display/&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;PHP&lt;/h3&gt;

&lt;p&gt;It is easy!&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$time = time();&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$time_str = date(&amp;#39;c&amp;#39;, $time);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The parsing is also easy.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$time = strtotime($time_str);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;http://php.net/manual/en/function.date.php&quot;&gt;http://php.net/manual/en/function.date.php&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Java&lt;/h3&gt;

&lt;p&gt;Java is verbose.&lt;/p&gt;

&lt;p&gt;Format:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; * Transform Date to ISO 8601 string.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; */&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fromDate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;formatted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SimpleDateFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;yyyy-MM-dd&amp;#39;T&amp;#39;HH:mm:ssZ&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;formatted&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;:&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;formatted&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Parse:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; * Transform ISO 8601 string to Date.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; */&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;toDate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iso8601string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ParseException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iso8601string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Z&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;+00:00&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// to get rid of the &amp;quot;:&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IndexOutOfBoundsException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ParseException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Invalid length&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SimpleDateFormat&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SimpleDateFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;yyyy-MM-dd&amp;#39;T&amp;#39;HH:mm:ssZ&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/2201925/converting-iso-8601-compliant-string-to-java-util-date&quot;&gt;http://stackoverflow.com/questions/2201925/converting-iso-8601-compliant-string-to-java-util-date&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Python&lt;/h3&gt;

&lt;p&gt;Format, oh no.&lt;/p&gt;

&lt;p&gt;About parsing, you may need these:  &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://pypi.python.org/pypi/iso8601&quot;&gt;https://pypi.python.org/pypi/iso8601&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Corpse Bride</title>
      <link>http://liaohuqiu.net/posts/corpse-bride/</link>
      <pubDate>Mon, 22 Jun 2015 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/posts/corpse-bride</guid>
      <description>&lt;p&gt;Finally, Victor and Victoria are together, and it seems that the story has a happy ending.&lt;/p&gt;

&lt;p&gt;And finally after suffered a long pain, Emily finds the peace.&lt;/p&gt;

&lt;p&gt;She walks out the door, turns into thousands of butterflies in the moonlight. The butterflies fly towards to the moon.&lt;/p&gt;

&lt;div class=&#39;row&#39;&gt;
&lt;div class=&#39;col-md-8 col-md-offset-2&#39;&gt;
&lt;img src=&#39;//img1.liaohuqiu.com/corpse-bride/trun-to-butter-fly.png&#39; /&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;h3&gt;the Bad&lt;/h3&gt;

&lt;p&gt;I think her life is sorrowful, even when she is an undead.&lt;/p&gt;

&lt;p&gt;There are two kinds of men who always hurt the girls like Emily, who are beautiful and sweet, kind and innocent.&lt;/p&gt;

&lt;p&gt;The first one is the guys like Lord Barkis, who are handsome, mysterious and sophisticated.&lt;/p&gt;

&lt;p&gt;He lied to her, cheated her, murdered her. He was really a bad guy, he tried to lie to the whole world, and should and also had been punished. &lt;/p&gt;

&lt;p&gt;This is a kind of explicit evil.&lt;/p&gt;

&lt;p&gt;The second one is the guys like Victor, who are also good looking but naive and irresponsible.&lt;/p&gt;

&lt;p&gt;He was far away from ready for the marriage with Victoria. He always tried to make things right, but in fact just made it worse.&lt;/p&gt;

&lt;p&gt;He practiced the vows in the dark woods, and placed the wedding ring to Emily&amp;#39;s skeleton finger unintentionally.&lt;/p&gt;

&lt;p&gt;After Emily misunderstood that, he did not try to explain that at the first time, instead of that, he try to cheat her and make use of her to take him back the Land of the Living.&lt;/p&gt;

&lt;p&gt;In fact, He didn&amp;#39;t love Emily. After he was told by Mayhew that Victoria would marry Lord Barkis, he decided to marry Emily in the name of keeping his promise.&lt;/p&gt;

&lt;p&gt;This is another kind of implicit evil.&lt;/p&gt;

&lt;h3&gt;the Sweet and Kind&lt;/h3&gt;

&lt;p&gt;Even was betrayed, and was hurt by the greatest evil in the world, she still kept her wonderful personality, and she is Emily.&lt;/p&gt;

&lt;p&gt;She tried to love Victor, try to make him happy. Though she was in shabby, she gave Victor his long-dead dog, the Scraps. I think that is very sweet of her.&lt;/p&gt;

&lt;p&gt;Even after he had cheat her, hurt her, she still loved him very much:&lt;/p&gt;

&lt;div class=&#39;row&#39;&gt;
&lt;div class=&#39;col-md-8 col-md-offset-2&#39;&gt;
&lt;img src=&#39;//img1.liaohuqiu.com/corpse-bride/shed-the-tears.png&#39; /&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Yet I feel my heart is aching.&lt;/p&gt;

&lt;p&gt;Though it doesn&amp;#39;t beat, it&amp;#39;s breaking&lt;/p&gt;

&lt;p&gt;And the pain here that I feel&lt;/p&gt;

&lt;p&gt;Try and tell me it&amp;#39;s not real&lt;/p&gt;

&lt;p&gt;I know that I am dead&lt;/p&gt;

&lt;p&gt;Yet it seems that I still have some tears to shed.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&#39;row&#39;&gt;
&lt;div class=&#39;col-md-8 col-md-offset-2&#39;&gt;
&lt;img src=&#39;//img1.liaohuqiu.com/corpse-bride/but-you-are-not-mine.png&#39; /&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;She was also kind, at the church, after she finished her part of the vows, she noticed Victoria, she stopped Victor from drinking the wine of ages. And finally, she choose to set him free. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;quot;I love you, but you are not mine&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;Emily&lt;/h3&gt;

&lt;p&gt;And now, I&amp;#39;ve been missing you so much.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve been keeping practicing the vows for a long, long time:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;With this hand I&amp;#39;ll lift your sorrow&lt;/p&gt;

&lt;p&gt;Your cup will never empty&lt;/p&gt;

&lt;p&gt;For I will be your wine&lt;/p&gt;

&lt;p&gt;With this candle I&amp;#39;ll light your way in darkness.&lt;/p&gt;

&lt;p&gt;With this ring I&amp;#39;ll ask you to be mine.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Hope one day I will find you, I will protect you from the evil in this world.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2015年5月：在路上</title>
      <link>http://liaohuqiu.net/cn/posts/2015-may/</link>
      <pubDate>Sat, 30 May 2015 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/2015-may</guid>
      <description>&lt;h3&gt;流水的五月&lt;/h3&gt;

&lt;p&gt;流水般，5 月过去了。这个月中发生了好多事情。&lt;/p&gt;

&lt;p&gt;月初假期，大醉了一场，祭一次结束，祈一个开始。&lt;/p&gt;

&lt;p&gt;三天假期结束了，每天的重复：上班，下班，上班，下班……工作之余收拾收拾 android-gems，于是很快就弄好了。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;听别人悲欢离合，看掌心幸福，已淡薄如烟。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;感谢这段时间一起陪伴的朋友们，尤其是：我弟弟，雷子，国征，文科。沁。伽非，本月。&lt;/p&gt;

&lt;p&gt;感谢 Panda。&lt;/p&gt;

&lt;p&gt;月底辗转了杭州和上海。感谢国征每天帮我浇花。其实，我想说的是牵牛花死了不是寿终正寝，而是你没浇他们。&lt;/p&gt;

&lt;p&gt;27号，在杭州事情完了之后，请了一天假，周四晚上到上海，本想周五找黄黎明见面吃个饭什么的。&lt;/p&gt;

&lt;p&gt;到了酒店，看了一晚上 Google IO。睡了一小会，醒来感觉疲惫至极，病患隐隐作痛，想先回家歇歇先了。直接定了回北京的机票。&lt;/p&gt;

&lt;h3&gt;两个女孩&lt;/h3&gt;

&lt;p&gt;12:20 的 HU7608，买票太晚，座位被随机安排在机尾的 50C。&lt;/p&gt;

&lt;p&gt;到了座位，隔壁的浓妆女孩在很用心地自拍：左边来一张！右边再来一张！我赶紧退出摄像头视野。&lt;/p&gt;

&lt;p&gt;延误，说什么飞机故障。&lt;/p&gt;

&lt;p&gt;在等待的一个小时中，给 android-gems 加了 badge，从中间件到js全改了一遍。&lt;/p&gt;

&lt;p&gt;51D 座上，一个素颜女孩厚厚的《白夜行》。&lt;/p&gt;

&lt;p&gt;好吧，“梦想着偶然能有一天再相见”。&lt;/p&gt;

&lt;h3&gt;异地双活&lt;/h3&gt;

&lt;p&gt;互联网黑色的五月。异地双活在过去一周成了热词。&lt;/p&gt;

&lt;p&gt;27 号，答辩前，17点30左右，伽非想买一个可乐的，发现支付宝出问题了。群里说光纤断了，P1。PE正在切流。&lt;/p&gt;

&lt;p&gt;2个小时左右服务恢复。光纤是半夜才恢复的。确实是双活。&lt;/p&gt;

&lt;p&gt;28 号，携程因发布问题导致全站。首页直接导流到了艺龙，开启了双活新模式:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;携程不行上艺龙，这是为大家指出双活新模式，看来以后同业公司要一对一对的开。 &lt;a href=&quot;http://weibo.com/1421147990/CjW09kXRu&quot;&gt;@eygle&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&#39;row&#39;&gt;
    &lt;div class=&#39;col-md-6 col-md-offset-3&#39;&gt;
    &lt;img src=&#39;//img1.liaohuqiu.com/large/54b4ff56gw1esk1q41fayj20ox05fq58.jpg&#39; /&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;异地双活系统的几个大范例，优酷收购土豆，58收购赶集、安居客，滴滴收购快的，携程收购艺龙。今天，携程服务器出问题，收购艺龙的伟大意义展现出来了，流量还是自己的。不要什么事情都从技术出发。你看掏钱买不是更快更好么？  &lt;a href=&quot;http://weibo.com/1400229064/CjW04i83F&quot;&gt;@tinyfool&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;同日，艺龙又被 DDOS 了。&lt;/p&gt;

&lt;h3&gt;UBer&lt;/h3&gt;

&lt;p&gt;Uber 真是一个伟大的产品。这个月，即使是周末去公司，也改成用 UBer 了。&lt;/p&gt;

&lt;p&gt;Uber 的派单模式，不管在哪都能让乘客很容易叫上车。&lt;/p&gt;

&lt;p&gt;资费比出租车低，一般地，从惠新西街南口四环到国贸不到30元。车租车是45左右。&lt;/p&gt;

&lt;p&gt;在淘宝城外面，乱哄哄的出租车，那体验简直糟糕极了。拒载，拼车，服务态度差。27号雨夜，我还担心建瓴他们怎么回去呢。到大门口时，车双闪在那里等着了。&lt;/p&gt;

&lt;p&gt;今年春节，又从上海中转，南北广场上那出租车的态度，简直就是一个恶棍。28 号我到上海时，轻松愉快，半个小时就到了外滩。&lt;/p&gt;

&lt;p&gt;一大早，在松江也叫上了车，很快把我送到了虹桥。&lt;/p&gt;

&lt;p&gt;服务好，车也比出租车好，私家车的司机们的素质更是高出不少。这段时间遇到的司机，和他们交流，让我开了不少眼界。&lt;/p&gt;

&lt;p&gt;Uber 是一个伟大的产品，高速发展中，他们也招人。 Android: &lt;a href=&quot;https://www.uber.com/jobs/4801&quot;&gt;https://www.uber.com/jobs/4801&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;最后，我的邀请码是： &lt;strong&gt;ubersrain&lt;/strong&gt;  。首次乘车，使用这个优惠码，我们都将得到 30 元的优惠。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>通过 shell 执行 python 报错: No such file or directory</title>
      <link>http://liaohuqiu.net/cn/posts/python-script-in-bin-directory/</link>
      <pubDate>Wed, 13 May 2015 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/python-script-in-bin-directory</guid>
      <description>&lt;h4&gt;问题&lt;/h4&gt;

&lt;p&gt;有一个 python 的小脚本 &lt;a href=&quot;https://github.com/liaohuqiu/keep-running&quot;&gt;keep-running&lt;/a&gt;，是用来实现守护进程的，当进程退出之后，会重新启动进程。&lt;/p&gt;

&lt;p&gt;这是一个工具脚本，发布到了Pypi: &lt;a href=&quot;https://pypi.python.org/pypi/keep-running&quot;&gt;https://pypi.python.org/pypi/keep-running&lt;/a&gt; ，安装时只要一个命令：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;pip install keep-running
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;安装之后，这个脚本会拷贝到 &lt;code&gt;/usr//bin&lt;/code&gt;。我们期待安装之后，可以通过命令行运行：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[huqiu@101 android-gems-middleware]$ keep-running
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当然，为了可以直接运行，需要在脚本头部加上这样一段，这个是基础知识了：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;#!/usr/bin/env python
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;实际上，运行之后：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[huqiu@101 android-gems-middleware]$ keep-running
: No such file or directory
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;但是可以通过 python 执行：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[huqiu@101 android-gems-middleware]$ python keep-running
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;原因&lt;/h4&gt;

&lt;p&gt;原因是：该脚本文件格式是 dos 格式 而非 unix 格式。&lt;/p&gt;

&lt;p&gt;dos格式下，换行符是 CRLF 的问题，使得第一行变成了（CR 的 ascii 码是 015）：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;#!/usr/bin/env python\015
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;修改成 unix 格式就好了。我刚发布了 &lt;a href=&quot;https://github.com/liaohuqiu/keep-running/releases/tag/1.0.0&quot;&gt;1.0.0&lt;/a&gt; 解决了这个问题。&lt;/p&gt;

&lt;h4&gt;修改方法&lt;/h4&gt;

&lt;p&gt;在 vim 中，查看文件格式，并设置，保存即可&lt;/p&gt;

&lt;p&gt;查看&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;:set ff
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;设置&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;:set ff=unix
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>LeakCanary 中文使用说明</title>
      <link>http://liaohuqiu.net/cn/posts/leak-canary-read-me/</link>
      <pubDate>Sun, 10 May 2015 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/leak-canary-read-me</guid>
      <description>&lt;h3&gt;LeakCanary&lt;/h3&gt;

&lt;p&gt;Android 和 Java 内存泄露检测。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;“A small leak will sink a great ship.”&lt;/em&gt; - Benjamin Franklin&lt;/p&gt;

&lt;p&gt;千里之堤， 毁于蚁穴。 -- 《韩非子·喻老》&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&#39;row&#39;&gt;
&lt;div class=&#39;col-md-8 col-md-offset-2&#39;&gt;
&lt;img src=&#39;https://raw.githubusercontent.com/liaohuqiu/leakcanary/master/assets/screenshot.png&#39; /&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;h4&gt;demo&lt;/h4&gt;

&lt;p&gt;一个非常简单的 LeakCanary demo: &lt;a href=&quot;https://github.com/liaohuqiu/leakcanary-demo&quot;&gt;https://github.com/liaohuqiu/leakcanary-demo&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;开始使用&lt;/h3&gt;

&lt;p&gt;在 &lt;code&gt;build.gradle&lt;/code&gt; 中加入引用，不同的编译使用不同的引用：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt; dependencies {
   debugCompile &amp;#39;com.squareup.leakcanary:leakcanary-android:1.3&amp;#39;
   releaseCompile &amp;#39;com.squareup.leakcanary:leakcanary-android-no-op:1.3&amp;#39;
 }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在 &lt;code&gt;Application&lt;/code&gt; 中：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ExampleApplication&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Application&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LeakCanary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;这样，就万事俱备了！&lt;/strong&gt; 在 debug build 中，如果检测到某个 activity 有内存泄露，LeakCanary 就是自动地显示一个通知。&lt;/p&gt;

&lt;h2&gt;为什么需要使用 LeakCanary？&lt;/h2&gt;

&lt;p&gt;问得好，看这个文章&lt;a href=&quot;/cn/posts/leak-canary/&quot;&gt;LeakCanary: 让内存泄露无所遁形&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;如何使用&lt;/h3&gt;

&lt;p&gt;使用 &lt;code&gt;RefWatcher&lt;/code&gt; 监控那些本该被回收的对象。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;RefWatcher&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;refWatcher&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{...};&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 监控&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;refWatcher&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;watch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;schrodingerCat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;LeakCanary.install()&lt;/code&gt; 会返回一个预定义的 &lt;code&gt;RefWatcher&lt;/code&gt;，同时也会启用一个 &lt;code&gt;ActivityRefWatcher&lt;/code&gt;，用于自动监控调用 &lt;code&gt;Activity.onDestroy()&lt;/code&gt; 之后泄露的 activity。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ExampleApplication&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Application&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RefWatcher&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getRefWatcher&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ExampleApplication&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;application&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ExampleApplication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getApplicationContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;refWatcher&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RefWatcher&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;refWatcher&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;refWatcher&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LeakCanary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用 &lt;code&gt;RefWatcher&lt;/code&gt; 监控 Fragment：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BaseFragment&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Fragment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onDestroy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onDestroy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;RefWatcher&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;refWatcher&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ExampleApplication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getRefWatcher&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;refWatcher&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;watch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;工作机制&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;RefWatcher.watch()&lt;/code&gt; 创建一个 &lt;a href=&quot;https://github.com/square/leakcanary/blob/master/library/leakcanary-watcher/src/main/java/com/squareup/leakcanary/KeyedWeakReference.java&quot;&gt;KeyedWeakReference&lt;/a&gt; 到要被监控的对象。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;然后在后台线程检查引用是否被清除，如果没有，调用GC。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果引用还是未被清除，把 heap 内存 dump 到 APP 对应的文件系统中的一个 &lt;code&gt;.hprof&lt;/code&gt; 文件中。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在另外一个进程中的 &lt;code&gt;HeapAnalyzerService&lt;/code&gt; 有一个 &lt;code&gt;HeapAnalyzer&lt;/code&gt; 使用&lt;a href=&quot;https://github.com/square/haha&quot;&gt;HAHA&lt;/a&gt; 解析这个文件。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;得益于唯一的 reference key, &lt;code&gt;HeapAnalyzer&lt;/code&gt; 找到 &lt;code&gt;KeyedWeakReference&lt;/code&gt;，定位内存泄露。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;HeapAnalyzer&lt;/code&gt; 计算 &lt;em&gt;到 GC roots 的最短强引用路径&lt;/em&gt;，并确定是否是泄露。如果是的话，建立导致泄露的引用链。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;引用链传递到 APP 进程中的 &lt;code&gt;DisplayLeakService&lt;/code&gt;， 并以通知的形式展示出来。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;如何复制 leak trace？&lt;/h3&gt;

&lt;p&gt;在 Logcat 中，你可以看到类似这样的 leak trace：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;In com.example.leakcanary:1.0:1 com.example.leakcanary.MainActivity has leaked:

* GC ROOT thread java.lang.Thread.&amp;lt;Java Local&amp;gt; (named &amp;#39;AsyncTask #1&amp;#39;)
* references com.example.leakcanary.MainActivity$3.this$0 (anonymous class extends android.os.AsyncTask)
* leaks com.example.leakcanary.MainActivity instance

* Reference Key: e71f3bf5-d786-4145-8539-584afaecad1d
* Device: Genymotion generic Google Nexus 6 - 5.1.0 - API 22 - 1440x2560 vbox86p
* Android Version: 5.1 API: 22
* Durations: watch=5086ms, gc=110ms, heap dump=435ms, analysis=2086ms
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;你甚至可以通过分享按钮把这些东西分享出去。&lt;/p&gt;

&lt;h3&gt;SDK 导致的内存泄露&lt;/h3&gt;

&lt;p&gt;随着时间的推移，很多SDK 和厂商 ROM 中的内存泄露问题已经被尽快修复了。但是，当这样的问题发生时，一般的开发者能做的事情很有限。&lt;/p&gt;

&lt;p&gt;LeakCanary 有一个已知问题的忽略列表，&lt;a href=&quot;https://github.com/square/leakcanary/blob/master/library/leakcanary-android/src/main/java/com/squareup/leakcanary/AndroidExcludedRefs.java&quot;&gt;AndroidExcludedRefs.java&lt;/a&gt;，如果你发现了一个新的问题，&lt;a href=&quot;https://github.com/square/leakcanary/issues/new&quot;&gt;请提一个 issue&lt;/a&gt; 并附上 leak trace, reference key, 机器型号和 SDK 版本。如果可以附带上 dump 文件的 链接那就再好不过了。&lt;/p&gt;

&lt;p&gt;对于&lt;strong&gt;最新发布的 Android&lt;/strong&gt;，这点尤其重要。你有机会在帮助在早期发现新的内存泄露，这对整个 Android 社区都有极大的益处。&lt;/p&gt;

&lt;p&gt;开发版本的 Snapshots 包在这里： &lt;a href=&quot;https://oss.sonatype.org/content/repositories/snapshots/&quot;&gt;Sonatype&amp;#39;s &lt;code&gt;snapshots&lt;/code&gt; repository&lt;/a&gt;。&lt;/p&gt;

&lt;h3&gt;leak trace 之外&lt;/h3&gt;

&lt;p&gt;有时，leak trace 不够，你需要通过 &lt;a href=&quot;http://eclipse.org/mat/&quot;&gt;MAT&lt;/a&gt; 或者 &lt;a href=&quot;https://www.yourkit.com/&quot;&gt;YourKit&lt;/a&gt; 深挖 dump 文件。&lt;/p&gt;

&lt;p&gt;通过以下方法，你能找到问题所在：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;查找所有的 &lt;code&gt;com.squareup.leakcanary.KeyedWeakReference&lt;/code&gt; 实例。&lt;/li&gt;
&lt;li&gt;检查 &lt;code&gt;key&lt;/code&gt; 字段&lt;/li&gt;
&lt;li&gt;Find the &lt;code&gt;KeyedWeakReference&lt;/code&gt; that has a &lt;code&gt;key&lt;/code&gt; field equal to the reference key reported by LeakCanary.&lt;/li&gt;
&lt;li&gt;找到 key 和 和 logcat 输出的 key 值一样的 &lt;code&gt;KeyedWeakReference&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;referent&lt;/code&gt; 字段对应的就是泄露的对象。&lt;/li&gt;
&lt;li&gt;剩下的，就是动手修复了。最好是检查到 GC root 的最短强引用路径开始。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;自定义&lt;/h3&gt;

&lt;h4&gt;UI 样式&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;DisplayLeakActivity&lt;/code&gt; 有一个默认的图标和标签，你只要在你自己的 APP 资源中，替换以下资源就可。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;res/
  drawable-hdpi/
    __leak_canary_icon.png
  drawable-mdpi/
    __leak_canary_icon.png
  drawable-xhdpi/
    __leak_canary_icon.png
  drawable-xxhdpi/
    __leak_canary_icon.png
  drawable-xxxhdpi/
    __leak_canary_icon.png
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;resources&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;__leak_canary_display_activity_label&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;MyLeaks&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/resources&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;保存 leak trace&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;DisplayLeakActivity&lt;/code&gt; saves up to 7 heap dumps &amp;amp; leak traces in the app directory. You can change that number by providing &lt;code&gt;R.integer.__leak_canary_max_stored_leaks&lt;/code&gt; in your app:&lt;/p&gt;

&lt;p&gt;在 APP 的目录中，&lt;code&gt;DisplayLeakActivity&lt;/code&gt; 保存了 7 个 dump 文件和 leak trace。你可以在你的 APP 中，定义 &lt;code&gt;R.integer.__leak_canary_max_stored_leaks&lt;/code&gt; 来覆盖类库的默认值。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;resources&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;integer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;__leak_canary_max_stored_leaks&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;20&lt;span class=&quot;nt&quot;&gt;&amp;lt;/integer&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/resources&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;上传 leak trace 到服务器&lt;/h4&gt;

&lt;p&gt;你可以改变处理完成的默认行为，将 leak trace 和 heap dump 上传到你的服务器以便统计分析。&lt;/p&gt;

&lt;p&gt;创建一个 &lt;code&gt;LeakUploadService&lt;/code&gt;， 最简单的就是继承 &lt;code&gt;DisplayLeakService&lt;/code&gt; ：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LeakUploadService&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DisplayLeakService&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;afterDefaultHandling&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HeapDump&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;heapDump&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AnalysisResult&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;leakInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;leakFound&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;excludedLeak&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;myServer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;uploadLeakBlocking&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;heapDump&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;heapDumpFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;leakInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;请确认 release 版本 使用 &lt;code&gt;RefWatcher.DISABLED&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ExampleApplication&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Application&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RefWatcher&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getRefWatcher&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ExampleApplication&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;application&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ExampleApplication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getApplicationContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;refWatcher&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RefWatcher&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;refWatcher&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;refWatcher&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;installLeakCanary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RefWatcher&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;installLeakCanary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RefWatcher&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;DISABLED&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;自定义 &lt;code&gt;RefWatcher&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DebugExampleApplication&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ExampleApplication&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RefWatcher&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;installLeakCanary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LeakCanary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LeakUploadService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;别忘了注册 service：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;manifest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:android=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;xmlns:tools=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://schemas.android.com/tools&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;application&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;com.example.DebugExampleApplication&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;service&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;com.example.LeakUploadService&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/application&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/manifest&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#39;row&#39;&gt;
&lt;div class=&#39;col-md-4 col-md-offset-4&#39;&gt;
&lt;img src=&#39;https://github.com/liaohuqiu/leakcanary/raw/master/assets/icon_512.png&#39;/&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h4&gt;demo&lt;/h4&gt;

&lt;p&gt;一个非常简单的 LeakCanary demo: &lt;a href=&quot;https://github.com/liaohuqiu/leakcanary-demo&quot;&gt;https://github.com/liaohuqiu/leakcanary-demo&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LeakCanary: 让内存泄露无所遁形</title>
      <link>http://liaohuqiu.net/cn/posts/leak-canary/</link>
      <pubDate>Sat, 09 May 2015 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/leak-canary</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;本文为&lt;a href=&quot;https://corner.squareup.com/2015/05/leak-canary.html&quot;&gt;LeakCanary: Detect all memory leaks!&lt;/a&gt;的翻译。原文在: &lt;a href=&quot;https://corner.squareup.com/2015/05/leak-canary.html&quot;&gt;https://corner.squareup.com/2015/05/leak-canary.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;java.lang.OutOfMemoryError
        at android.graphics.Bitmap.nativeCreate(Bitmap.java:-2)
        at android.graphics.Bitmap.createBitmap(Bitmap.java:689)
        at com.squareup.ui.SignView.createSignatureBitmap(SignView.java:121)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;谁也不会喜欢 &lt;code&gt;OutOfMemoryError&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;在 &lt;a href=&quot;https://squareup.com/help/global/en/article/5243-download-the-square-register-app&quot;&gt;Square Register&lt;/a&gt; 中, 在签名页面，&lt;a href=&quot;https://corner.squareup.com/2010/07/smooth-signatures.html&quot;&gt;我们把客户的签名画在 bitmap cache 上&lt;/a&gt;。 这个 bitmap 的尺寸几乎和屏幕的尺寸一样大，在创建这个 bitmap 对象时，经常会引发 &lt;code&gt;OutOfMemoryError&lt;/code&gt;，简称&lt;code&gt;OOM&lt;/code&gt;。&lt;/p&gt;

&lt;div class=&#39;row&#39;&gt;
&lt;div class=&#39;col-md-8 col-md-offset-2&#39;&gt;
&lt;img src=&#39;https://corner.squareup.com/images/leakcanary/signature.png&#39; /&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;当时，我们尝试过一些解决方案，但都没解决问题&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;使用 Bitmap.Config.ALPHA_8 因为，签名仅有黑色。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;捕捉 &lt;code&gt;OutOfMemoryError&lt;/code&gt;, 尝试 GC 并重试（受 &lt;a href=&quot;https://android.googlesource.com/platform/packages/inputmethods/LatinIME/+/ics-mr1/java/src/com/android/inputmethod/latin/Utils.java&quot;&gt;GCUtils&lt;/a&gt; 启发）。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;我们没想过在 Java heap 内存之外创建 bitmap 。苦逼的我们，那会 &lt;a href=&quot;https://github.com/facebook/fresco&quot;&gt;Fresco&lt;/a&gt; 还不存在。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;路子走错了&lt;/h4&gt;

&lt;p&gt;其实 bitmap 的尺寸不是真正的问题，当内存吃紧的时候，到处都有可能引发 OO。在创建大对象，比如 bitmap 的时候，更有可能发生。OOM 只是一个表象，更深层次的问题可能是: &lt;strong&gt;内存泄露&lt;/strong&gt;。&lt;/p&gt;

&lt;h4&gt;什么是内存泄露&lt;/h4&gt;

&lt;p&gt;一些对象有着有限的生命周期。当这些对象所要做的事情完成了，我们希望他们会被回收掉。但是如果有一系列对这个对象的引用，那么在我们期待这个对象生命周期结束的时候被收回的时候，它是不会被回收的。它还会占用内存，这就造成了内存泄露。持续累加，内存很快被耗尽。&lt;/p&gt;

&lt;p&gt;比如，当 &lt;code&gt;Activity.onDestroy&lt;/code&gt; 被调用之后，activity 以及它涉及到的 view 和相关的 bitmap 都应该被回收。但是，如果有一个后台线程持有这个 activity 的引用，那么 activity 对应的内存就不能被回收。这最终将会导致内存耗尽，然后因为 OOM 而 crash。&lt;/p&gt;

&lt;h4&gt;对战内存泄露&lt;/h4&gt;

&lt;p&gt;排查内存泄露是一个全手工的过程，这在 Raizlabs 的 &lt;a href=&quot;http://www.raizlabs.com/dev/2014/03/wrangling-dalvik-memory-management-in-android-part-1-of-2/&quot;&gt;Wrangling Dalvik&lt;/a&gt; 系列文章中有详细描述。&lt;/p&gt;

&lt;p&gt;以下几个关键步骤：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;通过 &lt;a href=&quot;https://bugsnag.com/&quot;&gt;Bugsnag&lt;/a&gt;, &lt;a href=&quot;https://try.crashlytics.com/&quot;&gt;Crashlytics&lt;/a&gt; 或者 &lt;a href=&quot;https://play.google.com/apps/publish/&quot;&gt;Developer Console&lt;/a&gt; 等统计平台，了解 &lt;code&gt;OutOfMemoryError&lt;/code&gt; 情况。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;重现问题。为了重现问题，机型非常重要，因为一些问题只在特定的设备上会出现。为了找到特定的机型，你需要想尽一切办法，你可能需要去买，去借，甚至去偷。 当然，为了确定复现步骤，你需要一遍一遍地去尝试。一切都是非常原始和粗暴的。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在发生内存泄露的时候，把内存 Dump 出来。具体&lt;a href=&quot;https://gist.github.com/pyricau/4726389fd64f3b7c6f32&quot;&gt;看这里&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;然后，你需要在 &lt;a href=&quot;http://eclipse.org/mat/&quot;&gt;MAT&lt;/a&gt; 或者 &lt;a href=&quot;https://www.yourkit.com/&quot;&gt;YourKit&lt;/a&gt; 之类的内存分析工具中反复查看，找到那些原本该被回收掉的对象。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;计算这个对象到 GC roots 的最短强引用路径。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;确定引用路径中的哪个引用是不该有的，然后修复问题。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;很复杂对吧？&lt;/p&gt;

&lt;p&gt;如果有一个类库能在发生 OOM 之前把这些事情全部都搞定，然后你只要修复这些问题就好了，岂不妙哉！&lt;/p&gt;

&lt;h4&gt;LeakCanary&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/square/leakcanary&quot;&gt;LeakCanary&lt;/a&gt; 是一个检测内存泄露的开源类库。你可以在 debug 包种轻松检测内存泄露。&lt;/p&gt;

&lt;p&gt;先看一个例子:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;class Cat {
}

class Box {
  Cat hiddenCat;
}
class Docker {
    // 静态变量，将不会被回收，除非加载 Docker 类的 ClassLoader 被回收。
    static Box container;
}

// ...

Box box = new Box();

// 薛定谔之猫
Cat schrodingerCat = new Cat();
box.hiddenCat = schrodingerCat;
Docker.container = box;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;创建一个&lt;code&gt;RefWatcher&lt;/code&gt;，监控对象引用情况。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;// 我们期待薛定谔之猫很快就会消失（或者不消失），我们监控一下
refWatcher.watch(schrodingerCat);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当发现有内存泄露的时候，你会看到一个很漂亮的 leak trace 报告:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GC ROOT static Docker.container&lt;/li&gt;
&lt;li&gt;references Box.hiddenCat&lt;/li&gt;
&lt;li&gt;leaks Cat instance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;我们知道，你很忙，每天都有一大堆需求。所以我们把这个事情弄得很简单，你只需要添加一行代码就行了。然后 LeakCanary 就会自动侦测 activity 的内存泄露了。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;public class ExampleApplication extends Application {
  @Override public void onCreate() {
    super.onCreate();
    LeakCanary.install(this);
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后你会在通知栏看到这样很漂亮的一个界面:&lt;/p&gt;

&lt;div class=&#39;row&#39;&gt;
&lt;div class=&#39;col-md-8 col-md-offset-2&#39;&gt;
&lt;img src=&#39;https://corner.squareup.com/images/leakcanary/leaktrace.png&#39;/&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;h4&gt;结论&lt;/h4&gt;

&lt;p&gt;使用 LeakCanary 之后，我们修复了我们 APP 中相当多的内存泄露。我们甚至发现了 &lt;a href=&quot;https://github.com/square/leakcanary/blob/master/library/leakcanary-android/src/main/java/com/squareup/leakcanary/AndroidExcludedRefs.java&quot;&gt;Android SDK 中的一些内存泄露问题&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;结果是惊艳的，我们减少了 94% 的由 OOM 导致的 crash。&lt;/p&gt;

&lt;div class=&#39;row&#39;&gt;
&lt;div class=&#39;col-md-8 col-md-offset-2&#39;&gt;
&lt;img src=&#39;https://corner.squareup.com/images/leakcanary/oom_rate.png&#39;/&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;如果你也想消灭 OOM crash，那还犹豫什么，赶快使用 &lt;a href=&quot;https://github.com/square/leakcanary&quot;&gt;LeakCanary&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;相关链接:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;/cn/posts/leak-canary-read-me/&quot;&gt;LeakCanary 中文使用说明&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;一个非常简单的 LeakCanary demo: &lt;a href=&quot;https://github.com/liaohuqiu/leakcanary-demo&quot;&gt;https://github.com/liaohuqiu/leakcanary-demo&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Help: Would you please follow me on GitHub</title>
      <link>http://liaohuqiu.net/posts/follow-me-on-github/</link>
      <pubDate>Tue, 05 May 2015 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/posts/follow-me-on-github</guid>
      <description>&lt;p&gt;My dear friends:&lt;/p&gt;

&lt;p&gt;I need your help!&lt;/p&gt;

&lt;p&gt;My company is hosting an event, the one who has more GitHub &lt;strong&gt;Followers&lt;/strong&gt; and &lt;strong&gt;Public Contributions&lt;/strong&gt; will be selected as the &amp;quot;Active Open Source Community Contributor&amp;quot;.&lt;/p&gt;

&lt;p&gt;GitHub is the greatest open source community: &lt;code&gt;Build software better, together.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I have also posted some repositories, like: &lt;a href=&quot;https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh&quot;&gt;android-Ultra-Pull-To-Refresh&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;I keep tracing issues, fixing bugs, updating documents. I hope the work I do will help someone.&lt;/p&gt;

&lt;p&gt;I want to be selected in the event and I&amp;#39;m really active on GitHub. But I notice that I didn&amp;#39;t have many followers. So I would really appreciate if you could follow me on GitHub:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;h4&gt;&lt;a href=&quot;https://github.com/liaohuqiu&quot;&gt;https://github.com/liaohuqiu&lt;/a&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I&amp;#39;m interested in a lot of technical fields, I&amp;#39;ll share the latest &lt;strong&gt;COOL&lt;/strong&gt; projects with you by &lt;strong&gt;&lt;em&gt;Staring&lt;/em&gt;&lt;/strong&gt; them.&lt;/p&gt;

&lt;p&gt;Thank you for your help.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;And here is my twitter: &lt;a href=&quot;https://twitter.com/liaohuqiu&quot;&gt;https://twitter.com/liaohuqiu&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>有一事相求，请在 GitHub 上关注我吧</title>
      <link>http://liaohuqiu.net/cn/posts/follow-me-on-github/</link>
      <pubDate>Tue, 05 May 2015 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/follow-me-on-github</guid>
      <description>&lt;p&gt;活动结束了，我也离开阿里了。非常感谢各位对我的支持。&lt;/p&gt;

&lt;p&gt;非常感谢！&lt;/p&gt;

&lt;p&gt;April 28, 2016 更新。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;非常抱歉写这样一个文章，我遇到一个事情，需要大家的帮助。&lt;/p&gt;

&lt;p&gt;最近内部公司举行一个活动，评比开源社区的活跃贡献者。评比指标是 GitHub 上 Follower 和 Contribution 的数量。&lt;/p&gt;

&lt;p&gt;GitHub是一个伟大的网站，我们可以和来自世界各地的朋友协作，交流，分享： &lt;code&gt;Build software better, together.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;我也开源了一些项目，并且认真维护和改进：跟进 issue，修复问题，更新完善文档。我希望这些项目对需要的人有帮助，希望我的工作可以让项目的使用者们心生喜悦。&lt;/p&gt;

&lt;p&gt;我参加了公司的这个评比活动，希望成为公司和同事认同的 “&lt;code&gt;开源社区的活跃贡献者&lt;/code&gt;”，我持续提交， 一直很活跃，但我发现我的 Follower 数量较少，可能无法被评选上，所以我在这里请求朋友们关注我的 GitHub ：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;h4&gt;&lt;a href=&quot;https://github.com/liaohuqiu&quot;&gt;https://github.com/liaohuqiu&lt;/a&gt;&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;谢谢大家。&lt;/p&gt;

&lt;p&gt;我对很多技术领域都感兴趣，如果发现有新的好的项目，我也会通过 Star 来分享给大家。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;另外，这个是我的新浪微博，&lt;a href=&quot;http://weibo.com/liaohuqiu&quot;&gt;http://weibo.com/liaohuqiu&lt;/a&gt; 欢迎和朋友们分享交流。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>关于红杏的公益代理, Android Studio以及freso的编译</title>
      <link>http://liaohuqiu.net/cn/posts/about-red-apricot-and-compiling-fresco/</link>
      <pubDate>Sat, 11 Apr 2015 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/about-red-apricot-and-compiling-fresco</guid>
      <description>&lt;p&gt;红杏目前已经处于不可以用状态。各位请通过工单系统申请退款。&lt;/p&gt;

&lt;p&gt;April 28, 2016 更新。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;前几天红杏开放了公益代理，专门为开发人员开放，免费使用。&lt;/p&gt;

&lt;p&gt;从今以后更新android sdk，使用Android Studio都会顺利很多。一直以来使用Android Studio最大的障碍，现在通过红杏公益代理可以得到解决了。&lt;/p&gt;

&lt;p&gt;一直在使用红杏，这次郑重推荐大家使用红杏。&lt;/p&gt;

&lt;p&gt;使用红杏，让获取知识变得不那么困难和艰辛。使用极其方便，节约宝贵时间，创造更多价值。&lt;/p&gt;

&lt;p&gt;这个是我的推广链接: &lt;a href=&quot;http://honx.in/_VbO5K3xTJQmbLdt2&quot;&gt;http://honx.in/_VbO5K3xTJQmbLdt2&lt;/a&gt;, 你通过这个链接安装购买1个月以上的服务，你我都将获赠10天。&lt;/p&gt;

&lt;p&gt;Facebook上月开源的Fresco 是一个Android Studio项目，作为一个基础类库，Fresco的流行，会使更多的国内开发者转向Android Studio。本文的最后，简单说明Fresco的编译。&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;关于科学上网和资料搜索&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;使用英文进行资料检索。&lt;/p&gt;

&lt;p&gt;英语是工具，如果你想有更广阔的天地，一定要掌握。&lt;/p&gt;

&lt;p&gt;没有谁一出生就会英语。不会就练习。持之以恒。&lt;/p&gt;

&lt;p&gt;需要我跟你讲一个李白遇到的那个大娘铁杵磨成针的故事么。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于技术人员来说，建议使用google进行搜索。&lt;/p&gt;

&lt;p&gt;百度的开发工程师都用google查技术资料。嗯。是这样的。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;国内的论坛和贴吧，寻找问题和答案较难。需要提问，建议在stackoverflow上提问。&lt;/p&gt;

&lt;p&gt;多在stackoverflow这样的技术社区活跃你将受益匪浅。对了，这个是&lt;a href=&quot;http://stackoverflow.com/users/2446397/srain&quot;&gt;我在stackoverflow的profile&lt;/a&gt; 。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;千万不要在qq群提问， 但是可以对某一问题进行交流。除非是专业客服群。&lt;/strong&gt; &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;关于红杏&lt;/h3&gt;

&lt;p&gt;现在我有2个linode的vps一个在日本，一个在亚特兰大。在使用&lt;a href=&quot;http://honx.in/_VbO5K3xTJQmbLdt2&quot;&gt;红杏&lt;/a&gt;之前，我一直用他们。&lt;/p&gt;

&lt;p&gt;后来用了&lt;a href=&quot;http://honx.in/_VbO5K3xTJQmbLdt2&quot;&gt;红杏&lt;/a&gt;，但是遗憾的是，&lt;a href=&quot;http://honx.in/_VbO5K3xTJQmbLdt2&quot;&gt;红杏&lt;/a&gt;只能在chrome使用。虽然这对我来说足够了。但是遇到更新android sdk之类的时候，还是需要借助vpn或者代理。&lt;/p&gt;

&lt;p&gt;但是红杏实在是太方便了。我再也不用折腾那些代理配置，整理添加网站名单了。这为我节省出来很多可观的时间。&lt;/p&gt;

&lt;p&gt;但是除了推荐给我身边的几个朋友使用，我并没有我大范围推荐给大家使用。&lt;/p&gt;

&lt;p&gt;直到&lt;a href=&quot;http://honx.in/_VbO5K3xTJQmbLdt2&quot;&gt;红杏&lt;/a&gt;推出了公益版: &lt;a href=&quot;http://blog.honx.in/dev-only&quot;&gt;http://blog.honx.in/dev-only&lt;/a&gt; ，这是一个http代理，可免费使用，专供开发人员使用。&lt;/p&gt;

&lt;p&gt;使用这个代理，你可以很顺畅地做很多事情了:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;更新android sdk&lt;/li&gt;
&lt;li&gt;顺畅使用Android Studio&lt;/li&gt;
&lt;li&gt;github push / fetch&lt;/li&gt;
&lt;li&gt;等等等等，其他的&lt;a href=&quot;http://blog.honx.in/dev-only/&quot;&gt;更多&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;真是业界良心&lt;/strong&gt;。得知这个消息之后，我往我另外一个账号上充了一年的费用，以示支持。对于良心企业，能做的也只有这么多。&lt;/p&gt;

&lt;h3&gt;郑重推荐使用红杏&lt;/h3&gt;

&lt;p&gt;在此，我郑重推荐大家使用红杏。节省你的时间，让获取知识的过程变得不那么艰难。&lt;/p&gt;

&lt;p&gt;目前&lt;a href=&quot;http://honx.in/_VbO5K3xTJQmbLdt2&quot;&gt;红杏&lt;/a&gt;按月付费是10元每月。这个已经是低得不能再低的资费。我不知道现在10块钱还可以做些什么事情: 一顿饭？一碗饺子?&lt;/p&gt;

&lt;p&gt;每月10元，打开所有原来打不开的网页。&lt;a href=&quot;http://honx.in/_VbO5K3xTJQmbLdt2&quot;&gt;红杏&lt;/a&gt; 支持2个终端同时在线。如果你有两个电脑，你可以共用一个账号。当然，也可以两人共享。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;我弟弟还在学校读博，有很强的这个需求，之前都是用我的vpn的。我跟他推荐&lt;a href=&quot;http://honx.in/_VbO5K3xTJQmbLdt2&quot;&gt;红杏&lt;/a&gt;，说你可以用我的账号。他说不用，自己买，没多少钱，也算是对良心企业的一个支持，做事真体面，这点特别像我。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;每个人访问的站点需求不一样，每个人网络情况也不一样，一份大而全的白名单并不能很好解决问题，这也是我使用&lt;code&gt;Proxy SwitchySharp&lt;/code&gt;遇到的问题。&lt;/p&gt;

&lt;p&gt;而&lt;a href=&quot;http://honx.in/_VbO5K3xTJQmbLdt2&quot;&gt;红杏&lt;/a&gt;对我最大的好处是可以轻松管理需要代理的域名，对于不可访问的域名，智能提示。我不再需要打开chrome的控制台，看到底是哪些域名没法访问了。&lt;/p&gt;

&lt;p&gt;我自己有vps，但我已经厌倦管理名单那样琐碎，耗时的事情。使用工具在于节省时间，而不是投入更多时间。&lt;/p&gt;

&lt;p&gt;这也就是为什么我没有推荐vpn类或者shadowsocks类产品的原因了。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;苦苦寻找免费的代理，修改host？那花去的时间，你可以创造更多价值。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;如何使用红杏的公益代理&lt;/h3&gt;

&lt;p&gt;公益代理为: &lt;a href=&quot;http://hx.gy:1080%E3%80%82%E6%B3%A8%E6%84%8F:&quot;&gt;http://hx.gy:1080。注意:&lt;/a&gt; hostname为&lt;code&gt;hx.gy&lt;/code&gt;, 不要带上&lt;code&gt;http://&lt;/code&gt;。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;github加速&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git config --global http.proxy http://hx.gy:1080
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果要移除, 编辑&lt;code&gt;~/.gitconfig&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;命令行更新android sdk&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;./android list sdk -u --proxy-host=hx.gy --proxy-port=1080
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;GUI更新SDK&lt;/p&gt;

&lt;p&gt;打开SDK Manager的设置页, mac 没有入口，需要通过 &lt;code&gt;cmd + ,&lt;/code&gt; 打开。&lt;/p&gt;

&lt;div class=&#39;row&#39;&gt;
    &lt;div class=&#39;col-md-6 col-md-offset-3&#39;&gt;
        &lt;img src=&#39;//img1.liaohuqiu.com/red-apricot/red-apricot-sdk-manager-set-proxy.png&#39; width=&#39;100%&#39;/&gt;
    &lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;给Android Stuido / Intellij IDEA 配置代理，这样下载gradle或者其他依赖就顺利了。&lt;/p&gt;

&lt;p&gt;打开Preference页面，找到&lt;code&gt;HTTP Proxy&lt;/code&gt;, 选择&lt;code&gt;Manual proxy configuration&lt;/code&gt;。 &lt;/p&gt;

&lt;p&gt;Host Name: &lt;code&gt;hx.gy&lt;/code&gt;, Port Number: 1080.&lt;/p&gt;

&lt;div class=&#39;row&#39;&gt;
    &lt;div class=&#39;col-md-8 col-md-offset-2&#39;&gt;
        &lt;img src=&#39;//img1.liaohuqiu.com/red-apricot/red-apricot-android-stuido-set-proxy.png&#39; width=&#39;100%&#39;/&gt;
    &lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;编译Fresco&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;设置好代理，从github顺利clone项目&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;给SDK Manager 设置好代理，顺利更新sdk到最新&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;给Android Studio设置好代理，顺利打开freso项目&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Open an exsiting Android Studio Project&lt;/li&gt;
&lt;li&gt;选择build.gradle&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;但是，Android Studio目前还不支持NDK，所以需要在命令行下预编译。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;./gradlew :sample:assembleDebug
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;好了，编译完成之后，Android Studio就可以正常运行了。&lt;/p&gt;

&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>重定义/覆盖Android类库中的文字，颜色等资源</title>
      <link>http://liaohuqiu.net/cn/posts/replace-or-override-string-in-android-library/</link>
      <pubDate>Sat, 28 Mar 2015 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/replace-or-override-string-in-android-library</guid>
      <description>&lt;p&gt;收到一份邮件，咨询如果自定义&lt;a href=&quot;https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh%60&quot;&gt;android-Ultra-Pull-To-Refresh&lt;/a&gt;的文字提示：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hi, &lt;/p&gt;

&lt;p&gt;I&amp;#39;m using your library and I find it very useful but I have a (stupid) problem: I&amp;#39;ve imported the library using gradle and all is working perfectly but I&amp;#39;m unable to change the strings that appear on the header view:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Updating...&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Updated&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Pull down to Refresh&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;etc...&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Is the a function or something to localize these strings ?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;目前在类库中内置了英文和中文两种提示文字。如果需要其他的语言或者需要修改的话，要自定义文字覆盖掉类库中默认值。&lt;/p&gt;

&lt;p&gt;和这个场景类似，我们在使用其他一些涉及UI样式的类库时，有时也希望可以自定义UI样式，比如:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; 如果使用的类库中的一些文案我们需要做汉化，或者做一些修改；&lt;/li&gt;
&lt;li&gt; 一些配色和应用的配色不太一致。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;我们只要在应用项目的values目录中定义相应的值就可以了。如要实现多语言，那么在其他各个语言资源目录分别定义即可。&lt;/p&gt;

&lt;p&gt;在应用和类库查找资源时，按以下流程进行:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; 先按照语言查找应用中有无资源定义&lt;/li&gt;
&lt;li&gt; 如果没有，采用类库中的同语言资源配置。&lt;/li&gt;
&lt;li&gt; 如果当前语言没有，则采用应用的默认配置。&lt;/li&gt;
&lt;li&gt; 如果应用默认配置没有资源配置定义，则使用类库的默认语言配置。&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>gitlab 启用注册</title>
      <link>http://liaohuqiu.net/cn/posts/gitlab-enable-sign-up/</link>
      <pubDate>Sat, 21 Mar 2015 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/gitlab-enable-sign-up</guid>
      <description>&lt;p&gt;gitlab 默认安装是没有注册入口的。&lt;/p&gt;

&lt;p&gt;如果要开启注册，需要修改:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;vim /opt/gitlab/embedded/service/gitlab-rails/config/gitlab.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;设置 &lt;code&gt;signup_enabled=true&lt;/code&gt;，随后重启。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;gitlab-ctl restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;重启之后，成功生成socket文件，如果不是用内置的nginx服务器，注意文件权限是否匹配。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;var/opt/gitlab/gitlab-rails/tmp/sockets/gitlab.socket
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>我眼中的下拉刷新</title>
      <link>http://liaohuqiu.net/cn/posts/the-pull-to-refresh-in-my-eyes/</link>
      <pubDate>Thu, 29 Jan 2015 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/the-pull-to-refresh-in-my-eyes</guid>
      <description>&lt;h3&gt;背景&lt;/h3&gt;

&lt;p&gt;在APP交互中，下拉刷新是非常常见的一种交互方式。在使用APP的时候，这也成为了一种潜意识的操作了。&lt;/p&gt;

&lt;p&gt;下拉刷新最早在iOS中出现，iOS的视图渲染机制完成这种效果是非常简单的。&lt;/p&gt;

&lt;p&gt;但Android的视图呈现形式，实现这一效果就需要稍微麻烦一些了。&lt;/p&gt;

&lt;p&gt;两三年之前，Android 的类库打包，对自定义组件的支持是很弱的。&lt;code&gt;res-auto&lt;/code&gt; 这样的xml布局属性命名空间是在&lt;a href=&quot;http://android-developers.blogspot.com/2012/03/updated-sdk-tools-and-adt-revision-17.html&quot;&gt;SDK Tool Version 17 中才支持的&lt;/a&gt;，那是2012年3月的事情。&lt;/p&gt;

&lt;p&gt;对于有资源的类库，早先的打包形式是apklib格式。&lt;/p&gt;

&lt;p&gt;apklib 格式的类库使用 &lt;a href=&quot;https://code.google.com/p/maven-android-plugin&quot;&gt;maven-android-plugin&lt;/a&gt; 生成。使用apklib格式的类库，需要借助maven。所以对于使用eclipse的开发者来说，这又增加了一道门槛。这使得apklib一直没有流行起来。&lt;/p&gt;

&lt;p&gt;aar格式是在 Google I/O 2013 才提出的。&lt;a href=&quot;https://code.google.com/p/maven-android-plugin&quot;&gt;maven-android-plugin&lt;/a&gt; 3.7 版本开始支持aar格式。Android Studio 1.0的发布和流行，标志着apklib格式将要退出历史舞台。&lt;/p&gt;

&lt;p&gt;在带资源的的类库不能被很好支持的时代，自定义组件的封装和实现也受到了极大的限制。&lt;a href=&quot;https://github.com/chrisbanes/Android-PullToRefresh&quot;&gt;Android-PullToRefresh&lt;/a&gt; 的实现便是这一限制的一种体现。为了支持常用的几种View: &lt;code&gt;ListView&lt;/code&gt;, &lt;code&gt;GridView&lt;/code&gt;, &lt;code&gt;ScrollView&lt;/code&gt;, &lt;code&gt;ViewPager&lt;/code&gt;，该项目为这些View都做了适配。然而由于设计的缺陷，每种View都要做相应的适配， 缺乏定制性和扩展性，现在这个项目不再维护了。&lt;/p&gt;

&lt;p&gt;这个项目的流行，对Android UI的表现是有一定影响的，和iOS 上各种新颖美妙的样式相比，Android 的样式总是显得较为逊色。&lt;/p&gt;

&lt;p&gt;对于常用&lt;code&gt;ListView&lt;/code&gt; 有一种包含下拉刷新和加载更多的实现。这个实现是给&lt;code&gt;ListView&lt;/code&gt;加了一个&lt;code&gt;Header View&lt;/code&gt;，同时集成了加载更多功能。&lt;/p&gt;

&lt;p&gt;且不说把这两个功能合并在一起在设计上的缺陷，用Header View来实现下拉刷新，在UI体验上就是大打折扣的。&lt;/p&gt;

&lt;h3&gt;回归简单&lt;/h3&gt;

&lt;p&gt;最为朴素直观的想法和认知，下拉刷新的样式布局应该是这样的:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;               +--------------------+
               |  +--------------+  |
               |  | Header View  |  |
               |  +--------------+  |
               |  +--------------+  |  &amp;lt;----- PtrFrameLayout
               |  |              |  |
               |  |              |  |
               |  |              |  |
               |  | Content View |  |
               |  |              |  |
               |  |              |  |
               |  |              |  |
               |  |              |  |
               |  |              |  |
               |  +--------------+  |
               +--------------------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;外部是一个框架(&lt;code&gt;PtrFrameLayout&lt;/code&gt;), 内含 Header View 和 Content View。需要支持通用布局属性 padding 和 margin。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Header View 是头部，展示刷新相关动画。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Content View 是内容，比如&lt;code&gt;ListView&lt;/code&gt;, &lt;code&gt;ScrollView&lt;/code&gt;等。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在xml文件中，可以方便指定Header View 和 Content View，也可以通过Java代码指定。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这样的布局设计，加上合理的接口抽象，可以带来极大的便利:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;干净，高效。继承于ViewGroup。可以包含任何的View做为Content View。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;极大的定制性和可扩展性，可以定制任何你要的样式。类库中内置了一些流行的样式，但是你可以轻松定制符合自己APP的样式。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;极大的灵活性。开放出接口&lt;code&gt;checkCanDoRefresh()&lt;/code&gt;，检测何时可以进行下拉刷新。即使再复杂的布局嵌套，也能应付自如。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;2013年, 初接触Android的时候，便完成了这样的设计的雏形。这个设计在&lt;a href=&quot;https://github.com/etao-open-source/cube-sdk&quot;&gt;Cube-SDK&lt;/a&gt;静静地躺着，直到&lt;code&gt;support-v4-r21&lt;/code&gt;发布，我看到了&lt;code&gt;SwipeRefreshLayout&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;于是我从&lt;a href=&quot;https://github.com/etao-open-source/cube-sdk&quot;&gt;Cube-SDK&lt;/a&gt; 中把下拉刷新独立出来。这就有了&lt;a href=&quot;https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh&quot;&gt;android-Ultra-Pull-to-Refresh&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;交互&lt;/h4&gt;

&lt;p&gt;Header View 和 Content View 的位置关系如下图:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;       +--------------+                                                刷新距离
       | Header View  |                                    +-------------------
       +--------------+               +--------------+     |             
    +--------------------+         +--| Header View  |--+  |     +--------------------+     
    |  +--------------+  |         |  +--------------+  |  |     |                    | 
    |  |              |  |         |  +--------------+  |  v     |  +--------------+  |  
  --|--|--------------|--|---   ---|--|--------------|--|---  ---|--| Header View  |--|--
    |  |              |  |         |  |              |  |        |  +--------------+  |    
    |  | Content View |  |         |  |              |  |        |  +--------------+  |    
    |  |              |  |         |  | Content View |  |        |  |              |  |    
    |  |              |  |         |  |              |  |        |  |              |  |    
    |  |              |  |         |  |              |  |        |  |              |  |    
    |  |              |  |         |  |              |  |        |  | Content View |  |    
    |  |              |  |         |  |              |  |        |  |              |  |    
    |  |              |  |         |  |              |  |        |  |              |  |    
    |  +--------------+  |         |  |              |  |        |  |              |  |    
    +--------------------+         +--|--------------|--+        +--|--------------|--+    
                                      +--------------+              |              |       
                                                                    |              |       
                                                                    +--------------+       

             位置1                         位置2                         位置3
            初始状态                    未达刷新距离                  达到刷新距离
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;位置关系&lt;/h4&gt;

&lt;p&gt;手指触摸屏幕往下拉动，Header View 和 Content View 也往下移动。&lt;/p&gt;

&lt;p&gt;在往下移动的过程中，Header View 和 Content View 的位置关系如上图所示:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;位置1。初始状态。Header View 在 &lt;code&gt;PtrFrameLayout&lt;/code&gt; 界面之外。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;位置2。随着下拉，Header View 和 Content View 慢慢往下移动，到达位置2。&lt;/p&gt;

&lt;p&gt;在位置2，释放，Content View 回到初始位置。不会触发刷新操作。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;位置3。继续下拉，Content View 头部越过刷新线, 从位置2到到达位置3。在位置3，释放将会触发刷新。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;距离的定义&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;下拉距离&lt;code&gt;(Offset)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;在往下移动的过程中，Content View 上边界距离 &lt;code&gt;PtrFrameLayout&lt;/code&gt; 上边界的距离，我们称为&lt;strong&gt;下拉距离&lt;/strong&gt;。这是一个大于等于0的值。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;刷新距离&lt;code&gt;(Offset to Refresh)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;下拉距离达到一定距离之后，释放， 将会触发刷新。这个距离我们称为&lt;strong&gt;刷新距离&lt;/strong&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;刷新时保持头部的距离&lt;code&gt;(Offset to Keep Header While Loading)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;在刷新时，会显示Header View，Header View上显示loading 动画，提示用户用户正在加载数据。&lt;/p&gt;

&lt;p&gt;这个时候的&lt;code&gt;下拉距离&lt;/code&gt;，我们称为&lt;strong&gt;刷新时保持头部的距离&lt;/strong&gt;，这个距离一般是头部的高度，但是只要你愿意，你可以自定义。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;下拉刷新和释放刷新&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;下拉刷新&lt;code&gt;(PullToRefresh)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;如果设置为下拉刷新，从位置2到位置3的过程，一旦达到&lt;code&gt;刷新距离&lt;/code&gt;，即开始刷新操作。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;释放刷新&lt;code&gt;(ReleaseToRefresh)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;如果设置为释放刷新，从位置2到位置3的过程，不触发刷新操作，释放触发刷新操作。&lt;/p&gt;

&lt;p&gt;如果从位置3往上推，回到位置2，释放，将不会触发刷新操作。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;刷新时保持头部 &lt;code&gt;(KeepHeaderWhileRefresh)&lt;/code&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;如果不设置刷新时保持头部。不管&lt;code&gt;下拉刷新&lt;/code&gt;还是&lt;code&gt;释放刷新&lt;/code&gt;，释放之后，回归到初始位置。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果设置刷新时保持头部，如果释放时下拉距离大于&lt;code&gt;刷新时保持头部的距离&lt;/code&gt;，会滑动到&lt;code&gt;刷新时保持头部的距离&lt;/code&gt;，并保持位置不动。&lt;/p&gt;

&lt;p&gt;刷新完成之后，回归到头部位置。在刷新数据过程中: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  如果下拉使得距离超过&lt;code&gt;刷新时保持头部的距离&lt;/code&gt;, 释放后，会继续回归到&lt;code&gt;刷新时保持头部的距离&lt;/code&gt;；刷新完成后，回归初始位置。&lt;/li&gt;
&lt;li&gt;  如果上推使得距离小于&lt;code&gt;刷新时保持头部的距离&lt;/code&gt;, 释放后，位置不动。刷新完成之后，回归初始位置。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;自动刷新&lt;code&gt;(AutoRefresh)&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;用户手动下拉，可以实现数据更新。同时，也允许程序调用，展示刷新UI，实现自动刷新。&lt;/p&gt;

&lt;p&gt;自动刷新开始，Header View 和 Content View 自动下滑，达到&lt;code&gt;刷新时保持头部的距离&lt;/code&gt;之后，停留。&lt;/p&gt;

&lt;p&gt;后续行为，同&lt;a href=&quot;#%E5%88%B7%E6%96%B0%E6%97%B6%E4%BF%9D%E6%8C%81%E5%A4%B4%E9%83%A8&quot;&gt;刷新时保存头部&lt;/a&gt;行为一致。&lt;/p&gt;

&lt;p&gt;自动刷新有两种模式：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;立刻自动刷新&lt;/p&gt;

&lt;p&gt;从离开初始位置开始，即开始进入刷新状态&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;不立刻自动刷新&lt;/p&gt;

&lt;p&gt;到&lt;code&gt;刷新时保持头部的距离&lt;/code&gt;之后，才开始进入刷新状态。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;接口和实现&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;PtrHandler&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;这个是开发者最常接触的接口，这个接口关注业务的变化。其包含2个方法:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;code&gt;onRefreshBegin&lt;/code&gt;。多种模式刷新模式可以选，多种UI样式可选。不管万千变化，在开始刷新时，都会调用这个方法进行数据刷新。&lt;/li&gt;
&lt;li&gt; &lt;code&gt;checkCanDoRefresh&lt;/code&gt;。开发者面对的业务各不一样，众口难调，封装变化：开发者可以通过此方法，确定可以进行下拉刷新的时机。比如列表数据为空，比如列表数据过期，比如嵌套在ViewPager中的某个Fragment中的一个列表数据为空。&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;PtrUIHandler&lt;/code&gt;这个接口关注UI的变化，这个接口使得实现一个UI样式非常简单。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;code&gt;onUIReset&lt;/code&gt;。当位置回到初始位置。&lt;br&gt;&lt;/li&gt;
&lt;li&gt; &lt;code&gt;onUIRefreshPrepare&lt;/code&gt;。当位置离开初始位置。&lt;br&gt;&lt;/li&gt;
&lt;li&gt; &lt;code&gt;onUIRefreshBegin&lt;/code&gt;。开始刷新动画。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;onUIRefreshComplete&lt;/code&gt;。刷新动画完成。刷新完成之后，开始回归初始位置。   &lt;/p&gt;

&lt;p&gt;如果刷新完成需要播放一个动画，动画完成之后，才开始回归到初始位置。&lt;code&gt;PtrFrameLayout.setRefreshCompleteHook&lt;/code&gt; 会有所帮助。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;onUIPositionChange&lt;/code&gt;。 位置发生变化时此方法通知UI更新。&lt;/p&gt;

&lt;p&gt;得益于这个接口的抽象，我才能在段时间内完成类库内置的几种样式。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;PtrFrameLayout&lt;/code&gt; 接受一个&lt;code&gt;PtrHandler&lt;/code&gt; 和多个&lt;code&gt;PtrUIHandler&lt;/code&gt;。在下拉刷新的过程中，你可以通过非常灵活的方式展现出各种效果。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;一些疑难问题&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;列表无法向上滑动，总是下拉。&lt;code&gt;PtrHandler.checkCanDoRefresh&lt;/code&gt; 这个方法实现有问题。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ListView中的长按。按住ListView一项，下拉松开后，接触的那项仍然处于被按下状态。&lt;code&gt;PtrFrameLayout.setInterceptEventWhileWorking&lt;/code&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;和ViewPager横向移动的配合:  &lt;code&gt;PtrFrameLayout.disableWhenHorizontalMove&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;开始左右滑动之后，不再允许下拉。下拉之后，不再允许左右滑动。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>关于安装Android Maven 本地依赖库</title>
      <link>http://liaohuqiu.net/cn/posts/android-maven-local-repository/</link>
      <pubDate>Thu, 29 Jan 2015 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/android-maven-local-repository</guid>
      <description>&lt;p&gt;如果使用gradle方式，类似这样的依赖非常轻松:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;compile &amp;#39;com.android.support:appcompat-v7:23.0.1&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;但是对于Maven来说，这样就比较困难了:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;dependency&amp;gt;
  &amp;lt;groupId&amp;gt;com.android.support&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;appcompat-v7&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;23.0.1&amp;lt;/version&amp;gt;
  &amp;lt;type&amp;gt;aar&amp;lt;/type&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;因为不管是Maven中央库还是，jcenter，都没有类似的类库了。他们在SDK Manager中的Android Support Repository中，gradle方式可以轻松使用，但是Maven不行。&lt;/p&gt;

&lt;p&gt;如果需要在Maven中使用，需要我们自己安装到本地的Maven库。借助这个项目可以较为轻松实现此目的: &lt;a href=&quot;https://github.com/simpligility/maven-android-sdk-deployer&quot;&gt;https://github.com/simpligility/maven-android-sdk-deployer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;默认安装，安装所有的API level和support 类库，我从来没成功过。需要SDK Manager把所有的API的和相关的Support库都下载完成，这是一个耗时的事情。&lt;/p&gt;

&lt;h4&gt;部分安装&lt;/h4&gt;

&lt;p&gt;如果仅仅需要安装部分的话，可以到各个子项目中安装。比如仅仅需要安装&lt;code&gt;appcompat-v7&lt;/code&gt;, 这个是由 Android Support Repository 提供的:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;cd repositories/
mvn install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;仅仅安装5.0，在SDK Manager中下载完SDK Platform和Source Code之后&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;cd platforms
mvn install -P 5.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;修改版本号&lt;/h4&gt;

&lt;p&gt;如果你下载了5.0的SDK Platform 和 Source Code, 发现&lt;code&gt;mvn install -P 5.0&lt;/code&gt; 之后 版本是 &lt;code&gt;5.0.1_r2&lt;/code&gt;, 你需要的是 &lt;code&gt;5.0_r2&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;修改 Android SDK 目录下的 &lt;code&gt;platforms/android-21/source.properties&lt;/code&gt; 文件:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Pkg.LicenseRef=android-sdk-license
Pkg.Revision=2
Pkg.SourceUrl=https\://dl-ssl.google.com/android/repository/repository-10.xml
Platform.MinToolsRev=22
Platform.Version=5.0.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;修改 &lt;code&gt;Platform.Version&lt;/code&gt; 之后再 &lt;code&gt;mvn install&lt;/code&gt; 即可。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SimpleHashSet, save 25% memory</title>
      <link>http://liaohuqiu.net/posts/simple-hashset/</link>
      <pubDate>Mon, 12 Jan 2015 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/posts/simple-hashset</guid>
      <description>&lt;p&gt;In fact, &lt;code&gt;java.util.HashSet&lt;/code&gt; is just a wrapper of &lt;code&gt;java.util.HashMap&lt;/code&gt;, so its retained heap size is O(&lt;code&gt;n&lt;/code&gt; * &lt;code&gt;entry_size&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;java.util.HashMap&lt;/code&gt; is using separate chaining to process collision, &lt;code&gt;n&lt;/code&gt; is the sum of the count of element and the count of free slots remain in array.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;entry_size&lt;/code&gt; is the shadow heap size of the &lt;code&gt;jave.util.HashMap.Entry&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The definition of &lt;code&gt;java.util.HashMap.Entry&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;static class Entry&amp;lt;K,V&amp;gt; implements Map.Entry&amp;lt;K,V&amp;gt; {
    final K key;
    V value;          
    Entry&amp;lt;K,V&amp;gt; next;
    int hash;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So the shadow heap size is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; 32bit JVM:  8 + 4 * 4 = 24 bytes&lt;/li&gt;
&lt;li&gt; 64bit JVM &lt;code&gt;-UseCompressedOops&lt;/code&gt;: 16 + 8 * 4 = 48 bytes.&lt;/li&gt;
&lt;li&gt; 64bit JVM &lt;code&gt;+UseCompressedOops&lt;/code&gt;: 12 + 4 * 4 + 4(padding) = 32 bytes.&lt;/li&gt;
&lt;li&gt; Davlik:    12 + 4 * 4 + 4(padding) = 32 bytes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In fact &lt;code&gt;V value&lt;/code&gt; is usless for &lt;code&gt;HashSet&lt;/code&gt;, we can implement a HashSet use the following &lt;code&gt;SimpleHashSetEntry&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;private static class SimpleHashSetEntry&amp;lt;T&amp;gt; {

    private int mHash;
    private T mKey;
    private SimpleHashSetEntry&amp;lt;T&amp;gt; mNext;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The retained heap size is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; 32bit JVM:  8 + 4 * 3 + (padding) = 24 bytes&lt;/li&gt;
&lt;li&gt; 64bit JVM &lt;code&gt;-UseCompressedOops&lt;/code&gt;: 16 + 8 * 3 = 40 bytes. (8 bytes saved, 16.66%)&lt;/li&gt;
&lt;li&gt; 64bit JVM &lt;code&gt;+UseCompressedOops&lt;/code&gt;: 12 + 4 * 3 = 24 bytes. (8 bytes saved, 25%)&lt;/li&gt;
&lt;li&gt; Davlik:    12 + 4 * 3 = 24 bytes (8 bytes saved, 25%).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;SimpleHashSet at Github: &lt;a href=&quot;https://github.com/liaohuqiu/SimpleHashSet&quot;&gt;https://github.com/liaohuqiu/SimpleHashSet&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SimpleHashSet, 节省25%内存</title>
      <link>http://liaohuqiu.net/cn/posts/simple-hashset/</link>
      <pubDate>Mon, 12 Jan 2015 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/simple-hashset</guid>
      <description>&lt;p&gt;&lt;code&gt;java.util.HashSet&lt;/code&gt; 仅仅是简单包装了 &lt;code&gt;java.util.HashMap&lt;/code&gt;, 内存占用为 O(&lt;code&gt;n&lt;/code&gt; * &lt;code&gt;entry_size&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;&lt;code&gt;java.util.HashMap&lt;/code&gt; 采用链接法解决冲突, &lt;code&gt;n&lt;/code&gt; 是元素总数和数组中可用槽之和。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;entry_size&lt;/code&gt; 是 &lt;code&gt;jave.util.HashMap.Entry&lt;/code&gt; 对象在内存中的大小。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;java.util.HashMap.Entry&lt;/code&gt;的定义如下:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;static class Entry&amp;lt;K,V&amp;gt; implements Map.Entry&amp;lt;K,V&amp;gt; {
    final K key;
    V value;          
    Entry&amp;lt;K,V&amp;gt; next;
    int hash;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在不同平台，内存占用为:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; 32bit JVM:  8 + 4 * 4 = 24 bytes&lt;/li&gt;
&lt;li&gt; 64bit JVM &lt;code&gt;-UseCompressedOops&lt;/code&gt;: 16 + 8 * 4 = 48 bytes.&lt;/li&gt;
&lt;li&gt; 64bit JVM &lt;code&gt;+UseCompressedOops&lt;/code&gt;: 12 + 4 * 4 + 4(padding) = 32 bytes.&lt;/li&gt;
&lt;li&gt; Davlik:    12 + 4 * 4 + 4(padding) = 32 bytes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;对于&lt;code&gt;HashSet&lt;/code&gt;来说，&lt;code&gt;V value&lt;/code&gt; 这个字段是没用的，如果我们采用以下的&lt;code&gt;SimpleHashSetEntry&lt;/code&gt;来实现 &lt;code&gt;SimpleHashSet&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;private static class SimpleHashSetEntry&amp;lt;T&amp;gt; {

    private int mHash;
    private T mKey;
    private SimpleHashSetEntry&amp;lt;T&amp;gt; mNext;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;占用的内存大小为:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; 32bit JVM:  8 + 4 * 3 + (padding) = 24 bytes&lt;/li&gt;
&lt;li&gt; 64bit JVM &lt;code&gt;-UseCompressedOops&lt;/code&gt;: 16 + 8 * 3 = 40 bytes. (8 bytes saved, 16.66%)&lt;/li&gt;
&lt;li&gt; 64bit JVM &lt;code&gt;+UseCompressedOops&lt;/code&gt;: 12 + 4 * 3 = 24 bytes. (8 bytes saved, 25%)&lt;/li&gt;
&lt;li&gt; Davlik:    12 + 4 * 3 = 24 bytes (8 bytes saved, 25%).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;除了了32位的JVM上，都能节省可观的内存。&lt;/p&gt;

&lt;p&gt;项目地址: &lt;a href=&quot;https://github.com/liaohuqiu/SimpleHashSet&quot;&gt;https://github.com/liaohuqiu/SimpleHashSet&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>gitlab 使用现有 nginx 服务器</title>
      <link>http://liaohuqiu.net/cn/posts/non-bundled-web-server-for-gitlab/</link>
      <pubDate>Thu, 08 Jan 2015 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/non-bundled-web-server-for-gitlab</guid>
      <description>&lt;p&gt;gitlab 安装自带 nginx，如果想利用原有 nginx，可按如下操作：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;8.0 版本 socket 文件位置有变动，感谢评论区的同学。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;nginx 增加虚拟主机配置&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# gitlab socket 文件地址
upstream gitlab {
  # 7.x 版本在此位置
  # server unix:/var/opt/gitlab/gitlab-rails/tmp/sockets/gitlab.socket;
  # 8.0 位置
  server unix://var/opt/gitlab/gitlab-rails/sockets/gitlab.socket;
}

server {
  listen *:80;

  server_name gitlab.liaohuqiu.com;   # 请修改为你的域名

  server_tokens off;     # don&amp;#39;t show the version number, a security best practice
  root /opt/gitlab/embedded/service/gitlab-rails/public;

  # Increase this if you want to upload large attachments
  # Or if you want to accept large git objects over http
  client_max_body_size 250m;

  # individual nginx logs for this gitlab vhost
  access_log  /var/log/gitlab/nginx/gitlab_access.log;
  error_log   /var/log/gitlab/nginx/gitlab_error.log;

  location / {
    # serve static files from defined root folder;.
    # @gitlab is a named location for the upstream fallback, see below
    try_files $uri $uri/index.html $uri.html @gitlab;
  }

  # if a file, which is not found in the root folder is requested,
  # then the proxy pass the request to the upsteam (gitlab unicorn)
  location @gitlab {
    # If you use https make sure you disable gzip compression 
    # to be safe against BREACH attack

    proxy_read_timeout 300; # Some requests take more than 30 seconds.
    proxy_connect_timeout 300; # Some requests take more than 30 seconds.
    proxy_redirect     off;

    proxy_set_header   X-Forwarded-Proto $scheme;
    proxy_set_header   Host              $http_host;
    proxy_set_header   X-Real-IP         $remote_addr;
    proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header   X-Frame-Options   SAMEORIGIN;

    proxy_pass http://gitlab;
  }

  # Enable gzip compression as per rails guide: http://guides.rubyonrails.org/asset_pipeline.html#gzip-compression
  # WARNING: If you are using relative urls do remove the block below
  # See config/application.rb under &amp;quot;Relative url support&amp;quot; for the list of
  # other files that need to be changed for relative url support
  location ~ ^/(assets)/  {
    root /opt/gitlab/embedded/service/gitlab-rails/public;
    # gzip_static on; # to serve pre-gzipped version
    expires max;
    add_header Cache-Control public;
  }

  error_page 502 /502.html;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;禁用自带 nginx&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;vim /etc/gitlab/gitlab.rb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;加入&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;nginx[&amp;#39;enable&amp;#39;] = false
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;重启 nginx, 重启gitlab&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sudo /usr/local/nginx/sbin/nginx -s reload
sudo gitlab-ctl reconfigure
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;权限配置&lt;/p&gt;

&lt;p&gt;访问会报502。原本是 nginx 用户无法访问gitlab用户的 socket 文件，用户权限配置，因人而异。粗暴地:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sudo chmod -R o+x /var/opt/gitlab/gitlab-rails
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>CentOS的gradle构建环境</title>
      <link>http://liaohuqiu.net/cn/posts/gradle-in-centos/</link>
      <pubDate>Wed, 07 Jan 2015 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/gradle-in-centos</guid>
      <description>&lt;p&gt;在CentOS下，用gradle进行编译打包，配合定时任务或者push webhook可以实现定时自动打包或者push后自动打包。&lt;/p&gt;

&lt;h3&gt;准备 JDK&lt;/h3&gt;

&lt;p&gt;这个比较简单，安装JRE和JDK。直接安装devel版本的openjdk即可。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo yum install -y java-1.7.0-openjdk-devel.x86_64
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;yum 安装完成之后，&lt;code&gt;JAVA_HOME&lt;/code&gt; 环境变量可不设置。
如果一定要设置的话，先&lt;a href=&quot;http://serverfault.com/questions/50883/what-is-the-value-of-java-home-for-centos&quot;&gt;查看安装路径&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;update-alternatives --display java

...
 slave unpack200.1.gz: /usr/share/man/man1/unpack200-java-1.7.0-openjdk.1.gz
 Current &amp;#39;best&amp;#39; version is /usr/lib/jvm/jre-1.7.0-openjdk.x86_64/bin/java.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;编辑 &lt;code&gt;~/.bash_prifile&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;vim ~/.bash_prifile
export JAVA_HOME=&amp;#39;/usr/lib/jvm/jre-1.7.0-openjdk.x86_64/&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;至此，JDK准备完毕。&lt;/p&gt;

&lt;h3&gt;准备Android-SDK&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;下载&lt;code&gt;SDK Tools Only&lt;/code&gt;: &lt;a href=&quot;http://developer.android.com/sdk/index.html&quot;&gt;http://developer.android.com/sdk/index.html&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;解压后，设置&lt;code&gt;ANDROID_HOME&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[huqiu@127 android-sdk-linux]$ ls -l
total 32
drwxrwxr-x  2 huqiu huqiu 4096 Dec 18 00:10 add-ons
drwxrwxr-x 10 huqiu huqiu 4096 Jan  6 14:07 build-tools
drwxrwxr-x 24 huqiu huqiu 4096 Jan  6 13:43 docs
drwxrwxr-x 18 huqiu huqiu 4096 Jan  6 13:45 platforms
drwxrwxr-x  4 huqiu huqiu 4096 Jan  6 14:07 platform-tools
-rw-rw-r--  1 huqiu huqiu 1158 Jan  6 13:42 SDK Readme.txt
drwxrwxr-x  2 huqiu huqiu 4096 Jan  6 14:07 temp
drwxrwxr-x  8 huqiu huqiu 4096 Jan  6 14:07 tools
[huqiu@127 android-sdk-linux]$ pwd
/data1/android-sdk-linux
[huqiu@127 android-sdk-linux]$ cat ~/.bash_profile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;更新 &lt;code&gt;~/.bash_prifile&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;export ANDROID_HOME=&amp;#39;/data1/android-sdk-linux&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装所需的API level的SDK和Build Tools，全部安装耗时时间很长，所占空间也很大。参考: &lt;a href=&quot;http://stackoverflow.com/questions/17963508/how-to-install-android-sdk-build-tools-on-the-command-line&quot;&gt;2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;查看所有安装&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;android list sdk --all

Packages available for installation or update: 124
   1- Android SDK Tools, revision 24.0.2
   2- Android SDK Platform-tools, revision 21
   3- Android SDK Build-tools, revision 21.1.2
   4- Android SDK Build-tools, revision 21.1.1
   5- Android SDK Build-tools, revision 21.1
   6- Android SDK Build-tools, revision 21.0.2
   7- Android SDK Build-tools, revision 21.0.1
   8- Android SDK Build-tools, revision 21
   9- Android SDK Build-tools, revision 20
  10- Android SDK Build-tools, revision 19.1
  11- Android SDK Build-tools, revision 19.0.3
  12- Android SDK Build-tools, revision 19.0.2
  13- Android SDK Build-tools, revision 19.0.1
  14- Android SDK Build-tools, revision 19
  15- Android SDK Build-tools, revision 18.1.1
  16- Android SDK Build-tools, revision 18.1
  17- Android SDK Build-tools, revision 18.0.1
  18- Android SDK Build-tools, revision 17
  19- Documentation for Android SDK, API 21, revision 1
  20- SDK Platform Android 5.0.1, API 21, revision 2
  21- SDK Platform Android 4.4W.2, API 20, revision 2
  22- SDK Platform Android 4.4.2, API 19, revision 4
  ....
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;安装需要安装的包, 假设我需要的是API Level 19的SDK，用21.1.1的Build Tools 进行编译:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;android update sdk -u -a -t 4,22
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装各种依赖:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sudo yum install -y compat-libstdc++-296.i686
sudo yum install -y compat-libstdc++-33.i686
sudo yum install -y zlib.i686
sudo yum install -y libstdc++.so.6
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;安装完成&lt;/h3&gt;

&lt;p&gt;至此已经完成安装了。&lt;/p&gt;

&lt;p&gt;建议项目内置gradle。安装完成之后，进行build:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;./gradlew build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>我的2014</title>
      <link>http://liaohuqiu.net/cn/posts/my-2014/</link>
      <pubDate>Wed, 31 Dec 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/my-2014</guid>
      <description>&lt;p&gt;2014最后一天，和团队同学在11月畅想未来的小店中小聚小饮后，和东极狂奔着，居然还在通惠河畔赶上了班车。到家后，敲下这篇文字。&lt;/p&gt;

&lt;p&gt;呵，飞扬的青春。&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;致ATA，致山大&lt;/h3&gt;

&lt;p&gt;在ATA这个平台，认识了非常多优秀的同学，最初也是看到ATA征文的消息，才起了写这样一篇的念头。离开ATA有段时间了，写完后，也许是类似过年回家 &lt;code&gt;“近乡情更怯”&lt;/code&gt;的情愫吧，挂在自己的博客上，却不敢再发到ATA了。&lt;/p&gt;

&lt;p&gt;昨天ATA志愿者群里的同学们说山大找不到人了，阿里味一看，才知道已经离开江湖了。半夜收到的他告别邮件。顿感岁月如风啊，人生聚散如萍。&lt;/p&gt;

&lt;p&gt;因身在北京，ATA志愿者同学的聚餐一次都没有参加，乐观地在群里调侃着，以为将来机会还有很多。&lt;/p&gt;

&lt;p&gt;和山大有过两面之缘，和阿瑟、幽零有过一面之缘，恬玉欠我好多张咖啡券没兑现，就告别ATA了。而七念之类的前辈更是连面都没见过。想江湖之远，感聚散无常。&lt;/p&gt;

&lt;p&gt;但实际，ATA现在强力的“正规军”支持下蓬勃发展，朋友们在各自的航程上直挂云帆！&lt;/p&gt;

&lt;p&gt;是的，朋友们，也许不在江湖了，但都还好，也都还在。身是一个江湖，心是另一个更大的江湖。&lt;/p&gt;

&lt;p&gt;山大信中提到，一切都是最美好的相遇。&lt;/p&gt;

&lt;p&gt;午后窗外阳光明媚，我仿佛闻到了春天青草的味道，2015开始了。&lt;/p&gt;

&lt;p style=&#39;text-align:right&#39;&gt;2015-01-09&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;我的2014&lt;/h3&gt;

&lt;p&gt;时光流转，马上2014就结束了。去年和国征他们约定的2014的目标是加入php扩展的开发小组，&lt;a href=&quot;http://pecl.php.net/package/binpack&quot;&gt;业余敲敲打打的一个项目，今年7月份发布到了pecl&lt;/a&gt;, 这个目标也算是达成了。&lt;/p&gt;

&lt;h4&gt;ATA&lt;/h4&gt;

&lt;p&gt;今年3月份，公司ATA招募社区志愿者，有幸加入。在那几个月的日子里，最大的收获，就是认识了非常非常多优秀的同学。和这些同学令人难忘的协作，是我此生不可多得的美好回忆。&lt;/p&gt;

&lt;p&gt;在ATA期间，参与了1.0到2.0的变迁，也努力让ATA跑得很快很好。最后也圆满把接力棒交给了更为优秀的专职的同学，相信ATA将来会更好。&lt;/p&gt;

&lt;h4&gt;驾照&lt;/h4&gt;

&lt;p&gt;还在上学的时候，时间一大把。参加工作之后的第一份工作，工作强度较大，一直没时间。今年夏天，火热的夏天。公司行政同学发了一个错误的优惠过时团报信息。我们自己联系了东方时尚，凑足了几十个人，拿到了团报的价格。和文科空之一起报的名，驾校中还偶遇了国征，真是人生何处不相逢啊！&lt;/p&gt;

&lt;p&gt;来回驾校的那两个月，挺苦的。周末得4点多就得起，7点到驾校；下午1点结束，到家2点多将近3点。在路上看了一泉送的那本《编程之美-微软面试心得》，发现这书写得真差。连续两个月的早起，让我养成了早睡早起的习惯，现在12点左右休息，6点多就起来了。&lt;/p&gt;

&lt;p&gt;学科目一未遂，回来时天色已晚，四人在外面吃个牛肉面。那天晚上，大兴的夜空，混沌，却挺让我怀念。&lt;/p&gt;

&lt;!---
#### 求婚

一直没有合适的机会，这次的机会，一定很合适！[9月19日，公司IPO当晚，北京通惠的晚会上，终于把这事情办了](http://weibo.com/1503535883/BnLNS7Vb1)。感谢一泉不远万里帮我带戒指回来。晚会上幸得文科帮助，帮我稳住烦躁要回家的她。也幸得安国的帮助，让我有上台的机会。

感谢[ATA的祝福](http://www.atatech.org/ask/22437)。

找一个她，对她好，是一件幸福的事情。`我愿如星君如月，夜夜流光相皎洁`。

--&gt;

&lt;h4&gt;中间件编程&lt;/h4&gt;

&lt;p&gt;公司今年中秋前后的中间件编程比赛。在那一个月的业余时间中，甚至包括9月份团队去大连年度旅游，中秋去女朋友家，一刻都没停止编码。&lt;/p&gt;

&lt;p&gt;近乎疯狂的投入，女朋友父母对我参与的事情的支持和理解，让我深感幸运。&lt;/p&gt;

&lt;p&gt;在那段时间，c 和 c++网络编程又狠狠操练了一把。无奈“质有高低，境界不同”，终究没能敌过。&lt;/p&gt;

&lt;p&gt;虽然到最后，是以失败的结果告终。但从中的获益着实不浅。&lt;/p&gt;

&lt;p&gt;工匠精神在那些优秀的同学上得到了淋漓尽致的体现，他们对技术执着近乎狂热的追求，追求极致，不断超越，不由得我不深深地佩服。&lt;/p&gt;

&lt;p&gt;在中秋的夜晚，在女朋友的家里，我点着台灯，夜里2点多了，旺旺群中，同学们还在旺旺群中讨论最新的突破和改进的想法。比我们聪明很多的人，他们同时比我们努力很多倍。&lt;/p&gt;

&lt;p&gt;从来没有成功是轻轻松松。&lt;/p&gt;

&lt;h4&gt;开源&lt;/h4&gt;

&lt;p&gt;今年大部分业余时间都贡献给开源项目了，在过去一年中：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/users/2446397/srain&quot;&gt;我在stackoverflow上寻找问题的答案和解答别人的疑惑&lt;/a&gt;。stackoverflow 是一个伟大的社区网站。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;发布了一个&lt;a href=&quot;https://rubygems.org/gems/jekyll-multiple-languages&quot;&gt;Ruby Jekyll 的多语言插件&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;发布了一个&lt;a href=&quot;http://pecl.php.net/package/binpack&quot;&gt;php的编解码扩展&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;发布了若干个python的package: &lt;a href=&quot;https://pypi.python.org/pypi/bp/&quot;&gt;bp&lt;/a&gt;, &lt;a href=&quot;https://pypi.python.org/pypi/cubi/&quot;&gt;cubi&lt;/a&gt;, &lt;a href=&quot;https://pypi.python.org/pypi/keep-running&quot;&gt;cmd-server&lt;/a&gt;, &lt;a href=&quot;https://pypi.python.org/pypi/keep-running/&quot;&gt;keep-running&lt;/a&gt;.
其中基于cubi实现的算分中间件服务，现在为ATA提供了高速的整站用户活跃积分计算服务。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://search.maven.org/#search%7Cga%7C1%7Cin.srain&quot;&gt;发布了若干个java和android的类库&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;实际，从13年7月在stackoverflow上第一次得分到现在，时刻都在体会着开源协作带来的美妙。&lt;/p&gt;

&lt;p&gt;这让你可以和更多优秀的人一起交流，向他们学习，提高自己；贡献自己的研究成果，为别人带去喜悦。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/liaohuqiu&quot;&gt;前几天github上有一个项目star过千了&lt;/a&gt;, &lt;a href=&quot;https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh&quot;&gt;android-Ultra-Pull-to-Refresh&lt;/a&gt;这个项目也曾经上过github的weekly trending。我还有很多好东西，好想法想要分享。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;四月离家之后，诸葛望生了一窝小狗。从妈妈微信中发来的照片看到，小狗是混血的德牧，已经非常高大威猛了。&lt;/p&gt;

&lt;p&gt;时间很快，父母们渐渐年老。在将来的日子，要花更多的时间和他们在一起。&lt;/p&gt;

&lt;p&gt;在2011年的末尾，我写到：“2011年就这样过去了，我很想念他”。这几年，心中渐渐无畏，渐渐温和，担起属于我的担子，扮演好属于我的角色。&lt;/p&gt;

&lt;p&gt;2014年就这样过去了，不念过往，不畏将来。&lt;/p&gt;

&lt;p style=&#39;text-align:right&#39;&gt;2014-12-31&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Android object size in Dalvik</title>
      <link>http://liaohuqiu.net/posts/android-object-size-dalvik/</link>
      <pubDate>Mon, 29 Dec 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/posts/android-object-size-dalvik</guid>
      <description>&lt;h3&gt;Size of data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Size of reference &lt;/p&gt;

&lt;p&gt;In HotSpot, an object reference is 4 bytes in 32 bit JVM, 8 bytes in 64 bit JVM with &lt;code&gt;-UseCompressedOops&lt;/code&gt; and 4 bytes with &lt;code&gt;+UseCompressedOops&lt;/code&gt;. In Dalvik, reference is always 4 bytes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Size of primitive data type&lt;/p&gt;

&lt;p&gt;The size of the primitive data type is fixd as follows:&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Data type&lt;/th&gt;
&lt;th&gt;32 bit JVM&lt;/th&gt;
&lt;th&gt;64 bit +UseCompressedOops&lt;/th&gt;
&lt;th&gt;64bit -UseCompressedOops&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Object reference&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;byte&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;char&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;short&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;float&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;long&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;double&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;But the size of the primitive type data is very diffrent in Dalvik. &lt;/p&gt;

&lt;p&gt;The size of a primitive data type is not the same when it is a field of object or a variable from when it is an element in Array.&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Data type&lt;/th&gt;
&lt;th&gt;Size as field / variable&lt;/th&gt;
&lt;th&gt;Size in Array&lt;/th&gt;
&lt;th&gt;32 bit JVM&lt;/th&gt;
&lt;th&gt;64 bit +&lt;/th&gt;
&lt;th&gt;64bit -&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Object reference&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;byte&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;char&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;short&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;float&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;long&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;double&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Size of object&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Alignment&lt;/p&gt;

&lt;p&gt;In Dalvik, &lt;strong&gt;the boundary alignment of an object is also 8 bytes&lt;/strong&gt;. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Overhead of Object&lt;/p&gt;

&lt;p&gt;In HotSpot, as we know, the overhead of object is 8 bytes in 32 bit JVM, and 16 bytes in 64 bit JVM without &lt;code&gt;UseCompressedOops&lt;/code&gt; and 12 bytes with &lt;code&gt;+UseCompressedOops&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;In Dalvik, this is diffrent. The memory of an object looks like:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;+---------------------+----------------------+----------+
|overheade of Object  | overhead of dlmalloc |   data   |
+---------------------+----------------------+----------+
|   8 bytes           |  4 or 8 bytes        |          |
+---------------------+----------------------+----------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There is another overhead for dlmalloc, which will take 4 or 8 bytes.&lt;/p&gt;

&lt;p&gt;So an empty object will take 16bytes, 12 bytes for overhead, 4 bytes for padding.&lt;/p&gt;

&lt;p&gt;Here are some examples:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;EmptyClass&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Total size: 8 (Object overhead) + 4 (dlmalloc)  = 12 bytes. For 8 bytes alignment, the final total size is 16 bytes.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 4 bytes&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The total size is: 8 + 4 + 4 (int) = 16 bytes.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HashMapEntry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;K&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;                &lt;span class=&quot;c1&quot;&gt;// 4 bytes&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;             &lt;span class=&quot;c1&quot;&gt;// 4 bytes&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;V&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;                    &lt;span class=&quot;c1&quot;&gt;// 4 bytes&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;HashMapEntry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// 4 bytes&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The total size: 8 + 4 + 4 * 4 = 28 bytes. Total aligned is 32 bytes.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Size of Array&lt;/h3&gt;

&lt;p&gt;The memory layout of Array looks like:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;+---------------------+----------------------+----------+---------+------+
|overheade of Object  | overhead of dlmalloc |   size   | padding | data |
+---------------------+----------------------+----------+---------+------+
|   8 bytes           |  4 or 8 bytes        |  4 bytes | 4 bytes |      |
+---------------------+----------------------+----------+---------+------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The alignment is also 8 bytes.&lt;/p&gt;

&lt;p&gt;So &lt;code&gt;byte[0]&lt;/code&gt; will take: 8 + 4 + 4 + 4 = 20 bytes. The final size after alignment is 24 bytes.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;byte[0]&lt;/code&gt; ~ &lt;code&gt;byte[4]&lt;/code&gt; are all 24 bytes.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;char[0]&lt;/code&gt; will also take 24 bytes. And from &lt;code&gt;char[0]&lt;/code&gt; to &lt;code&gt;char[2]&lt;/code&gt;, they are all 24 bytes.&lt;/p&gt;

&lt;h4&gt;Size of &lt;code&gt;String&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;String is defined as follows:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 4 bytes&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;offset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// 4 bytes&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// 4 bytes&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hashCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;       &lt;span class=&quot;c1&quot;&gt;// 4 bytes&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Total size: 8 + 4 + 4 * 4 = 28 bytes. Total aligned is 32 bytes, which excludes the retained memory of char array(at least 24 bytes).&lt;/p&gt;

&lt;p&gt;So,  even an empty String will still take at least 32 bytes of shadow heap and 24 bytes of retained heap.&lt;/p&gt;

&lt;h4&gt;References&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/14738786/how-are-java-objects-laid-out-in-memory-on-android&quot;&gt;http://stackoverflow.com/questions/14738786/how-are-java-objects-laid-out-in-memory-on-android&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/9009544/android-dalvik-get-the-size-of-an-object&quot;&gt;http://stackoverflow.com/questions/9009544/android-dalvik-get-the-size-of-an-object&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/romainguy/android-memories&quot;&gt;https://speakerdeck.com/romainguy/android-memories&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.slideshare.net/SOURCEConference/forensic-memory-analysis-of-androids-dalvik-virtual-machine&quot;&gt;http://www.slideshare.net/SOURCEConference/forensic-memory-analysis-of-androids-dalvik-virtual-machine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/10824677/is-dalvik-even-more-memory-hungry-than-hotspot-in-terms-of-object-sizes/&quot;&gt;http://stackoverflow.com/questions/10824677/is-dalvik-even-more-memory-hungry-than-hotspot-in-terms-of-object-sizes/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>JAVA 对象大小</title>
      <link>http://liaohuqiu.net/cn/posts/caculate-object-size-in-java/</link>
      <pubDate>Sat, 27 Dec 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/caculate-object-size-in-java</guid>
      <description>&lt;h4&gt;对象内存大小度量&lt;/h4&gt;

&lt;p&gt;在做内存优化时，需要知道每个对象占用的内存的大小，&lt;/p&gt;

&lt;p&gt;一个实例化的对象在内存中需要存储的信息包括：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;对象的头部（对象的GC信息，hash值，类定义引用等）&lt;/li&gt;
&lt;li&gt;对象的成员变量: 包括基本数据类型和引用。 如成员变量是一个引用, 引用了其他对象，被引用的对象内存另外计算。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;如下一个简单的类的定义:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyClass&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;实例化一个对象:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;MyClass&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myClass&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;MyClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;对象大小分为:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;自身的大小（Shadow heap size）&lt;/li&gt;
&lt;li&gt;所引用的对象的大小（Retained heap size）。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;myClass&lt;/code&gt; 实例创建出来之后，在内存中所占的大小就是 &lt;code&gt;myClass&lt;/code&gt; 自身大小（Shadow heap size）。包括类的头部大小以及一个int的大小和一个引用的大小。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;myClass&lt;/code&gt; 中&lt;code&gt;object&lt;/code&gt; 成员变量是一个对象引用，这个被引用的对象也占一定大小。&lt;code&gt;myClass&lt;/code&gt; 实例所维护的引用的对象所占的大小，称为 &lt;code&gt;myClass&lt;/code&gt; 实例的 Retained heap size。&lt;/p&gt;

&lt;p&gt;本文讨论的是对象自身的大小，即 Shadow heap size。Retained heap size 递归计算即可得。&lt;/p&gt;

&lt;h4&gt;度量工具&lt;/h4&gt;

&lt;p&gt;对象大小的计算可用&lt;code&gt;java.lang.instrument.Instrumentation&lt;/code&gt; 或者 dump 内存之后用 memory analyzer 分析。 这是一份示例代码&lt;a href=&quot;https://github.com/liaohuqiu/java-object-size&quot;&gt;java-object-size&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;基本数据类型大小&lt;/h4&gt;

&lt;p&gt;基本数据类型大小如下: &lt;a href=&quot;http://en.wikibooks.org/wiki/Java_Programming/Primitive_Types&quot;&gt;From WIKI&lt;/a&gt;&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;type&lt;/th&gt;
&lt;th&gt;size(bits)&lt;/th&gt;
&lt;th&gt;bytes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;byte&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;char&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;short&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;long&lt;/td&gt;
&lt;td&gt;64&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;float&lt;/td&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;double&lt;/td&gt;
&lt;td&gt;64&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;h4&gt;引用的大小&lt;/h4&gt;

&lt;p&gt;在 32 位的 JVM 上，一个对象引用占用 4 个字节；在 64 位上，占用 8 个字节。通过 &lt;code&gt;java -d64 -version&lt;/code&gt; 可确定是否是 64 位的 JVM。&lt;/p&gt;

&lt;p&gt;使用 8 个字节是为了能够管理大于 4G 的内存，如果你的程序不需要访问大于 4G 的内存，&lt;/p&gt;

&lt;p&gt;可通过 &lt;code&gt;-XX:+UseCompressedOops&lt;/code&gt; 选项，开启指针压缩。从 &lt;code&gt;Java 1.6.0_23&lt;/code&gt; 起，这个选项默认是开的。可通过 &lt;code&gt;jinfo -flag UseCompressedOops &amp;lt;pid&amp;gt;&lt;/code&gt; 查看。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;localhost:~ srain$ jinfo -flag UseCompressedOops 13133
-XX:+UseCompressedOops
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;对象头部的大小&lt;/h4&gt;

&lt;p&gt;对象头，结构如下&lt;a href=&quot;http://mail.openjdk.java.net/pipermail/hotspot-runtime-dev/2008-May/000147.html&quot;&gt;(来源)&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;+------------------+------------------+------------------ +---------------+
|    mark word     |   klass pointer  |  array size (opt) |    padding    |
+------------------+------------------+-------------------+---------------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;每个对象都有一个 mark work 头部，以及一个引用（klass pointer），指向类的信息。在 32 位 JVM 上，mark word 4 个字节，整个头部有 8 字节大小。&lt;/p&gt;

&lt;p&gt;在未开启 &lt;code&gt;UseCompressedOops&lt;/code&gt; 的 64 位 JVM 上，对象头有 16 字节大小，即 8 字节的 mark word 和 8 字节的引用。&lt;/p&gt;

&lt;p&gt;在开启 &lt;code&gt;UseCompressedOops&lt;/code&gt; 的 64 位机器上，引用成了 4 字节，一共 12 字节。 按照 8 位对齐，实际占用 16 字节。&lt;/p&gt;

&lt;h4&gt;对象的内存布局&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;每个对象的内存占用按 8 字节对齐&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;空对象和类实例成员变量&lt;/p&gt;

&lt;p&gt;空对象，指的非 inner-class，没有实例属性的类。&lt;code&gt;Object&lt;/code&gt; 类或者直接继承 &lt;code&gt;Object&lt;/code&gt; 没有添加任何实例成员的类。&lt;/p&gt;

&lt;p&gt;空对象的不包含任何成员变量，其大小即对象头大小:  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;在 32 位 JVM 上，占用 8 字节；&lt;/li&gt;
&lt;li&gt;在未开启 &lt;code&gt;UseCompressedOops&lt;/code&gt; 的 64 位 JVM 上，16 字节。（感谢评论区的 &lt;a href=&quot;https://disqus.com/by/singlecool/&quot;&gt;@SingleCool&lt;/a&gt; 纠正）&lt;/li&gt;
&lt;li&gt;在开启 &lt;code&gt;UseCompressedOops&lt;/code&gt; 的 64 位 JVM 上，12 + 4 = 16；&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对象实例成员重排序&lt;/p&gt;

&lt;p&gt;实例成员变量紧随对象头。每个成员变量都尽量使本身的大小在内存中尽量对齐。&lt;/p&gt;

&lt;p&gt;比如 int 按 4 位对齐，long 按 8 位对齐。为了内存紧凑，实例成员在内存中的排列和声明的顺序可能不一致，实际会按以下顺序排序:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;doubles and longs&lt;/li&gt;
&lt;li&gt;ints and floats&lt;/li&gt;
&lt;li&gt;shorts and chars&lt;/li&gt;
&lt;li&gt;booleans and bytes&lt;/li&gt;
&lt;li&gt;references&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这样做可尽量节省空间。&lt;/p&gt;

&lt;p&gt;如:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyClass&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;        
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;未重排之前:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;     32 bit                    64bit +UseCompressedOops

[HEADER:  8 bytes]  8           [HEADER: 12 bytes] 12
[a:       1 byte ]  9           [a:       1 byte ] 13
[padding: 3 bytes] 12           [padding: 3 bytes] 16
[c:       4 bytes] 16           [c:       4 bytes] 20
[d:       1 byte ] 17           [d:       1 byte ] 21
[padding: 7 bytes] 24           [padding: 3 bytes] 24
[e:       8 bytes] 32           [e:       8 bytes] 32
[f:       4 bytes] 36           [f:       4 bytes] 36
[padding: 4 bytes] 40           [padding: 4 bytes] 40
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;重新排列之后：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;    32 bit                      64bit +UseCompressedOops

[HEADER:  8 bytes]  8           [HEADER: 12 bytes] 12
[e:       8 bytes] 16           [e:       8 bytes] 20
[c:       4 bytes] 20           [c:       4 bytes] 24
[a:       1 byte ] 21           [a:       1 byte ] 25
[d:       1 byte ] 22           [d:       1 byte ] 26
[padding: 2 bytes] 24           [padding: 2 bytes] 28
[f:       4 bytes] 28           [f:       4 bytes] 32
[padding: 4 bytes] 32
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;父类和子类的实例成员&lt;/p&gt;

&lt;p&gt;父类和子类的成员变量分开存放，先是父类的实例成员。父类实例成员变量结束之后，按4位对齐，随后接着子类实例成员变量。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;内存结构如下:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;    32 bit                  64bit +UseCompressedOops

[HEADER:  8 bytes]  8       [HEADER: 12 bytes] 12
[a:       1 byte ]  9       [a:       1 byte ] 13
[padding: 3 bytes] 12       [padding: 3 bytes] 16
[b:       1 byte ] 13       [b:       1 byte ] 17
[padding: 3 bytes] 16       [padding: 7 bytes] 24
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果子类首个成员变量是 long 或者 double 等 8 字节数据类型，而父类结束时没有 8 位对齐。会把子类的小于 8 字节的实例成员先排列，直到能 8 字节对齐。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;class A {
    byte a;
}

class B extends A{
    long b;
    short c;  
    byte d;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;内存结构如下:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;    32 bit                  64bit +UseCompressedOops

[HEADER:  8 bytes]  8       [HEADER:  8 bytes] 12
[a:       1 byte ]  9       [a:       1 byte ] 13
[padding: 3 bytes] 12       [padding: 3 bytes] 16
[c:       2 bytes] 14       [b:       8 bytes] 24
[d:       1 byte ] 15       [c:       4 byte ] 28
[padding: 1 byte ] 16       [d:       1 byte ] 29
[b:       8 bytes] 24       [padding: 3 bytes] 32
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上面的示例中，在 32 位的 JVM 上，B 的 2 个实例成员 c, d 被提前了。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;非静态的内部类，有一个隐藏的对外部类的引用。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;数组的内存占用大小&lt;/h4&gt;

&lt;p&gt;数组也是对象，故有对象的头部，另外数组还有一个记录数组长度的 int 类型，随后是每一个数组的元素：基本数据类型或者引用。8 字节对齐。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;32 位的机器上&lt;/p&gt;

&lt;p&gt;byte[0] 8 字节的对象头部，4 字节的 int 长度, 12 字节，对齐后是 16 字节，实际 byte[0] ~ byte[4] 都是 16 字节。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;64 位+UseCompressedOops&lt;/p&gt;

&lt;p&gt;byte[0] 是 16 字节大小，byte[1] ~ byte[8] 24 字节大小。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;64 位-UseCompressedOops&lt;/p&gt;

&lt;p&gt;byte[0], 16 字节头部，4 字节的 int 长度信息，20 字节，对齐后 24 字节。byte[0] ~ byte[4] 都是 24 字节。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;字符串大小&lt;/h4&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;64 bit -UseCompressedOops&lt;/th&gt;
&lt;th&gt;64 bit +UseCompressedOops&lt;/th&gt;
&lt;th&gt;32 bit&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;HEADER&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;value&lt;/td&gt;
&lt;td&gt;char[]&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;offset&lt;/td&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;count&lt;/td&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hash&lt;/td&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PADDING&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TOTAL&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;40&lt;/td&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;td&gt;24&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;不计算 value 引用的 Retained heap size, 字符串本身就需要 24 ~ 40 字节大小。&lt;/p&gt;

&lt;h4&gt;参考资料&lt;/h4&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://www.codeinstructions.com/2008/12/java-objects-memory-structure.html&quot;&gt;http://www.codeinstructions.com/2008/12/java-objects-memory-structure.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://btoddb-java-sizing.blogspot.com/2012/01/object-sizes.html&quot;&gt;http://btoddb-java-sizing.blogspot.com/2012/01/object-sizes.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/2120437/object-vs-byte0-as-lock&quot;&gt;http://stackoverflow.com/questions/2120437/object-vs-byte0-as-lock&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>一种10s之内的方案</title>
      <link>http://liaohuqiu.net/cn/posts/1g-in-10s/</link>
      <pubDate>Thu, 25 Dec 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/1g-in-10s</guid>
      <description>&lt;h3&gt;理论上&lt;/h3&gt;

&lt;p&gt;我们先来看看规则:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;1G文件，双千兆网卡，服务器端单进程。&lt;/li&gt;
&lt;li&gt;每次处理一行。&lt;/li&gt;
&lt;li&gt;客户端需要等一个请求收到之后，才能发另外一个请求。&lt;/li&gt;
&lt;li&gt;服务器每次给出下一行。去掉1/3，逆序加行号。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;本文说明如何在不压缩的情况下，做到4秒以内。压缩的话，群里目前说有2.3s的了。&lt;/p&gt;

&lt;p&gt;理论上:&lt;/p&gt;

&lt;p&gt;1G的文件，10474514行。每行大概200个字符。服务器端去1/3，逆转后加行号，大概700多MB。单位是字节。&lt;/p&gt;

&lt;p&gt;双千兆网卡，网络传输2000Mb。单位是位。每秒传输速度是256MB，整个文件内容的传输是可以在4s内完成的。&lt;/p&gt;

&lt;h3&gt;DEMO&lt;/h3&gt;

&lt;p&gt;钻风给出的demo中，bloking-io，客户端多线程，服务器端每accept一个连接后，一个线程处理一个链接。
在客户端中:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;while (true)
{
    send();
    recv();
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;服务器端中:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;while (true)
{
    recv();
    getNextLine();
    send();
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;客户端100个线程的时候（20s ~ 30s):&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tsar -l -i 1 --traffic&lt;/code&gt; 结果如下:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Time              -------------traffic------------
Time               bytin  bytout   pktin  pktout
06/09/14-23:12:56   0.00    0.00    0.00    0.00
06/09/14-23:12:57  63.4M  155.3M  954.6K  954.6K
06/09/14-23:12:58   0.00    0.00    0.00    0.00
06/09/14-23:12:59  60.1M  147.3M  905.4K  905.4K
06/09/14-23:13:00   0.00    0.00    0.00    0.00
06/09/14-23:13:01  57.5M  140.8M  866.5K  866.4K
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;sar -n DEV 1&lt;/code&gt; 结果:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;11:20:46 PM     IFACE   rxpck/s   txpck/s    rxkB/s    txkB/s
11:20:47 PM        lo      0.00      0.00      0.00      0.00
11:20:47 PM      eth0 478215.05 478217.20  31756.46  77744.95
11:20:47 PM      eth1 484318.28 484318.28  32162.05  78724.16
11:20:47 PM     bond0 962533.33 962535.48  63918.51 156469.11
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;网卡的利用率大概在200Mb左右。
TCP的包头: 954.6 * 1000 * 2 * 64 / 1024 / 1024 = 116Mb&lt;/p&gt;

&lt;p&gt;每秒90w的tcp包, 网络带宽没全部用上。&lt;/p&gt;

&lt;p&gt;在demo中，客户端发一个简单字符，作为消息，客户端收到此字符之后，发回一行。&lt;/p&gt;

&lt;p&gt;在每个请求中，TCP包头占了很大比重，如果能合并消息，减少tcp包，每次发送的数据多一些。这样可以可以提高网络带宽的利用率。&lt;/p&gt;

&lt;h3&gt;合并消息&lt;/h3&gt;

&lt;p&gt;实际为了解决小包问题，tcp自带了&lt;code&gt;Nagle&lt;/code&gt;算法，默认开启，200ms超时，窗口大小和数据达到MSS发送数据。&lt;/p&gt;

&lt;p&gt;我们可以自己关闭这个选项，自己做实现。&lt;/p&gt;

&lt;p&gt;注意到题目中: &lt;code&gt;必须要等请求完成，才能发送新的请求&lt;/code&gt;，那么就需要&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;客户端，对于一个连接:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; 有独立线程负责写，要发送的消息存放于一个队列，满足要求后发送。&lt;/li&gt;
&lt;li&gt; 多个业务线程网队列写数据，然后等待结果返回。 &lt;/li&gt;
&lt;li&gt; 独立的读线程，读消息，然后通知结果访问。&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;服务器端，对于一个连接:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; 独立线程，读数据。&lt;/li&gt;
&lt;li&gt; 多个业务线程处理数据，往发送队列写数据。在无数据时，等待。&lt;/li&gt;
&lt;li&gt; 独立线程根据消息合并规则，合并消息，发送数据。&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;客户端可以建立多个连接到服务器，调整业务线程的数量，达到最好的网络带宽利用。&lt;/p&gt;

&lt;p&gt;这个方案，会有一些的线程切换和锁。这个是这个方案的难点。&lt;/p&gt;

&lt;p&gt;当然也可以用协程来实现，这个是另外的方案了。&lt;/p&gt;

&lt;p&gt;参考: &lt;a href=&quot;http://stackoverflow.com/questions/25701775/how-to-utilize-100-of-the-network-bandwidth-with-sockets&quot;&gt;如何把网卡跑满&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ultra-Ptr 在eclipse中编译的办法</title>
      <link>http://liaohuqiu.net/cn/posts/compile-ultra-ptr-in-eclipse/</link>
      <pubDate>Fri, 05 Dec 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/compile-ultra-ptr-in-eclipse</guid>
      <description>&lt;p&gt;&lt;a href=&quot;https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh&quot;&gt;android-Ultra-Pull-To-Refresh&lt;/a&gt;发布之后，收到许多反馈说在eclipse中编译不通过，缺少资源文件。&lt;/p&gt;

&lt;p&gt;项目包含两个子项目: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ptr-lib文件夹中的是类库&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ptr-demo 文件中的是demo&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在这两个项目中都有一个libs文件，这两个文件夹是eclipse中需要的依赖包和源码。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;ptr-lib&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;clog用于调试日志， 直接将libs/clog-{version}.jar 加入到项目中即可。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ptr-demo&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;clog用于调试日志， 直接将libs/clog-{version}.jar 加入到项目中即可。&lt;/li&gt;
&lt;li&gt;support-v4, 直接将 libs/support-v4-{version}.jar 加入到项目中即可，&lt;strong&gt;注意避免重复依赖，已经有了就不用再加了&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;cube-sdk 这是demo项目的基础框架依赖。这是一个带资源的类库。目前打包成了&lt;code&gt;apklib&lt;/code&gt;和&lt;code&gt;aar&lt;/code&gt;两种格式。
通过maven和gradle(Android Studio/Intellij IDEA)可以很好地使用这两个类库(maven 支持两种格式，gradle目前只支持&lt;code&gt;apklib&lt;/code&gt;)
但是很遗憾，eclipse不能使用这两种格式中的任何一种。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;解决方案&lt;/h3&gt;

&lt;p&gt;有两种方案:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;利用maven插件, 这样，就直接和maven一样了。如果你没有使用过maven，不建议用这种方式，可以尝试，但是中途你会遇到很多问题。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;这也是比较简单的方案: 直接将 cube-sdk 项目用eclipse打开，这是一个类库项目，然后在ptr-demo中引用这个项目。&lt;/p&gt;

&lt;p&gt;cube-sdk 项目的源码在这里 &lt;a href=&quot;https://github.com/etao-open-source/cube-sdk&quot;&gt;https://github.com/etao-open-source/cube-sdk&lt;/a&gt;, &lt;strong&gt;&lt;code&gt;core&lt;/code&gt;文件夹中的内容就是项目源码。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;需要 SDK 版本 &amp;gt;= 19&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;常见问题&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ClassNotFound&lt;/p&gt;

&lt;p&gt;清理资源，重启eclipse&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;getAllocationByteCount()&lt;/p&gt;

&lt;p&gt;需要版本SDK &amp;gt;= 19&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如有问题，请在这里留言。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>aar vs apklib</title>
      <link>http://liaohuqiu.net/posts/publish-to-maven-central/</link>
      <pubDate>Wed, 03 Dec 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/posts/publish-to-maven-central</guid>
      <description>&lt;p&gt;Using &lt;code&gt;android-maven-plugin&lt;/code&gt;, maven can use both &lt;code&gt;apklib&lt;/code&gt; and &lt;code&gt;aar&lt;/code&gt; format.&lt;/p&gt;

&lt;p&gt;But gradle only can use &lt;code&gt;aar&lt;/code&gt; foramt.&lt;/p&gt;

&lt;p&gt;Eclipse can use maven plugin to work with &lt;code&gt;apklib&lt;/code&gt; and &lt;code&gt;aar&lt;/code&gt;. But I can not work that out. I did that before.&lt;/p&gt;

&lt;p&gt;Using &lt;code&gt;android-maven-plugin&lt;/code&gt;, maven can generate apklib and aar format. But the files in &lt;code&gt;libs&lt;/code&gt; will be packed. I don&amp;#39;t know how to exclude that. I was not sure weather the &lt;code&gt;aar&lt;/code&gt; war right or not.&lt;/p&gt;

&lt;p&gt;Using gradle, it&amp;#39;s easy to generate &lt;code&gt;aar&lt;/code&gt; and apklib.&lt;/p&gt;

&lt;p&gt;So I use gradle to package library project into aar and apklib.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Binary tree traversal</title>
      <link>http://liaohuqiu.net/posts/binnary-tree-traversal-iteratively/</link>
      <pubDate>Sun, 02 Nov 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/posts/binnary-tree-traversal-iteratively</guid>
      <description>&lt;p&gt;Here is a full binnary tree:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;          1
        /    \
      /        \
     2          5
   /   \      /   \
  3     4    6     7
 / \   / \  / \   / \
N  N  N  N  N  N  N  N
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Pre-order Traversal&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;visit root first&lt;/li&gt;
&lt;li&gt;visit left child by pre-order traversal&lt;/li&gt;
&lt;li&gt;visit right child by pre-order traversal&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;1 -&amp;gt; 2 -&amp;gt; 3 -&amp;gt; 4 -&amp;gt; 5 -&amp;gt; 6 -&amp;gt; 7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In-order Traversal&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;visit left child in in-order&lt;/li&gt;
&lt;li&gt;visit root&lt;/li&gt;
&lt;li&gt;visit right child in in-order&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;3 -&amp;gt; 2 -&amp;gt; 4 -&amp;gt; 1 -&amp;gt; 6 -&amp;gt; 5 -&amp;gt; 7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Post-order Traversal&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;visit left child in post-order&lt;/li&gt;
&lt;li&gt;visit right child in post-order&lt;/li&gt;
&lt;li&gt;visit root&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;3 -&amp;gt; 4 -&amp;gt; 2 -&amp;gt; 6 -&amp;gt; 7 -&amp;gt; 5 -&amp;gt; 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Recursively&lt;/h3&gt;

&lt;p&gt;Traversal by recursion is very easy.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TreeNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;right&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Pre-order&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Solution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;preorderTraversal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;preorderTraversal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;preorderTraversal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In-order&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Solution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;inorderTraversal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inorderTraversal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inorderTraversal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Post-order&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Solution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;postorderTraversal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;postorderTraversal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;postorderTraversal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Iteratively&lt;/h3&gt;

&lt;p&gt;Traversing iteratively needs extra space instead of calling function recursively.&lt;/p&gt;

&lt;h4&gt;Pre-order Traversal&lt;/h4&gt;

&lt;p&gt;Pre-order is easy. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;push root to stack&lt;/li&gt;
&lt;li&gt;pop a node from stack&lt;/li&gt;
&lt;li&gt;mark it as visited(put its value into result list), push its right and left child to stack if they are not &lt;code&gt;Nil&lt;/code&gt;, push right first to make sure than left child will be poped first.&lt;/li&gt;
&lt;li&gt;when stack has no node to pop, traversal is done.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Solution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# @param root, a tree node&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# @return a list of integers&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;preorderTraversal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;In-order Traversal&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Set next node to be visited to root.&lt;/li&gt;
&lt;li&gt;If next node is not &lt;code&gt;Nil&lt;/code&gt;, push it to stack, set next node to be visited to its left child&lt;/li&gt;
&lt;li&gt;If next node is &lt;code&gt;Nil&lt;/code&gt;, pop its parent node from stack, mark it as visited(put its value into result list), then set next node to be visited to its right brother node.&lt;/li&gt;
&lt;li&gt;If next node is a child node and it is &lt;code&gt;Nil&lt;/code&gt;, its parent has been visited, its grandfather node will be poped from the stack and be visited.&lt;/li&gt;
&lt;li&gt;when stack has no node to be visited and next node is &lt;code&gt;Nil&lt;/code&gt;, traversal is done.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;set next node to root, &lt;code&gt;next&lt;/code&gt; is 1&lt;/li&gt;
&lt;li&gt;&lt;code&gt;next = 1&lt;/code&gt; is not &lt;code&gt;Nil&lt;/code&gt;, push 1 to stack, &lt;code&gt;stack = [1]&lt;/code&gt;, set &lt;code&gt;next&lt;/code&gt; to its left child, &lt;code&gt;next = 2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;next = 2&lt;/code&gt; is not &lt;code&gt;Nil&lt;/code&gt;, push 2 to stack, &lt;code&gt;stack = [1, 2]&lt;/code&gt;, set &lt;code&gt;next&lt;/code&gt; to its left child, &lt;code&gt;next = 3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;next = 3&lt;/code&gt; is not &lt;code&gt;Nil&lt;/code&gt;, push 3 to stack, &lt;code&gt;stack = [1, 2, 3]&lt;/code&gt;, set &lt;code&gt;next&lt;/code&gt; to its left child, &lt;code&gt;next = Nil&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;next&lt;/code&gt; is &lt;code&gt;Nil&lt;/code&gt;, pop its parent 3 from stack, &lt;code&gt;stack = [1, 2]&lt;/code&gt;, mark it as visited, &lt;code&gt;res = [3]&lt;/code&gt;, set &lt;code&gt;next&lt;/code&gt; to its right child, &lt;code&gt;next = Nil&lt;/code&gt;
6  &lt;code&gt;next&lt;/code&gt; is &lt;code&gt;Nil&lt;/code&gt;, pop a node, 2 from stack, mark it as visit, &lt;code&gt;stack = [1], res = [3, 2]&lt;/code&gt;, next is the right child of poped node 2, it is 4.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;next = 4&lt;/code&gt; is not &lt;code&gt;Nil&lt;/code&gt;, push to stack, &lt;code&gt;stack = [1, 4]&lt;/code&gt;, next is its left child, it is Nil.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;next&lt;/code&gt; is &lt;code&gt;Nil&lt;/code&gt;, 4 will be poped from stack and marked as visited, its right child is also &lt;code&gt;Nil&lt;/code&gt;, set &lt;code&gt;next&lt;/code&gt; to Nil;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;next&lt;/code&gt; is &lt;code&gt;Nil&lt;/code&gt;, another node 1 will be poped and mark as visited afterwards. &lt;code&gt;stack = []&lt;/code&gt;, &lt;code&gt;res = [3, 2, 4, 1]&lt;/code&gt;, &lt;code&gt;next&lt;/code&gt; is 5.&lt;/li&gt;
&lt;li&gt; 5 is similar with 2, and after go to step 8, &lt;code&gt;next is Nil&lt;/code&gt;, which is the right child of 7 (similar to 4 in step 7)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;next&lt;/code&gt; is &lt;code&gt;Nil&lt;/code&gt;, but there is nothing in stack, traversal is done.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Solution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# @param root, a tree node&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# @return a list of integers&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;inorderTraversal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;nb&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;nb&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Post-order Traversal&lt;/h4&gt;

&lt;p&gt;Post-order is similar to in-order but more complicated. &lt;/p&gt;

&lt;p&gt;We can trace to the leftmost node from a root node, like in-order.&lt;/p&gt;

&lt;p&gt;When &lt;code&gt;next&lt;/code&gt; is &lt;code&gt;Nil&lt;/code&gt;, its parent node should be visited after right child. So we should not pop stack unless the right child of the top node in stack is &lt;code&gt;Nil&lt;/code&gt; or has been visited.&lt;/p&gt;

&lt;p&gt;We use a variable &lt;code&gt;last_visited&lt;/code&gt; to mark the node marked visited last time.&lt;/p&gt;

&lt;p&gt;So when &lt;code&gt;next&lt;/code&gt; is &lt;code&gt;Nil&lt;/code&gt;, check if the right child of the top node in stack is &lt;code&gt;Nil&lt;/code&gt; or visited. If yes, pop it, mark it as visited(put its value into result list), set it to be the &lt;code&gt;last_visited&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;If not, set the right node to be the &lt;code&gt;next&lt;/code&gt;. The right node will be set to &lt;code&gt;last_visited&lt;/code&gt; when it has no right child or its right child is visited. So the parent will be visited afterwards.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Solution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# @param root, a tree node&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# @return a list of integers&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;postorderTraversal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;last_visited&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;nb&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last_visited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;last_visited&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                    &lt;span class=&quot;nb&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>根据字符串获取资源id</title>
      <link>http://liaohuqiu.net/cn/posts/android-get-resource-id-by-string/</link>
      <pubDate>Tue, 28 Oct 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/android-get-resource-id-by-string</guid>
      <description>&lt;p&gt;一般地，我们给一个&lt;code&gt;ImageView&lt;/code&gt;设置一个图片可能会采用以下代码:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;drawable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;imageView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setImageResource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;有时我们有动态设置图片资源的需要，这是需要根据给定字符串获取指定资源的id，比如给出&lt;code&gt;icon&lt;/code&gt;, 找到本地资源id，如下代码:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getResId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Android提供这样的方法: &lt;a href=&quot;http://developer.android.com/reference/android/content/res/Resources.html#getIdentifier(java.lang.String,%20java.lang.String,%20java.lang.String)&quot;&gt;Resources.getIdentifier()&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;使用方法如下:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getResId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Resources&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getResources&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getIdentifier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;icon&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;drawable&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;in.srain.cube.sample&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;对于这个方法，官方不推荐:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;use of this function is discouraged. It is much more efficient to retrieve resources by identifier than by name.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;在Nenus 5上，100,000次调用大概花费8500ms。另外，这个方法，需要一个&lt;code&gt;Context&lt;/code&gt;的引用。&lt;/p&gt;

&lt;h3&gt;更好的做法&lt;/h3&gt;

&lt;hr&gt;

&lt;p&gt;实际我们需要获取的是&lt;code&gt;R.drawable&lt;/code&gt; 中一个变量，可以用反射:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getResId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;variableName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;?&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Field&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idField&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getDeclaredField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;variableName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/etao-open-source/cube-sdk/blob/b573b16108e4d6d776e15ef5ac999cb88e63a27e/core/src/in/srain/cube/util/ResourceMan.java&quot;&gt;源码在这里&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;使用方法:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ResourceMan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getResId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;icon&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;drawable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Nenus 5, 100,000次，大概是1700ms。这个方法快多了，也不需要带入Context.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;当然，如果你足够大胆，你可以这样:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getResId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;icon&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;drawable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;但是这样的方法，维护起来简直是一个噩梦。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>手机客户端应用新浪微博绑定流程</title>
      <link>http://liaohuqiu.net/cn/posts/mobile-app-sina-binding/</link>
      <pubDate>Wed, 08 Oct 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/mobile-app-sina-binding</guid>
      <description>&lt;p&gt;以网站形式接入新浪微博之后，可以调用丰富的api，实现比如，发布微博，关注公共账号等功能。&lt;/p&gt;

&lt;p&gt;在移动客户端要实现一个一键关注公共账号的流程如下：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;点击关注按钮之后，app通过webview跳转到一个url，此url带上公共主页等必要参数&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;此url对应的页面检查该用户是否有新浪微博绑定关系，如有且token没有过期，则利用token直接关注账号，否则到3.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;页面跳转到新浪认证绑定界面，此界面有app样式，在此界面，用户登录完成之后，页面回跳到新浪开放平台填写的回调地址，并附上code参数，用于获取token。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在回调页面，获取token，执行2需要的操作。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;操作完成，跳转到一个自定义schema的url，客户端webview拦截每个跳转的url，发现是自定义url，告知操作成功。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;步骤2和3之间，因为回调地址不允许带用户自定义参数，在步骤4需要取到步骤2的用户信息。在php中可简单用session完成。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Chrome 扩展开发参考</title>
      <link>http://liaohuqiu.net/cn/posts/chrome-extension-hi/</link>
      <pubDate>Tue, 30 Sep 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/chrome-extension-hi</guid>
      <description>&lt;p&gt;这里是一个开源的chrome扩展的源码，你可以先看这源码，如果看明白了，那就不用看本文了，如果没看明白，那回来继续往下看。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/list-sorter/ekfniknfklfanjjjddebmpdeldjkdnnp&quot;&gt;List Sorter&lt;/a&gt;。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ssh public key认证免密码登录</title>
      <link>http://liaohuqiu.net/cn/posts/ssh-public-key-auto-login/</link>
      <pubDate>Tue, 16 Sep 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/ssh-public-key-auto-login</guid>
      <description>&lt;p&gt;ssh 登录可以使用公钥认证(ssh public key authentication)。&lt;/p&gt;

&lt;p&gt;将客户端机器的ssh public key添加到服务器的 &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt; 文件中，可实现ssh的免密码登录。&lt;/p&gt;

&lt;p&gt;这样做使得登录服务器更加安全和快捷。&lt;/p&gt;

&lt;h3&gt;客户端生成公钥和私钥&lt;/h3&gt;

&lt;p&gt;生成一个名为test的公钥和私钥对，密码留空不输入。具体的说明请看这里: &lt;a href=&quot;http://www.liaohuqiu.net/cn/posts/ssh-keygen-abc/&quot;&gt;ssh-keygen 基本用法&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[huqiu@101 ~]$ cd .ssh/
[huqiu@101 .ssh]$ ssh-keygen -t rsa -f test -C &amp;quot;test-key&amp;quot;
Generating public/private rsa key pair.
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;查看公钥内容&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[huqiu@101 .ssh]$ cat test.pub
ssh-rsa
AAAAB3NzaC1yc2EAAAABIwAAAQEAogyXOlD77fWF0bTm0r2HrRf8SKPKWjSv4pZKPZfBHOSZI8B0EDGr5/dpsMCPHUcZBt9v5BgJvLao/znBabap6TWt1yuStDh2rnzXY5uTFah0AiMlnQ7DhjkcctdLfLErz1V2jFTXEC2oGOanLoObpHV+LyeXkn/+i0VekT3QiULSkpzK/gsCtaLmaHLbGxv4GGGAoHtTZrfw09hGo47AeiyxzczcBa7TPXSATVPtCStWk+jzMcIyTyxcE7ORIsClN5xNLnbXiEQF5jOcP0qbjAmOH256E565VFh2WC8srjadfUm6jZLEiE5w7lp2/3rRynAsnF0zjEONE9aPUPhiNw==
test-key
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;配置公钥到服务器&lt;/h3&gt;

&lt;p&gt;将公钥内容添加到服务器的&lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt; 文件中.&lt;/p&gt;

&lt;h3&gt;alias 实现命令快速登陆&lt;/h3&gt;

&lt;p&gt;做好配置之后，通过ssh可以直接登录了。对经常登录的服务器，可以将ssh登录命令的alias加到 &lt;code&gt;~/.bash_profile&lt;/code&gt;文件中。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cat ~/.bash_profile &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; grep 101
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;to-101&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;ssh huqiu@192.168.154.101&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;登录的时候:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;to-101
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;无法登录一般的原因&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;客户端的私钥和公钥文件位置必须位于 &lt;code&gt;~/.ssh&lt;/code&gt; 下。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;确保双方 ~/.ssh 目录，父目录，公钥私钥，&lt;code&gt;authorized_keys&lt;/code&gt; 文件的权限对当前用户至少要有执行权限，对其他用户最多只能有执行权限。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注意git登录，要求对公钥和私钥以及config文件，其他用户不能有任何权限。&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;服务器端 &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt; 文件名确保没错 :).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;ssh-copy-id&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;ssh-copy-id&lt;/code&gt; 是一个小脚本，你可以用这个小脚本完成以上工作。这个脚本在linux系统上一般都有。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ssh-keygen 基本用法</title>
      <link>http://liaohuqiu.net/cn/posts/ssh-keygen-abc/</link>
      <pubDate>Mon, 15 Sep 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/ssh-keygen-abc</guid>
      <description>&lt;p&gt;ssh 公钥认证是ssh认证的方式之一。通过公钥认证可实现ssh免密码登陆，git的ssh方式也是通过公钥进行认证的。&lt;/p&gt;

&lt;p&gt;在用户目录的home目录下，有一个&lt;code&gt;.ssh&lt;/code&gt;的目录，和当前用户ssh配置认证相关的文件，几乎都在这个目录下。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ssh-keygen&lt;/code&gt; 可用来生成ssh公钥认证所需的公钥和私钥文件。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;使用 &lt;code&gt;ssh-keygen&lt;/code&gt; 时，请先进入到 &lt;code&gt;~/.ssh&lt;/code&gt; 目录，不存在的话，请先创建。并且保证 &lt;code&gt;~/.ssh&lt;/code&gt; 以及所有父目录的权限不能大于 &lt;code&gt;711&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;生成的文件名和文件位置&lt;/h3&gt;

&lt;p&gt;使用 &lt;code&gt;ssh-kengen&lt;/code&gt; 会在~/.ssh/目录下生成两个文件，不指定文件名和密钥类型的时候，默认生成的两个文件是：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;code&gt;id_rsa&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;id_rsa.pub&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;第一个是私钥文件，第二个是公钥文件。&lt;/p&gt;

&lt;p&gt;生成ssh key的时候，可以通过 &lt;code&gt;-f&lt;/code&gt; 选项指定生成文件的文件名，如下:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;huqiu@101 .ssh&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh-keygen -f &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;   -C &lt;span class=&quot;s2&quot;&gt;&amp;quot;test key&amp;quot;&lt;/span&gt;
                             ~~文件名   ~~~~ 备注
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果没有指定文件名，会询问你输入文件名:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[huqiu@101 .ssh]$ ssh-keygen
Generating public/private rsa key pair.
Enter file in which to save the key (/home/huqiu/.ssh/id_rsa):
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;你可以输入你想要的文件名，这里我们输入&lt;code&gt;test&lt;/code&gt;。&lt;/p&gt;

&lt;h3&gt;密码&lt;/h3&gt;

&lt;p&gt;之后，会询问你是否需要输入密码。输入密码之后，以后每次都要输入密码。请根据你的安全需要决定是否需要密码，如果不需要，直接回车:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;huqiu@101 .ssh&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh-keygen -t rsa -f &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; -C &lt;span class=&quot;s2&quot;&gt;&amp;quot;test key&amp;quot;&lt;/span&gt;
Generating public/private rsa key pair.
Enter passphrase &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;empty &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; no passphrase&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:
Enter same passphrase again:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;结果&lt;/h3&gt;

&lt;p&gt;如果文件名是&lt;code&gt;test&lt;/code&gt;，结果是:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;huqiu@101 .ssh&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ll &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;*
-rw------- &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; huqiu huqiu &lt;span class=&quot;m&quot;&gt;1675&lt;/span&gt; Sep &lt;span class=&quot;m&quot;&gt;15&lt;/span&gt; 13:24 &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;
-rw-r--r-- &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; huqiu huqiu  &lt;span class=&quot;m&quot;&gt;390&lt;/span&gt; Sep &lt;span class=&quot;m&quot;&gt;15&lt;/span&gt; 13:24 test.pub
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;备注&lt;/h3&gt;

&lt;p&gt;上面生成的命令中，&lt;code&gt;-C&lt;/code&gt;选项是公钥文件中的备注:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;huqiu@101 .ssh&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cat test.pub
ssh-rsa
AAAAB3NzaC1yc2EAAAABIwAAAQEAlgjiMw7AskxbvpQY9rmZPQxQBzh9laxFvbaini2EgmQkNsXBA9WJOXn2YBJauoiVsdUKBWA97avjsobrTxsCYvFr1yQQvTfTlbqlqGNIhQc/3HjTl2pIkClpDWvBrRN+jpyESS4MNbfOL1qjT4c/QhGvj6U6HrN6kUyn58oyyJpTzOLG74AZELJ2Led57QvTw1yJXZuAMWioR0A3BGd25fdocLX3ebux6ya8AsloOVYfsAqGlggrARe6FXjLfMH4a/nxaAdiDYVXU/Vr1ybK9P7SfyEDGJi3JtgiPUlA6vPxUC
E+9IJPQaqqeqCGzrJ6G/XO7om1v9YLLG/H/ZN2tQ&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;key
                                           ~~~~备注
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;文件的权限&lt;/h3&gt;

&lt;p&gt;为了让私钥文件和公钥文件能够在认证中起作用，请确保权限正确。&lt;/p&gt;

&lt;p&gt;对于&lt;code&gt;.ssh&lt;/code&gt; 以及父文件夹，当前用户用户一定要有执行权限，其他用户最多只能有执行权限。&lt;/p&gt;

&lt;p&gt;对于公钥和私钥文件也是: 当前用户一定要有执行权限，其他用户最多只能有执行权限。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;对于利用公钥登录，对其他用户配置执行权限是没有问题的。但是对于git，公钥和私钥, 以及config等相关文件的权限，其他用户不可有任何权限。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Gitlab 简单配置使用</title>
      <link>http://liaohuqiu.net/cn/posts/git-abc/</link>
      <pubDate>Thu, 11 Sep 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/git-abc</guid>
      <description>&lt;h3&gt;gitlab的安装&lt;/h3&gt;

&lt;p&gt;对于个人私有项目，github不太适合做托管，github也有收费的托管服务，可以控制项目的权限。&lt;/p&gt;

&lt;p&gt;gitlab提供免费的私人项目托管，同时也可以安装社区版到自己的服务器。&lt;/p&gt;

&lt;p&gt;安装非常简单，&lt;a href=&quot;https://about.gitlab.com/gitlab-ce/&quot;&gt;看这里&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;安装完成之后，使用默认的用户root用户登录，可以创建用户，管理用户，如下所示:&lt;/p&gt;

&lt;div class=&#39;row&#39;&gt;
    &lt;div class=&#39;col-md-12&#39;&gt;
        &lt;img src=&#39;/assets/img/gitlab-abc-admin-area.png&#39;/&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;h3&gt;客户端生成ssh-key&lt;/h3&gt;

&lt;p&gt;如果已经有sshkey，可用之前的。&lt;/p&gt;

&lt;p&gt;在客户端执行命令
&lt;code&gt;
ssh-keygen -t rsa -C &amp;quot;for xxx&amp;quot;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;-C&lt;/code&gt; 选项后是备注，可随意。&lt;/p&gt;

&lt;p&gt;命令执行后会要求输入key存储的文件名和&lt;code&gt;passphrase&lt;/code&gt;：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  输入一个特有的文件名，否则使用默认的 &lt;code&gt;id_rsa&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;passphrase&lt;/code&gt;。不输入也可以。输入之后，提交的时候要输入这个&lt;code&gt;passphrase&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;完成后在 ~/.ssh/ 会生成2个文件。&lt;code&gt;id_rsa&lt;/code&gt; 和 &lt;code&gt;id_rsa.pub&lt;/code&gt;。前者是私钥，注意保管，后者是&lt;code&gt;公钥&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;如下:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[huqiu@101 liaohuqiu]$ ssh-keygen
Generating public/private rsa key pair.
Enter file in which to save the key (/home/huqiu/.ssh/id_rsa):
Enter passphrase (empty for no passphrase):
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;添加ssh-key到gitlab&lt;/h3&gt;

&lt;p&gt;登录之后: Profile Settings =&amp;gt; SSH-Keys =&amp;gt; Add SSH key。&lt;/p&gt;

&lt;p&gt;输入之前生成的&lt;code&gt;公钥&lt;/code&gt;，标题随意。&lt;/p&gt;

&lt;div class=&#39;row&#39;&gt;
    &lt;div class=&#39;col-md-12&#39;&gt;
        &lt;img src=&#39;/assets/img/gitlab-abc-add-ssh-key.png&#39;/&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;h3&gt;基本使用介绍&lt;/h3&gt;

&lt;p&gt;配置好sshkey之后，你就可以在命令行下使用git命令进行操作了。强烈建议使用命令行而不是使用图形界面客户端。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  创建项目:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#39;row&#39;&gt;
    &lt;div class=&#39;col-md-12&#39;&gt;
        &lt;img src=&#39;/assets/img/gitlab-abc-project-create.png&#39;/&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt; 创建完成:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#39;row&#39;&gt;
    &lt;div class=&#39;col-md-12&#39;&gt;
        &lt;img src=&#39;/assets/img/gitlab-abc-project-after-created.png&#39;/&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;基本操作&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;clone&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;add&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;commit&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;push&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如下:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# clone&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;huqiu@101 git&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone git@git.liaohuqiu.net:huqiu/test.git
Cloning into &lt;span class=&quot;s1&quot;&gt;&amp;#39;test&amp;#39;&lt;/span&gt;...
warning: You appear to have cloned an empty repository.
Checking connectivity... &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 进入目录&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;huqiu@101 git&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd test&lt;/span&gt;/
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;huqiu@101 &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ll
total 0

&lt;span class=&quot;c&quot;&gt;# 创建一个文件&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;huqiu@101 &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;### hello, test&amp;quot;&lt;/span&gt; &amp;gt; README.md

&lt;span class=&quot;c&quot;&gt;# 为项目配置用户名和邮箱，用户名和邮箱会进入到日志&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;huqiu@101 &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git config user.name liaohuqiu
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;huqiu@101 &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git config user.email liaohuqiu@gmail.com


&lt;span class=&quot;c&quot;&gt;# 添加文件到本地库&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;huqiu@101 &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git add README.md

&lt;span class=&quot;c&quot;&gt;# 提交&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;huqiu@101 &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git commit -a -m &lt;span class=&quot;s1&quot;&gt;&amp;#39;add README&amp;#39;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;master &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;root-commit&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 1095bd8&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; add README
 &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; file changed, &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; insertion&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 create mode &lt;span class=&quot;m&quot;&gt;100644&lt;/span&gt; README.md

&lt;span class=&quot;c&quot;&gt;# push&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;huqiu@101 &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git push origin master
Counting objects: 3, &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;.
Writing objects: 100% &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3/3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, &lt;span class=&quot;m&quot;&gt;230&lt;/span&gt; bytes &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; bytes/s, &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;.
Total &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;delta 0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, reused &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;delta 0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
To git@git.liaohuqiu.net:huqiu/test.git
 * &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;new branch&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;      master -&amp;gt; master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;提交完成后记录:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#39;row&#39;&gt;
    &lt;div class=&#39;col-md-12&#39;&gt;
        &lt;img src=&#39;/assets/img/gitlab-abc-activity-line.png&#39;/&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;项目的文件情况:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#39;row&#39;&gt;
    &lt;div class=&#39;col-md-12&#39;&gt;
        &lt;img src=&#39;/assets/img/gitlab-abc-project-files.png&#39;/&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;h3&gt;祝使用愉快，欢迎交流&lt;/h3&gt;
</description>
    </item>
    
    <item>
      <title>简单的ssh隧道实现代理上网</title>
      <link>http://liaohuqiu.net/cn/posts/setup-web-prorxy-by-ssh-tunnel/</link>
      <pubDate>Thu, 28 Aug 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/setup-web-prorxy-by-ssh-tunnel</guid>
      <description>&lt;p&gt;现在连google也不能访问了。&lt;/p&gt;

&lt;p&gt;如果你有国外的服务器或者vps，(现在亚马逊云主机第一年免费)，你可以自己搭建代理服务。&lt;/p&gt;

&lt;p&gt;但是vpn (pptp / openvpn) 架设和管理还是相对复杂的, 部分运营商还有限制。&lt;/p&gt;

&lt;p&gt;除非你有手机用代理等需要，一定要vpn，如果是web上网的话用ssh隧道代理本地端口，简单，效果好。&lt;/p&gt;

&lt;h4&gt;本地代理&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ssh -N -D 127.0.0.1:端口 用户名@服务器
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;比如:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ssh -N -D 127.0.0.1:3128 xxx@xx.x.xx.xx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果是window，可用用cgywin模拟命令行，后者putty等软件实现。&lt;/p&gt;

&lt;h4&gt;设置&lt;/h4&gt;

&lt;p&gt;chrome 为例, 安装一个代理扩展，比如&lt;a href=&quot;https://chrome.google.com/webstore/detail/proxy-switchysharp/dpplabbmogkhghncfbfdeeokoefdjegm?&quot;&gt;Proxy SwitchySharp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;安装之后:&lt;/p&gt;

&lt;div class=&#39;row&#39;&gt;
    &lt;div class=&#39;col-md-offset-4 col-md-4&#39;&gt;
        &lt;img src=&#39;/assets/img/proxy-switchy-sharp.png&#39;/&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;配置代理&lt;/p&gt;

&lt;div class=&#39;row&#39;&gt;
    &lt;div class=&#39;col-md-offset-2 col-md-8&#39;&gt;
        &lt;img src=&#39;/assets/img/proxy-set-socks-v5.png&#39;/&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;设置自动代理, 可以使用我的规则文件: &lt;a href=&quot;https://github.com/liaohuqiu/proxy/blob/master/switch-sharp-rule&quot;&gt;switch-sharp-rule&lt;/a&gt;&lt;/p&gt;

&lt;div class=&#39;row&#39;&gt;
    &lt;div class=&#39;col-md-offset-2 col-md-8&#39;&gt;
        &lt;img src=&#39;/assets/img/proxy-auto-swith-online-list.png&#39;/&gt;
    &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>enable epel7 repository for CentOS7</title>
      <link>http://liaohuqiu.net/posts/enable-epel-repository-for-centos7/</link>
      <pubDate>Fri, 01 Aug 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/posts/enable-epel-repository-for-centos7</guid>
      <description>&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# wget http://dl.fedoraproject.org/pub/epel/beta/7/x86_64/epel-release-7-0.2.noarch.rpm&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# rpm -ivh epel-release-7-0.2.noarch.rpm&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>PHP: singleton of children class</title>
      <link>http://liaohuqiu.net/posts/php-singleton-of-children-class/</link>
      <pubDate>Thu, 24 Jul 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/posts/php-singleton-of-children-class</guid>
      <description>&lt;p&gt;As of &lt;code&gt;PHP 5.3&lt;/code&gt;, there is a new feature: &lt;a href=&quot;http://php.net/manual/en/language.oop5.late-static-bindings.php&quot;&gt;Late static binding&lt;/a&gt; which enables you get the final called class in a static inheritance.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This feature was named &amp;quot;late static bindings&amp;quot; with an internal perspective in mind. &amp;quot;Late binding&amp;quot; comes from the fact that static:: will not be resolved using the class where the method is defined but it will rather be computed using runtime information. It was also called a &amp;quot;static binding&amp;quot; as it can be used for (but is not limited to) static method calls.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In runtime:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;get_called_class()&lt;/code&gt; can retrieve a string with the name of the called class.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;static&lt;/code&gt; will introduce the scope.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With this feature, we can implement getting singleton of children class by a static method in parent class:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Base&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$class&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;get_called_class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// new $class() will work too&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Base&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Base&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The output will be:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;A
B
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>PHP静态延迟绑定: 获取子类的单例</title>
      <link>http://liaohuqiu.net/cn/posts/php-singleton-of-children-class/</link>
      <pubDate>Thu, 24 Jul 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/php-singleton-of-children-class</guid>
      <description>&lt;p&gt;在一定的需求场景下，你有一个父类和一些子类，你需要获取这些子类的实例又不想在每个子类中写重复的&lt;code&gt;getInstance()&lt;/code&gt;方法。&lt;/p&gt;

&lt;p&gt;在各种语言中，一般会用一个工具类去做这个实现。但在php5.3之后，会有另外一种方法。&lt;/p&gt;

&lt;p&gt;php5.3之后加入的新的特性：静态延迟绑定。这个特性允许在运行时获取静态继承的上下文。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;get_called_class()&lt;/code&gt; 可以获取被调用的类。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;static&lt;/code&gt; 关键字用来访问静态继承的上下文。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在这个特性下，可以通过父类的静态方法获取子类的实例:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Base&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$class&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;get_called_class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// new $class() will work too&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Base&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Base&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;程序输出:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;A
B
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>ssh + expect 自动登录服务器</title>
      <link>http://liaohuqiu.net/cn/posts/ssh-auto-login/</link>
      <pubDate>Wed, 02 Jul 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/ssh-auto-login</guid>
      <description>&lt;p&gt;secureCRT 记住用户名和密码的功能确实方便，如果你不愿意付费，也不想用破解，你就得另外想一些办法了。&lt;/p&gt;

&lt;p&gt;ssh + expect 自动输入密码登录服务器的方式很多人都很熟悉，在mac或者 linux系统用这样的方式登录服务器确实很方便。我将这个方法做了整理，方便大家使用。&lt;/p&gt;

&lt;p&gt;在配置好之后，你要登录只需要一个命令即可，比如你有一个服务器，你登录的时候只要：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;to-101
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;to-101&lt;/code&gt; 是你自己设置的一个短命令。&lt;/p&gt;

&lt;h3&gt;下载和安装&lt;/h3&gt;

&lt;p&gt;工具的地址在这里：&lt;a href=&quot;https://github.com/liaohuqiu/ssh-auto-login&quot;&gt;https://github.com/liaohuqiu/ssh-auto-login&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;git clone或者下载之后，目录结构是这样的&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ssh-auto-login/
 ├── files
 ├── base.sh
 ├── install.sh
 ├── install_shortcut.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;配置方法：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;install_shortcut.sh to-101 192.168.154.101 用户名 密码
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其中:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;to-101 是你自己指定的登录命令&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这样直接输入 &lt;code&gt;to-101&lt;/code&gt; 就可以登录了。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/liaohuqiu/ssh-auto-login&quot;&gt;https://github.com/liaohuqiu/ssh-auto-login&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;注意&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;配置完后生成一个auto-gen 目录，这里保存着用户名和密码，请注意账号安全。&lt;/p&gt;

&lt;p&gt;本方法有安全风险，使用需谨慎。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>通过QUIC协议访问Google</title>
      <link>http://liaohuqiu.net/cn/posts/visit-google-via-quic/</link>
      <pubDate>Sun, 08 Jun 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/visit-google-via-quic</guid>
      <description>&lt;p&gt;Google 已经支持QUIC。&lt;/p&gt;

&lt;p&gt;在 Chrome 浏览器打开:  &lt;code&gt;chrome://flags/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;启用「实验性 QUIC 协议」和「经由实验性 QUIC 协议发出的 HTTPS请求」，重启浏览器后可以正常登陆 Google 相关服务。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>setup log center</title>
      <link>http://liaohuqiu.net/posts/log-center/</link>
      <pubDate>Wed, 28 May 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/posts/log-center</guid>
      <description>&lt;p&gt;In *inux System, there are some log tools, for example: syslog, rsyslog, syslog-ng, etc..&lt;/p&gt;

&lt;p&gt;In our program we can record log to syslog, for example in php:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$priority&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;LOG_NOTICE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ident&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;srain&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;some messages@&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Y-m-d H:i:s&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;openlog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ident&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;LOG_PID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;LOG_LOCAL6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;syslog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$priority&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;closelog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When we have more than one webserver which will record log, we need a log center to keep all of the log.&lt;/p&gt;

&lt;h3&gt;Forwarding&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;syslog&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;*.local6    10.11.2.13  # the port is 514 and using the UDP protocal.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;rsyslog&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;*.local6    @@10.11.2.13:514    # tcp
*.local6    @10.11.2.13:601     # udp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;syslog-ng&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;description d_loghost { udp(&amp;quot;10.11.2.13&amp;quot; port(601)};

log { source(s_sys); description(d_loghost)};
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Reciving&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;rsyslog&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# for udp reception
$ModLoad imudp
$UDPServerRun 601

# for tcp reception
$ModLoad imtcp
$InputTCPServerRun 514
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;syslog-ng&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;destination df_wrt0 {
    # 不同的 ident 不同的文件
    file(&amp;quot;/var/log/$PROGRAM-$YEAR$MONTH$DAY&amp;quot;
            template(&amp;quot;$FULLDATE $SOURCEIP-$HOST[$PID]: $MSG\n&amp;quot;)
            template_escape(yes)
        );
};

source s_net {
    udp(ip(0.0.0.0) port(601));
    tcp(ip(0.0.0.0) port(514));
};

log { source(s_net); destination(df_wrt0);};
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Preformance&lt;/h3&gt;

&lt;p&gt;I prefer syslog/rsyslog + syslog-ng. It will be more stable and easy to config.&lt;/p&gt;

&lt;p&gt;There were more than 2000 clients to send log to a log center.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>日志中心：统一日志服务器</title>
      <link>http://liaohuqiu.net/cn/posts/log-center/</link>
      <pubDate>Wed, 28 May 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/log-center</guid>
      <description>&lt;p&gt;在 *iux 系统上，有 syslog, rsyslog, syslog-ng 几种程序记录日志。&lt;/p&gt;

&lt;p&gt;我们可以在php中这样记录日志:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$priority&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;LOG_NOTICE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ident&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;srain&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;some messages@&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Y-m-d H:i:s&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;openlog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ident&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;LOG_PID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;LOG_LOCAL6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;syslog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$priority&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;closelog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我们在各个 web 前端输出日志。然后把日志统一输出到一个日志服务器上，便于使用。&lt;/p&gt;

&lt;p&gt;在产生日志的机器上，我们配置好日志转发，在日志中心服务器，收集这些日志。&lt;/p&gt;

&lt;p&gt;可以通过 tcp 协议和 udp 协议进行日志转发。&lt;/p&gt;

&lt;h3&gt;转发配置&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;syslog&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;*.local6    10.11.2.13  # 默认 514 udp转发
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;rsyslog&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;*.local6    @@10.11.2.13:514    # tcp
*.local6    @10.11.2.13:601     # udp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;syslog-ng&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;description d_loghost { udp(&amp;quot;10.11.2.13&amp;quot; port(601)};

log { source(s_sys); description(d_loghost)};
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;接收配置&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;rsyslog&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# 接收 udp
$ModLoad imudp
$UDPServerRun 514

# 接收tcp
$ModLoad imtcp
$InputTCPServerRun 514
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;syslog-ng&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;destination df_wrt0 {
    # 不同的ident 不同的文件
    file(&amp;quot;/var/log/$PROGRAM-$YEAR$MONTH$DAY&amp;quot;
            template(&amp;quot;$FULLDATE $SOURCEIP-$HOST[$PID]: $MSG\n&amp;quot;)
            template_escape(yes)
        );
};

source s_net {
    udp(ip(0.0.0.0) port(601));
    tcp(ip(0.0.0.0) port(514));
};

log { source(s_net); destination(df_wrt0);};
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;性能&lt;/h3&gt;

&lt;p&gt;syslog + syslog-ng。曾经有2000+的web往一台日志服务器上汇总。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>find smallest number greater than given number out of a sorted list</title>
      <link>http://liaohuqiu.net/posts/smallest-number-greater-than-given-number/</link>
      <pubDate>Tue, 20 May 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/posts/smallest-number-greater-than-given-number</guid>
      <description>&lt;p&gt;Give out a sort list:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;60, 80, 100, 120, 160, 320, 480, 640, 720, 1080
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Find out the smallest number but greater than given number. For example:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;10 =&amp;gt; 80
60 =&amp;gt; 80
100 =&amp;gt; 100
140 =&amp;gt; 160
200 =&amp;gt; 320
1080 =&amp;gt; 1080
1800 =&amp;gt; 1080
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Simply, we can use for a for loop to archive this, and its complexity is O(n);&lt;/p&gt;

&lt;p&gt;Here I use a binary search, whose complexity will be O(logn):&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bin_search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$l&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nv&quot;&gt;$f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;$h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;$l&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$l&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$map&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;mi&quot;&gt;120&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;mi&quot;&gt;160&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;mi&quot;&gt;320&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;mi&quot;&gt;480&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;mi&quot;&gt;640&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;mi&quot;&gt;720&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;mi&quot;&gt;1080&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;%s =&amp;gt; %s&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bin_search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;140&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1080&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1800&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The output:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;huqiu@101 ~&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;php test.php
&lt;span class=&quot;nv&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; 80
&lt;span class=&quot;nv&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; 80
&lt;span class=&quot;nv&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; 100
&lt;span class=&quot;nv&quot;&gt;140&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; 160
&lt;span class=&quot;nv&quot;&gt;200&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; 320
&lt;span class=&quot;nv&quot;&gt;1080&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; 1080
&lt;span class=&quot;nv&quot;&gt;1800&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; 1080
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Shortcut for arrow keys, move like in vi/vim mode</title>
      <link>http://liaohuqiu.net/posts/remap-arrow-keys-to-vi-mode/</link>
      <pubDate>Thu, 08 May 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/posts/remap-arrow-keys-to-vi-mode</guid>
      <description>&lt;p&gt;I am used to vim and like to move with &lt;kbd&gt;H&lt;/kbd&gt;, &lt;kbd&gt;J&lt;/kbd&gt;, &lt;kbd&gt;K&lt;/kbd&gt;, &lt;kbd&gt;L&lt;/kbd&gt;. &lt;/p&gt;

&lt;p&gt;I would like to avoid switching to the arrow keys when I am in a text field for example.&lt;/p&gt;

&lt;p&gt;In all application, I want:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;kbd&gt;&amp;larr;&lt;/kbd&gt; can also be triggered by &lt;kbd&gt;Alt&lt;/kbd&gt; + &lt;kbd&gt;H&lt;/kbd&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;kbd&gt;&amp;darr;&lt;/kbd&gt; can also be triggered by &lt;kbd&gt;Alt&lt;/kbd&gt; + &lt;kbd&gt;J&lt;/kbd&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;kbd&gt;&amp;uarr;&lt;/kbd&gt; can also be triggered by &lt;kbd&gt;Alt&lt;/kbd&gt; + &lt;kbd&gt;K&lt;/kbd&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;kbd&gt;&amp;rarr;&lt;/kbd&gt; can also be triggered by &lt;kbd&gt;Alt&lt;/kbd&gt; + &lt;kbd&gt;L&lt;/kbd&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In Mac, this will be easily done by &lt;a href=&quot;https://pqrs.org/macosx/keyremap4macbook/&quot;&gt;keyremap4macbook&lt;/a&gt;, there is a &lt;code&gt;vi Mode&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;But in windows, this will be a little hard.&lt;/p&gt;

&lt;p&gt;I use &lt;a href=&quot;http://www.autohotkey.com/&quot;&gt;Auto hot key&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And the following scrpit:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;!h::SendInput,{LEFT}
!j::SendInput,{DOWN}
!k::SendInput,{UP}
!l::SendInput,{RIGHT} 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>我的 Mac 工作环境配置</title>
      <link>http://liaohuqiu.net/cn/posts/set-up-mac/</link>
      <pubDate>Mon, 05 May 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/set-up-mac</guid>
      <description>&lt;h3&gt;Update&lt;/h3&gt;

&lt;p&gt;本文写于 2014-05-05，现在两年多过去了，很多朋友用了这个配置，觉得很不错，我今天（2016-11-29）做一个更新，删除了过时内容，加入了一些新的配置。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;输入法切换，Control + 空格，不要用 Command + 空格，command 用大拇指，空格也是，无法快速切换。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.liaohuqiu.net/cn/posts/ssh-agent-forward/&quot;&gt;配置 ssh-agent forward&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;修改 Caps Lock 为 ESC，方便 Vim 操作。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr&gt;

&lt;h2&gt;软件&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.iterm2.com/&quot;&gt;iTerm&lt;/a&gt; ，取代自带终端。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/liaohuqiu/vim_anywhere&quot;&gt;vim anywhere&lt;/a&gt; vim 的配置；&lt;a href=&quot;https://github.com/liaohuqiu/work-anywhere&quot;&gt;work anywhere&lt;/a&gt;，一些小工具软件。直接用这个脚本安装：&lt;a href=&quot;https://gist.github.com/liaohuqiu/92c00403c78459caf8440da8d7432c94&quot;&gt;init-git-and-vim&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;大部分的本地开发工作，比如 Docker ，会在虚拟机里面进行。&lt;/p&gt;

&lt;p&gt;VirtualBox + CentOS &lt;a href=&quot;http://www.liaohuqiu.net/posts/install-lamp-on-minimum-centos/&quot;&gt;最小化安装 CentOS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;虚拟机用 NAT 和外界通信。本地和虚拟机通信，记得用 host-only 网络。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;改键&lt;/h2&gt;

&lt;h5&gt;fn 和 ctrl 键&lt;/h5&gt;

&lt;p&gt;不知道基于什么反人类的考虑，fn 居然会在键盘最左下。公司的 ThinkPad T430，就是这样的。官方居然还振振有辞：&lt;a href=&quot;http://blog.lenovo.com/design/fn-versus-ctrl-let-the-games-begin&quot;&gt;http://blog.lenovo.com/design/fn-versus-ctrl-let-the-games-begin&lt;/a&gt;。你可以在 BIOS 里面修改，但是你不能把那两个键抠下来，交换他们的位置。&lt;/p&gt;

&lt;p&gt;Mac 稍微好点，你可以把 fn 和 ctrl 抠下来，交换位置，然后装上去。然后利用软件交换这两个键。&lt;/p&gt;

&lt;p&gt;软件上改键，借助:  &lt;a href=&quot;https://github.com/tekezo/Karabiner-Elements&quot;&gt;Karabiner-Elements&lt;/a&gt; （Update: &lt;a href=&quot;https://pqrs.org/macosx/keyremap4macbook/&quot;&gt;https://pqrs.org/macosx/keyremap4macbook/&lt;/a&gt; 目前对 10.11 支持不好，不推荐）&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//img1.liaohuqiu.com/mac-setup-keys-fn-ctrl-01.png&quot;/&gt;&lt;/p&gt;

&lt;h4&gt;系统设置&lt;/h4&gt;

&lt;p&gt;以下的配置都在系统设置中完成：&lt;/p&gt;

&lt;h5&gt;Spotlight 快捷键: option + r&lt;/h5&gt;

&lt;p&gt;&lt;img src=&quot;//img1.liaohuqiu.com/mac-setup-keys-spotlight.png&quot;/&gt;&lt;/p&gt;

&lt;h5&gt;fn / F1 ~ F12&lt;/h5&gt;

&lt;p&gt;还原键盘上的 F1 ~ F12 为标准功能，用 Fn + F1 ~ F12 来实现功能。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//img1.liaohuqiu.com/mac-setup-keys-fn.png&quot;/&gt;&lt;/p&gt;

&lt;p&gt;解除被占用的 F11 和 F12:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//img1.liaohuqiu.com/mac-setup-keys-f11-f12.png&quot;/&gt;&lt;/p&gt;

&lt;h5&gt;vi mode&lt;/h5&gt;

&lt;p&gt;上下左右移动用小箭头是非常费劲的事情，在 vim 中 hjkl 可以在手不离开键盘的情况下，快速完成。&lt;/p&gt;

&lt;p&gt;使用 &lt;a href=&quot;https://www.keyboardmaestro.com/main/&quot;&gt;Keyboard Maestro&lt;/a&gt; 改键，实现 option + hjkl 移动光标：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//img1.liaohuqiu.com/mac-setup-keys-vi-mode-01.png&quot;/&gt;&lt;/p&gt;

&lt;p&gt;配置可从这是直接导入：&lt;a href=&quot;//img1.liaohuqiu.com/vim_mode.kmmacros?attname=&quot;&gt;vim_mode.kmmacros&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;使用三个手指选择文本&lt;/h4&gt;

&lt;p&gt;Accessibility &amp;gt; Mouse &amp;amp; ThinkPad &amp;gt; Trackpad Options &amp;gt; Enable dragging &amp;gt; three finger drag&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>我的 idea 配置</title>
      <link>http://liaohuqiu.net/cn/posts/my-idea-config/</link>
      <pubDate>Mon, 31 Mar 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/my-idea-config</guid>
      <description>&lt;h4&gt;基本配置&lt;/h4&gt;

&lt;p&gt;Community Edition of IntelliJ + IdeaVim&lt;/p&gt;

&lt;p&gt;mac上，长按击键:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;defaults write com.jetbrains.intellij.ce ApplePressAndHoldEnabled -bool false
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Keymap&lt;/h3&gt;

&lt;p&gt;基本所有的操作，都替我搞定了。&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;function&lt;/th&gt;
&lt;th&gt;mac&lt;/th&gt;
&lt;th&gt;win&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;resume&lt;/td&gt;
&lt;td&gt;F8&lt;/td&gt;
&lt;td&gt;F8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;step over&lt;/td&gt;
&lt;td&gt;F10&lt;/td&gt;
&lt;td&gt;F10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;step into&lt;/td&gt;
&lt;td&gt;F11&lt;/td&gt;
&lt;td&gt;F11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;step out&lt;/td&gt;
&lt;td&gt;Shift + F11&lt;/td&gt;
&lt;td&gt;Shift + F11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;setting&lt;/td&gt;
&lt;td&gt;Command + ,&lt;/td&gt;
&lt;td&gt;Alt + ,&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;project setting&lt;/td&gt;
&lt;td&gt;Command + ;&lt;/td&gt;
&lt;td&gt;Alt + ;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Navigate Class&lt;/td&gt;
&lt;td&gt;Command + O&lt;/td&gt;
&lt;td&gt;Alt + O&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Navigate File&lt;/td&gt;
&lt;td&gt;Command + Shift + O&lt;/td&gt;
&lt;td&gt;Alt + Shift + O&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Optimize Imports&lt;/td&gt;
&lt;td&gt;Command + Ctrl + O&lt;/td&gt;
&lt;td&gt;Alt + Ctrl + O&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>Android中的稀疏数组：SparseArray</title>
      <link>http://liaohuqiu.net/cn/posts/sparse-array-in-android/</link>
      <pubDate>Sun, 30 Mar 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/sparse-array-in-android</guid>
      <description>&lt;p&gt;在一般情况下，使用 &lt;code&gt;HashMap&amp;lt;K, V&amp;gt;&lt;/code&gt;，如果 &lt;code&gt;K&lt;/code&gt; 整数类型的话，使用 &lt;code&gt;SparseArray&lt;/code&gt; 效率会更高。&lt;/p&gt;

&lt;p&gt;和&lt;code&gt;HashMap&lt;/code&gt;类似，&lt;code&gt;SparseArray&lt;/code&gt; 建立整数索引和对象的关系。和简单的对象数组相比，&lt;code&gt;SparseArray&lt;/code&gt; 允许索引之间有间隔。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;SparseArray&lt;/code&gt; 支持和 &lt;code&gt;HashMap&lt;/code&gt; 类似的 &lt;code&gt;put&lt;/code&gt; 和 &lt;code&gt;get&lt;/code&gt; 方法。在其内部，维护着两个数组，一个用于存储索引，一个用于存储对象。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SparseArray&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Cloneable&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mKeys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mValues&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;整数索引被从小到大映射到 &lt;code&gt;mKeys&lt;/code&gt; 数组中。&lt;/p&gt;

&lt;h3&gt;索引的映射&lt;/h3&gt;

&lt;p&gt;在计算整数索引映射到数组中的位置的时候，用了一个改造过的的二分搜索算法：&lt;/p&gt;

&lt;p&gt;这个算法输入的参数是：要搜索的数组&lt;code&gt;a&lt;/code&gt;，搜索的起始位置 &lt;code&gt;start&lt;/code&gt;, 搜索的长度 &lt;code&gt;len&lt;/code&gt;, 要检索的关键字 &lt;code&gt;key&lt;/code&gt;，如下:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;binarySearch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;high&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;low&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;guess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;high&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;low&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;guess&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;high&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;low&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;guess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;low&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;guess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;high&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;guess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;high&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;high&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;high&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;high&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这是一个巧妙设计的算法，如果输入的 &lt;code&gt;key&lt;/code&gt; 在区间内则返回等于关键字或者最小的大于关键字的索引。&lt;/p&gt;

&lt;p&gt;如果关键字不在区间内，则将区间首个索引或者区间最后一个索引加1取反码，非负数的反码都是负数，因为符号位被取反了。&lt;/p&gt;

&lt;p&gt;有一个数组： &lt;code&gt;int[] a = new int[] {2, 5, 8, 0, 0};&lt;/code&gt; 结构如下:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;  0   1   2   3   4
+---+---+---+---+---+
| 2 | 5 | 8 |   |   |
+---+---+---+---+---+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;对于 &lt;code&gt;start = 0&lt;/code&gt;, &lt;code&gt;len = 3&lt;/code&gt;, 对于不同的关键字：&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;key&lt;/th&gt;
&lt;th&gt;return&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;-1&lt;/td&gt;
&lt;td&gt;在区间范围最左边，返回区间最首个索引取反&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;关键字存在，返回对应的索引&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;返回最小的比关键字大的值的对应的索引, 即 5 的索引&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;关键字存在，返回对应的索引&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;-4&lt;/td&gt;
&lt;td&gt;在区间最右边，区间最右索引加1取反 &lt;code&gt;~(2+1)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;h3&gt;put 过程&lt;/h3&gt;

&lt;p&gt;put 的过程分为以下几步：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;计算索引映射。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果在在区间内有对应槽位，设置值，返回。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如有必要，进行扩容。&lt;/p&gt;

&lt;p&gt;容量以类似2的指数次幂增长。对象引用和和整数都占用4个字节，数组本身还需要占用3个字节。
为了内存4字节对齐，数组大小应该是：2^n - 3(n &amp;gt;=2)。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如有必要，移动区段&lt;/p&gt;

&lt;p&gt;如果计算出的映射索引，在现有对象的位置上，需要移动区段。&lt;/p&gt;

&lt;p&gt;对于上述数组，如果要插入 4：计算得的索引为 1，需要将索引位置开始的所有元素后移：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;  0   1   2   3   4
+---+---+---+---+---+
| 2 |   | 5 | 8 |   | 
+---+---+---+---+---+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;最后，设置值，将数据长度加 1。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;主要代码如下，省略了部分细节：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;E&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 1. 计算索引&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;binarySearch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mKeys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 2. key已经有对应槽位，更新值&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mValues&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// 3. 扩容&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mKeys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// 4. 移动区段&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// Log.e(&amp;quot;SparseArray&amp;quot;, &amp;quot;move &amp;quot; + (mSize - i));&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;arraycopy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mKeys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mKeys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;arraycopy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mValues&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mValues&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// 4. 设置值，长度加 1&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mKeys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mValues&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;get 和遍历&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  如果索引不存在，&lt;code&gt;indexOfKey(int key)&lt;/code&gt;，将会返回负数值。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;遍历需要获取数组的总的对象大小，然后用 &lt;code&gt;keyAt(int index)&lt;/code&gt; 获取索引或者 &lt;code&gt;valueAt(int index)&lt;/code&gt; 获取值。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sparseArray&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sparseArray&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;keyAt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sparseArray&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;valueAt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;效率的提升和使用限制&lt;/h3&gt;

&lt;p&gt;稀疏数组的使用，对于索引是整数的情景，有时能带来一些效率的提升。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; 减少了 hashCode 时间消耗&lt;/li&gt;
&lt;li&gt; 减小了所使用的内存大小。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;和 &lt;code&gt;SparseArray&lt;/code&gt; 类似的，有 &lt;code&gt;SparseBooleanArray&lt;/code&gt;, &lt;code&gt;SparseIntArray&lt;/code&gt;。前者，减少了存储对象占用的空间，后者减少了类型转换。&lt;/p&gt;

&lt;p&gt;但在所管理的对象数量很大时，效率却反而有可能更低：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; 在插入的时候，有可能导致大段数组的复制;&lt;/li&gt;
&lt;li&gt; 在删除之后，也有可能导致数组的大段元素被按个移动（不是复制数组，而是一个一个单独移动）;&lt;/li&gt;
&lt;li&gt; 索引的映射，采用了二分查找，时间复杂度为 O(logn)。&lt;/li&gt;
&lt;/ol&gt;

&lt;hr&gt;

&lt;p&gt;写完这篇文章，搜索了一下 &lt;a href=&quot;https://www.google.com.hk/search?newwindow=1&amp;amp;safe=strict&amp;amp;espv=2&amp;amp;es_sm=91&amp;amp;q=Android%E4%B8%AD%E7%9A%84%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84&amp;amp;oq=Android%E4%B8%AD%E7%9A%84%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84&amp;amp;gs_l=serp.3...3053247.3054108.0.3054377.2.2.0.0.0.0.365.365.3-1.1.0....0...1c.2.38.serp..2.0.0.Qv5XeRT1LoA&quot;&gt;相关的内容&lt;/a&gt; 发现中文的文章，大部分都是重复的，几个原创的也有一些错误。特强调如下：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;SparseArray&lt;/code&gt; 是针对&lt;code&gt;HashMap&lt;/code&gt;做的优化。&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;HashMap&lt;/code&gt; 内部的存储结构，导致一些内存的浪费。&lt;/li&gt;
&lt;li&gt;在刚扩容完，&lt;code&gt;SparseArray&lt;/code&gt; 和 &lt;code&gt;HashMap&lt;/code&gt; 都会存在一些没被利用的内存。&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;SparseArray&lt;/code&gt; 并不是任何时候都会更快，有时反而会更慢&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>git: 提交前强制检查各个项目用户名邮箱设置</title>
      <link>http://liaohuqiu.net/cn/posts/using-diffrent-user-config-for-different-repository/</link>
      <pubDate>Thu, 20 Mar 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/using-diffrent-user-config-for-different-repository</guid>
      <description>&lt;h3&gt;保证提交日志的准确性&lt;/h3&gt;

&lt;p&gt;在提交时，&lt;code&gt;user.name&lt;/code&gt;, &lt;code&gt;user.email&lt;/code&gt;会进入日志。这些信息，是追踪代码变更的关键。&lt;/p&gt;

&lt;p&gt;我们公司为了保证这些信息的准确性，在push时，强制检查，如果&lt;code&gt;user.name&lt;/code&gt;和&lt;code&gt;user.email&lt;/code&gt;信息不正确，则拒绝push。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;全局配置&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;如果我们工作中只涉及一个git服务器，用一个全局配置就可以搞定了：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git config --global user.name &lt;span class=&quot;s2&quot;&gt;&amp;quot;huqiu.lhq&amp;quot;&lt;/span&gt;
git config --global user.email &lt;span class=&quot;s2&quot;&gt;&amp;quot;huqiu.lhq@alibaba-inc.com&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;工作在多个git项目&lt;/h3&gt;

&lt;p&gt;但是我们可能同时工作在多个项目中，公司内部用自有的git管理项目，我们在github上还有自己的项目。&lt;/p&gt;

&lt;p&gt;对于使用不同的用户身份，需要设置不用的sshkey，具体的配置可以看这里：&lt;a href=&quot;/cn/posts/git-setup-and-setting/&quot;&gt;多个sshkey配置&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;这个时候，对于&lt;code&gt;user.name&lt;/code&gt;和&lt;code&gt;user.email&lt;/code&gt;我们不能采用全局的配置。而是要对各个项目单独配置。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;项目配置&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git config user.name &lt;span class=&quot;s2&quot;&gt;&amp;quot;huqiu.lhq&amp;quot;&lt;/span&gt;
git config user.email &lt;span class=&quot;s2&quot;&gt;&amp;quot;huqiu.lhq@alibaba-inc.com&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;忘记了做配置&lt;/h3&gt;

&lt;p&gt;对于项目配置，有时我们会忘记在&lt;code&gt;git init&lt;/code&gt;或者&lt;code&gt;git clone&lt;/code&gt;之后，配置&lt;code&gt;user.name&lt;/code&gt;以及&lt;code&gt;user.email&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;如果有全局配置，则使用全局配置。如果没全局配置，报错。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;huqiu@srain &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git ci -a -m &lt;span class=&quot;s1&quot;&gt;&amp;#39;commit for testing no user.name empty&amp;#39;&lt;/span&gt;

*** Please tell me who you are.

Run

git config --global user.email &lt;span class=&quot;s2&quot;&gt;&amp;quot;you@example.com&amp;quot;&lt;/span&gt;
git config --global user.name &lt;span class=&quot;s2&quot;&gt;&amp;quot;Your Name&amp;quot;&lt;/span&gt;

to &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;your account&lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt;s default identity.
Omit --global to &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;the identity only in this repository.

fatal: empty ident name &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &amp;lt;huqiu@srain.localhost&amp;gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; not allowed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;报错能够及时纠正我们的错误，最糟糕的情况是：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;strong&gt;没有项目单独配置，提交的时候，自动采用全局配置。在发现问题之后需要对日志进行修复。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;强制检查&lt;/h3&gt;

&lt;p&gt;强制检查可以在服务器端push的时候检查，也可以在客户端进行检查，这里介绍使用`pre-commit&lt;/code&gt;钩子进行检查。&lt;/p&gt;

&lt;p&gt;全局钩子的配置，可以参见这里: &lt;a href=&quot;http://srain.test.com/cn/posts/git-global-hooks/&quot;&gt;git全局钩子&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;如何确定配置正确&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;确定没有全局配置&lt;/li&gt;
&lt;li&gt;确定有项目配置&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;pre-commit hook&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;global_email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;git config --global user.email&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;global_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;git config --global user.name&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;repository_email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;git config user.email&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;repository_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;git config user.name&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; -z &lt;span class=&quot;s2&quot;&gt;&amp;quot;$repository_email&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; -z &lt;span class=&quot;s2&quot;&gt;&amp;quot;$repository_name&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; -n &lt;span class=&quot;s2&quot;&gt;&amp;quot;$global_email&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; -n &lt;span class=&quot;s2&quot;&gt;&amp;quot;$global_name&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# user.email is empty&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;ERROR: [pre-commit hook] Aborting commit because user.email or user.name is missing. Configure them for this repository. Make sure not to configure globally.&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;  
    &lt;span class=&quot;c&quot;&gt;# user.email is not empty&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;0
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;直接可用的代码&lt;/h3&gt;

&lt;p&gt;上面谈到的：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href=&quot;https://github.com/liaohuqiu/work-anywhere/blob/master/sample/git-template/hooks/pre-commit&quot;&gt;pre-commit 的源码&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;自动设置全局钩子的脚本(其中包含了这个强制检查的pre-commit钩子)，并对git做一些易用配置：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href=&quot;https://github.com/liaohuqiu/work-anywhere/blob/master/tools/update-git-config.sh&quot;&gt;update-git-config.sh&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>git 全局钩子</title>
      <link>http://liaohuqiu.net/cn/posts/git-global-hooks/</link>
      <pubDate>Thu, 20 Mar 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/git-global-hooks</guid>
      <description>&lt;h3&gt;钩子文件在项目目录下&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://git-scm.com/book/en/Customizing-Git-Git-Hooks&quot;&gt; git 的钩子&lt;/a&gt;放在 git 项目下的 &lt;code&gt;.git/hooks&lt;/code&gt; 目录。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ls -l .git/hooks
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果我们所有项目都需要一个通用的钩子，那么我们需要在所有的项目中都放置钩子文件。挨个复制显然不是一个可行的方案。&lt;/p&gt;

&lt;h3&gt;模板目录&lt;/h3&gt;

&lt;p&gt;我们可用模板目录来解决这个问题。&lt;/p&gt;

&lt;p&gt;在 &lt;code&gt;git init&lt;/code&gt; 或者 &lt;code&gt;git clone&lt;/code&gt;时，如果指定有模板目录，会使用拷贝模板目录下的文件到 &lt;code&gt;.git/&lt;/code&gt; 目录下。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git init --template &lt;span class=&quot;s2&quot;&gt;&amp;quot;path-to-template-dir&amp;quot;&lt;/span&gt;
git clone --template &lt;span class=&quot;s2&quot;&gt;&amp;quot;path-to-template-dir&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;好了，那么解决方案就是：把统一的钩子文件放到模板目录，然后在 &lt;code&gt;git init&lt;/code&gt; / &lt;code&gt;git clone&lt;/code&gt; 时候指定模板目录？&lt;/p&gt;

&lt;p&gt;不行，这样还是太麻烦了。&lt;/p&gt;

&lt;h3&gt;模板目录写入全局配置&lt;/h3&gt;

&lt;p&gt;模板目录固定在一个地方，我们可以把模板目录写入全局配置。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# 定义模板目录，模板目录下的钩子目录
template_dir=$HOME/.git-templates
tempalte_hooks_dir=$template_dir/hooks

# 拷贝全局钩子文件目录到模板目录下
mkdir -p $template_dir
cp -rf $root_dir/sample/git-template/hooks/ $template_dir/

# 修改模板目录下钩子目录权限
chmod -R a+x $tempalte_hooks_dir

# 设置全局模板目录
git config --global init.templatedir $template_dir
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在 &lt;code&gt;git init&lt;/code&gt; 或者 &lt;code&gt;git clone&lt;/code&gt; 时，会自动拷贝钩子文件到项目的钩子目录。
已有项目，执行 &lt;code&gt;git init&lt;/code&gt; 重新初始化项目即可。&lt;/p&gt;

&lt;h3&gt;直接可用的脚本&lt;/h3&gt;

&lt;p&gt;上面那段脚本，来自我的 github：&lt;a href=&quot;https://github.com/liaohuqiu/work-anywhere/blob/master/tools/update-git-config.sh&quot;&gt;https://github.com/liaohuqiu/work-anywhere/blob/master/tools/update-git-config.sh&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;将你需要的钩子文件放在 &lt;code&gt;sample/git-templete/hooks&lt;/code&gt;文件夹下即可。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>一种简单高效的二进制编码方法</title>
      <link>http://liaohuqiu.net/cn/posts/binpack/</link>
      <pubDate>Tue, 18 Mar 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/binpack</guid>
      <description>&lt;p&gt;JSON 是一种非常常见的编码方法，数据编码之后，可进行持久存储或者网络传输。
和 xml 类似，JSON 也是自描述的，编码后的数据具有一定的可读性并且相对 xml 数据更小。&lt;/p&gt;

&lt;p&gt;但在 RPC 调用的数据传输时，使用 JSON 编解码速度慢，数据量也太大。&lt;/p&gt;

&lt;p&gt;本文介绍一种二进制编码方法，具有编码解码速度快，编码后数据量小的特点，同时类似 JSON，编码后的数据也是自描述的。&lt;/p&gt;

&lt;h3&gt;支持的常用数据类型&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Null。空类型。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Bool。布尔值，&lt;code&gt;true&lt;/code&gt;或者&lt;code&gt;false&lt;/code&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Integer_%28computer_science%29&quot;&gt;Integer&lt;/a&gt;。根据长度不同，支持：8 ~ 64 位。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Blob，二进制流。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;String。字符串。C 风格字符串不包含最后一个字符。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Float，浮点数。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Single，单精度浮点数，32位，4字节。&lt;/li&gt;
&lt;li&gt;Double，双精度浮点数，64为，8字节。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;List，数组。值可以是支持的任意类型，包括 List 本身。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Dictionary，key-value 键值对。值可以是支持的任意类型，包括 Dictionary 本身&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;编码方法&lt;/h1&gt;

&lt;hr&gt;

&lt;h3&gt;Null&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;编码成一个特殊字节&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;+-----------+
| 0000 1111 |   0x0f
+-----------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Bool&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;true&lt;/code&gt; 和 &lt;code&gt;false&lt;/code&gt; 分别被编码成一个特殊的字节。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;+-----------+
| 0000 0100 |   0x04
+-----------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;false&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;+-----------+
| 0000 0101 |   0x05
+-----------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Integer&lt;/h3&gt;

&lt;p&gt;整数会被编码成一个或者多个字节。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;整数的类型信息和符号信息被编码到最后一个字节&lt;/p&gt;

&lt;p&gt;最后一个字节前三个位用来存储整数区别于其他数据类型的标志以及符号位，第 4，5 个位用来存储整数的长度信息&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;非负整数的前三位&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;+-----------+
| 010x xxxx |  0x40
+-----------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;负整数的前三位&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;+-----------+
| 011x xxxx |  0x60
+-----------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;整数的长度信息被编码进第 4，5 位:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;+-----------+
| xxx0 0xxx |   64bits
+-----------+
+-----------+
| xxx0 1xxx |   8bits
+-----------+
+-----------+
| xxx1 0xxx |   16bits
+-----------+
+-----------+
| xxx1 1xxx |   32bits
+-----------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;除去最后一个字节，其他字节（如果编码后的数据是多个字节的话）的首位都是 1，最后一个字节存储整数数据类型信息，该字节首位是 0。这样设计，会给解码带来便利。&lt;/p&gt;

&lt;p&gt;最后一个字节的 3 个位，以及其他字节的 7 个位，用来储存整数的数值信息，如图：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;    7 bits                  3 bits
+-----------+...........+-----------+
| 1xxx xxxx | 1xxx xxxx | .... .xxx |
+-----------+...........+-----------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;整数的绝对值数值的二进制补码(Two&amp;#39;s Complement)，低位在前，高位在后，7 位一组，填充到这些编码位上。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// allocate buf&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 小于0x08的数值，编码到最后一个字节的后三位&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x80&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;1 编码后：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;+-----------+
| 0100 0001 |
+-----------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;-16 编码后：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;+-----------+-----------+
| 1001 0000 | 0110 0000 |  
+-----------+-----------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Blob&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;二进制流编码后的数据分成两部分，前一部分是原始数据的长度（字节数），后部分是二进制流原始数据。如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;+----------------+
| length + data  |  
+----------------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;原始数据的长度的编码和整数相似，但有两个地方不一样：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;编码到最后一个字节的 &lt;code&gt;Blob&lt;/code&gt; 的数据类型信息是 &lt;code&gt;0x10&lt;/code&gt;;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;最后一个字节有 4 个位可用来存储编码后的长度信息，对于整数，只有 3 个:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;              0x10 + 4bits
+...........+-----------+
| 1xxx xxxx | 0001 xxxx |
+...........+-----------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;编码后：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;                                     binary data
+-----------+...........+-----------+============+
| 1xxx xxxx | 1xxx xxxx | 0001 xxxx |    data    |
+-----------+...........+-----------+============+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;String&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;字符串数据的编码方式和 &lt;code&gt;Blob&lt;/code&gt; 一样，也是先编码长度，然后编码数据。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;字符串数据以及长度不包括 C 风格字符串中的结束字节。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;编码到长度数据最后一个字节的 &lt;code&gt;String&lt;/code&gt; 的数据类型信息是: &lt;code&gt;0x20&lt;/code&gt;，如下:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;              0x20 + 4 bits
+...........+-----------+
| 1xxx xxxx | 0010 xxxx |
+...........+-----------+

+-----------+...........+-----------+============+
| 1xxx xxxx | 1xxx xxxx | 0010 xxxx |    data    |
+-----------+...........+-----------+============+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Float&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;浮点数类型支持单精度和双精度。编码时，先编码这两种数据类型的类型信息到一个字节。然后再编码浮点数 &lt;code&gt;IEEE-754&lt;/code&gt; 标准表示的 32 位或 64 位数据。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;编码时高位在前。 &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;编码后，单精度浮点数占 5 个字节；双精度浮点数占 9 个字节，如下所示：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;  0x06        8 bytes
+-----------+===========+
| 0000 0110 |    data   |  双精度
+-----------+===========+

  0x07        4 bytes
+-----------+===========+
| 0000 0111 |    data   |  单精度
+-----------+===========+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;List&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;为了编码 &lt;code&gt;List&lt;/code&gt; 和 &lt;code&gt;Dictionary&lt;/code&gt; 数据类型，定义了一个特殊的字节，用来做闭合标志，如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;+-----------+
| 0000 0001 |   0x01
+-----------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;List&lt;/code&gt; 的数据类型信息编码成一个字节：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;+-----------+
| 0000 0010 |   0x02
+-----------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在编码时，第一个字节是类型信息，然后是每个子元素，最后是闭合字节：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;+-----------+
| 0000 0010 | List 类型信息字节
+-----------+----------------------------
|          元素 1                       
+----------------------------------------
|          元素 2                       
+----------------------------------------
.    .    .
.    .    .
.    .    .
+----------------------------------------
|          元素 N                       
+-----------+----------------------------
| 0000 0001 | 闭合字节
+-----------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Dictionary&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;和 &lt;code&gt;List&lt;/code&gt; 编码类似，&lt;code&gt;Dictionary&lt;/code&gt; 编码时先编码类型信息，&lt;code&gt;Dictionary&lt;/code&gt; 类型信息是：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;+-----------+
| 0000 0011 |   0x03
+-----------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;类型信息之后，是 &lt;code&gt;Dictionary&lt;/code&gt; 的每个键值对，最后是闭合字节：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;+-----------+
| 0000 0011 | 类型信息
+-----------+----------------------------
|            key 1   
+----------------------------------------
|          value 1
+----------------------------------------
|            key 2   
+----------------------------------------
|          value 2
+----------------------------------------
.    .    .
.    .    .
.    .    .
+----------------------------------------
|            key N   
+----------------------------------------
|          value N
+-----------+----------------------------
| 0000 0001 | 闭合字节
+-----------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;一些常量值定义&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;类型信息：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;BIN_TYPE_CLOSURE&lt;/span&gt;                &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;BIN_TYPE_LIST&lt;/span&gt;                   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x02&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;BIN_TYPE_DICT&lt;/span&gt;                   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x03&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;BIN_TYPE_BOOL&lt;/span&gt;                   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x04&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;     &lt;span class=&quot;cm&quot;&gt;/* 0000 0100 T */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;BIN_TYPE_BOOL_FALSE&lt;/span&gt;             &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x05&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;     &lt;span class=&quot;cm&quot;&gt;/* 0000 0101 F */&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;BIN_TYPE_FLOAT_DOUBLE&lt;/span&gt;           &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x06&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;     &lt;span class=&quot;cm&quot;&gt;/* 0010 0110   */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;BIN_TYPE_FLOAT_SINGLE&lt;/span&gt;           &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x07&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;     &lt;span class=&quot;cm&quot;&gt;/* 0000 0111   */&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;BIN_TYPE_NULL&lt;/span&gt;                   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x0f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;BIN_TYPE_BLOB&lt;/span&gt;                   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;     &lt;span class=&quot;cm&quot;&gt;/* 0001 xxxx   */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;BIN_TYPE_STRING&lt;/span&gt;                 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;     &lt;span class=&quot;cm&quot;&gt;/* 0010 xxxx   */&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;BIN_TYPE_INTEGER&lt;/span&gt;                &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;     &lt;span class=&quot;cm&quot;&gt;/* 010x xxxx + */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;BIN_TYPE_INTEGER_NEGATIVE&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;     &lt;span class=&quot;cm&quot;&gt;/* 011x xxxx - */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bin_type_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;整数子类型：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#define BIN_INTEGER_TYPE_64                 0x00 &amp;lt;&amp;lt; 3   &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// default implementation&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define BIN_INTEGER_TYPE_8                  0x01 &amp;lt;&amp;lt; 3&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define BIN_INTEGER_TYPE_16                 0x02 &amp;lt;&amp;lt; 3&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define BIN_INTEGER_TYPE_32                 0x03 &amp;lt;&amp;lt; 3&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#define BIN_INTEGER_SUBTYPE_MASK            0x03 &amp;lt;&amp;lt; 3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;实现&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;php 实现: &lt;a href=&quot;https://github.com/binpack/binpack-php&quot;&gt;https://github.com/binpack/binpack-php&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Java 实现: &lt;a href=&quot;https://github.com/binpack/binpack-java&quot;&gt;https://github.com/binpack/binpack-java&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;其他语言，TODO&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;性能&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  在 php 实现中，对比 msgpack，编码后两者数据量大小相等，但本编码方法所耗时间是前者是前者 3/4。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/binpack/binpack&quot;&gt;https://github.com/binpack/binpack&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Gridview 的错误用法及替代方案</title>
      <link>http://liaohuqiu.net/cn/posts/grid-view-do-not/</link>
      <pubDate>Sat, 15 Mar 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/grid-view-do-not</guid>
      <description>&lt;p&gt;九宫格是很常见的一种UI表现形式，当然根据实际情况，有可能是4宫格，6宫格之类的。&lt;/p&gt;

&lt;h3&gt;常规实现&lt;/h3&gt;

&lt;p&gt;这样的 &lt;code&gt;m x n&lt;/code&gt; 的表现形式，很容易让人想起用 GridView。但是数据项又不够多，不够翻页。&lt;/p&gt;

&lt;p&gt;有些能够滑动翻页的，是重写 &lt;code&gt;Gridview&lt;/code&gt; 的 &lt;code&gt;onMeasure&lt;/code&gt; 方法，设置一个很大的高度，然后外面包一层 &lt;code&gt;ScrollView&lt;/code&gt;。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;带来的问题&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;这样会导致 &lt;code&gt;GirdView&lt;/code&gt; 一次把全部列表项都加载完。&lt;code&gt;GirdView&lt;/code&gt; 设计的 View 复用的初衷就达不到了。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果列表项中有一个图片是后加载的，图片加载完后，&lt;code&gt;ImageView&lt;/code&gt; 会 &lt;code&gt;requestLayout()&lt;/code&gt;。这将会导致 &lt;code&gt;GridView&lt;/code&gt;绘制第一项。&lt;/p&gt;

&lt;p&gt;如果总共有 9 项。最坏的情况，首项将会被绘制 9 次甚至更多。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;替代方案&lt;/h3&gt;

&lt;p&gt;对于这样的应用场景，如果不需要复用 view 也没有翻页的需求，简单绘制每一项就可以了。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;从索引 0 开始绘制每一项，计算行列位置。根据行列位置以及行列间距，每项大小确定每个 view 的起始位置。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用 &lt;code&gt;RelativeLayout&lt;/code&gt; 做父容器，使用 margin 来偏移每项子元素。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设定每项使用 &lt;code&gt;RelativeLayout.LayoutParams&lt;/code&gt;，确定每项尺寸大小。尺寸状态都是 &lt;code&gt;EXACTLY&lt;/code&gt;.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;简要代码如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 总项数， 每项宽度和长度&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mBlockListAdpater&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mBlockListAdpater&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getBlockWidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mBlockListAdpater&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getBlockHeight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cloumnNum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mBlockListAdpater&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getCloumnNum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 水平间隔&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;horizontalSpacing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mBlockListAdpater&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getHorizontalSpacing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 垂直间隔&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;verticalSpacing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mBlockListAdpater&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getVerticalSpacing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;RelativeLayout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LayoutParams&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lyp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RelativeLayout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LayoutParams&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cloumnNum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cloumnNum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;top&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 计算偏移&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;horizontalSpacing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;top&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;verticalSpacing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 用 margin 来偏移&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lyp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setMargins&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 创建view&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mBlockListAdpater&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mLayoutInflater&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;addView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lyp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;在上面代码中，实际创建 view 是在 &lt;code&gt;BlockListAdapter&lt;/code&gt; 的 &lt;code&gt;getView()&lt;/code&gt; 完成的，这是和 &lt;code&gt;ListAdapter&lt;/code&gt; 类似的 Adapter，但是更简单。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;带来的好处

&lt;ol&gt;
&lt;li&gt; 简单可依赖，既然不用复用，那么就不用 AbsListView 的复用机制。继承于 &lt;code&gt;RelativeLayout&lt;/code&gt;，核心函数简单可靠。&lt;/li&gt;
&lt;li&gt; 效率提升，不使用复用机制，每个 view 只被创建一次。&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;例子&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Adapter&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;mBlockListAdapter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BlockListAdapter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ItemInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LayoutInflater&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;layoutInflater&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ItemInfo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemInfo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mBlockListAdapter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getItem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// 创建&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;LayoutInflater&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;inflate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;item_home&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// 业务相关代码&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;TextView&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;textView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TextView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findViewById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;tv_item_home_title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;

        &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ListView&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 设置水平距离和垂直距离，每项大小，列数&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mBlockListAdapter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setSpace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;horizontalSpacing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;verticalSpacing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mBlockListAdapter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setBlockSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mBlockListAdapter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setColumnNum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 关联 Adapte&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mBlockListView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setAdapter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mBlockListAdapter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 显示数据&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mBlockListAdapter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;displayBlocks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mItemInfos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;源码&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/etao-open-source/cube-sdk/blob/master/core/src/com/srain/cube/views/block/BlockListAdapter.java&quot;&gt;BlockListAdapter 源码&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/etao-open-source/cube-sdk/blob/master/core/src/com/srain/cube/views/block/BlockListView.java&quot;&gt;BlockListView 的源码&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/etao-open-source/cube-sdk/blob/master/sample-and-tests/src/com/srain/cube/sample/ui/fragment/HomeFragment.java&quot;&gt;例子的源码&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ListView / GirdView Adpater 的 getView 方法，首项多次调用</title>
      <link>http://liaohuqiu.net/cn/posts/first-view-will-be-created-multi-times-in-list-view/</link>
      <pubDate>Sat, 15 Mar 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/first-view-will-be-created-multi-times-in-list-view</guid>
      <description>&lt;p&gt;通过 Adapter 为 &lt;code&gt;AbslistView&lt;/code&gt; 提供内容是一个常见的做法：在 ListView 或者 GridView 的 Adapter 中的 &lt;code&gt;getView()&lt;/code&gt; 方法中，加入一行日志，看 &lt;code&gt;getView()&lt;/code&gt; 被调用的情况&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;convertView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ViewGroup&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cube_list&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;getView %s, %s&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;convertView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 创建&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;convertView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 
    &lt;span class=&quot;c1&quot;&gt;// 复用&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;问题表现&lt;/h3&gt;

&lt;p&gt;对于 ListView，我们使用如下的一个xml文件：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;RelativeLayout&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:android=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;match_parent&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;match_parent&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;ListView&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@+id/ly_image_list_small&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:divider=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@null&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:fadingEdge=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;none&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:listSelector=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@android:color/transparent&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:padding=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;10dp&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:scrollbarStyle=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;outsideOverlay&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/RelativeLayout&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;getView 方法返回的 view 含有一个网络图片，下载完成后，会导致重新绘制。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;运行程序，在 Logcat 中 &lt;strong&gt;&lt;em&gt;有可能&lt;/em&gt;&lt;/strong&gt; 会看到 &lt;code&gt;getView 0&lt;/code&gt; 会被打印出很多条。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;03-15 14:32:41.980    cube_list﹕ getView 0, true
03-15 14:32:41.980    cube_list﹕ getView 1, false
03-15 14:32:41.980    cube_list﹕ getView 2, false
03-15 14:32:41.990    cube_list﹕ getView 3, false
03-15 14:32:41.990    cube_list﹕ getView 4, false
03-15 14:32:41.990    cube_list﹕ getView 0, false
03-15 14:32:41.990    cube_list﹕ getView 1, false
03-15 14:32:41.990    cube_list﹕ getView 2, false
03-15 14:32:41.990    cube_list﹕ getView 3, false
03-15 14:32:41.990    cube_list﹕ getView 4, false
03-15 14:32:42.000    cube_list﹕ getView 0, false
03-15 14:32:42.010    cube_list﹕ getView 1, true
03-15 14:32:42.010    cube_list﹕ getView 2, true
03-15 14:32:42.010    cube_list﹕ getView 3, true
03-15 14:32:42.020    cube_list﹕ getView 4, true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;第一页之后，第 0 项不再被绘制，但 GridView 情况却糟糕多了, 滑动的过程，第 0 项还在不停被绘制。&lt;/strong&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;原因分析&lt;/h3&gt;

&lt;p&gt;起因：类似这样的情况，都是加入了列表项之后，列表项自身的一些操作，比如加入图片，导致整个 view 重新绘制。在重新绘制的过程中，onMeasure 方法会创建出列表项来确定大小。&lt;/p&gt;

&lt;h4&gt;ListView&lt;/h4&gt;

&lt;p&gt;在&lt;code&gt;onMeasure()&lt;/code&gt;时：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; 如果宽度或者高度的状态为 UNSPECIFIED, 会多次绘制列表首项，直到大小确定为止。&lt;/li&gt;
&lt;li&gt; 如果高度的状态为 AT_MOST, 会绘制多个列表项进行确定大小。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;主要代码如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onMeasure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;widthMeasureSpec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;heightMeasureSpec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onMeasure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;widthMeasureSpec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;heightMeasureSpec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;widthMode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MeasureSpec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;widthMeasureSpec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;heightMode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MeasureSpec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;heightMeasureSpec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// ViewMode 处于 UNSPECIFIED 状态，绘制首项来确定大小&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mItemCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mAdapter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mAdapter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mItemCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;widthMode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MeasureSpec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;UNSPECIFIED&lt;/span&gt; 
        &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;heightMode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MeasureSpec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;UNSPECIFIED&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// getView(0)&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;child&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obtainView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mIsScrap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// other code&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// other code&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// AT_MOST 状态，绘制多个列表项以确定高度。&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;heightMode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MeasureSpec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;AT_MOST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// 会调用多个getView，这些view将不会被复用&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;heightSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;measureHeightOfChildren&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;widthMeasureSpec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; 
                &lt;span class=&quot;n&quot;&gt;NO_POSITION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;heightSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// other code&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;解决方案：&lt;/h4&gt;

&lt;p&gt;如果 &lt;code&gt;ListView&lt;/code&gt; 大小未决，则会绘制列表项，以确定自身大小。让 &lt;code&gt;ListView&lt;/code&gt; 大小处于 &lt;code&gt;EXACTLY&lt;/code&gt; 状态即可。&lt;/p&gt;

&lt;p&gt;根据 &lt;a href=&quot;http://www.liaohuqiu.net/cn/posts/how-does-android-caculate-the-size-of-child-view/&quot;&gt;Android中 View 大小的确定过程&lt;/a&gt;，所描述：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; 如果 ListView 父容器大小确定，设置尺寸为 &lt;code&gt;match_parent&lt;/code&gt; 不会出现此问题。&lt;/li&gt;
&lt;li&gt; 不管父容器什么状态，&lt;code&gt;ListView&lt;/code&gt; 大小为确定数值不会出现此问题。&lt;/li&gt;
&lt;/ol&gt;

&lt;hr&gt;

&lt;h3&gt;GirdView&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;GridView&lt;/code&gt;看起来比较无解，每次&lt;code&gt;onMeasure()&lt;/code&gt;都会导致列表首项被绘制。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onMeasure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;widthMeasureSpec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;heightMeasureSpec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// other code&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;mItemCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mAdapter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mAdapter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mItemCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;child&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obtainView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mIsScrap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;只要重新确定大小，首项就一定会被重绘，这个是非常险恶的。从 &lt;code&gt;onMeasure&lt;/code&gt; 的实现来看，几乎无法避免，只能从业务方入手。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;如果是类似九宫格的应用场景，这里有一个解决方案。&lt;a href=&quot;http://www.liaohuqiu.net/cn/posts/grid-view-do-not/&quot;&gt;Gridview的错误用法及替代方案&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;一定有翻屏的需求，可用 ListView 代替。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;釜底抽薪，让列表项不要求重绘。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>SQLite 使用参考: 唯一索引，分页，清空表</title>
      <link>http://liaohuqiu.net/cn/posts/sqlite-tips/</link>
      <pubDate>Fri, 14 Mar 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/sqlite-tips</guid>
      <description>&lt;h3&gt;需求&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt; Android 中的 Sqlite&lt;/li&gt;
&lt;li&gt; 保存用户看过的书，isbn, title, read_time，多次看记录最后一次看的时间。&lt;/li&gt;
&lt;li&gt; ListView 时间从新到旧显示，记录可能有很多，有翻页。&lt;/li&gt;
&lt;li&gt; 可清除所有历史记录&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;数据库设计&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt; id 主键，自增长&lt;/li&gt;
&lt;li&gt; isbn 唯一键，记录重复，更新 read_time&lt;/li&gt;
&lt;li&gt; read_time 索引。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s_read_books&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;integer&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;primary&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;autoincrement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;isbn&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;read_time&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;unique&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isbn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CONFLICT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;REPLACE&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INDEX&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s_read_books_time&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s_read_books&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;数据写入&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s_read_books&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;read_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;数据更新，也用上个语句，重复则更新。&lt;/p&gt;

&lt;h3&gt;分页&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;limit num, offset&lt;/code&gt; 在 sqlite，还是会全部读出数据，所以分页不用 offset。
&lt;code&gt;read_time&lt;/code&gt;有索引，分页操作，根据之前的 &lt;code&gt;read_time&lt;/code&gt; 用做条件筛选。&lt;/p&gt;

&lt;p&gt;首次&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s_read_books&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;read_time&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;desc&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num_per_page&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;分页&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s_read_books&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;read_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;last_read_time&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;read_time&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;desc&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num_per_page&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;清空表&lt;/h3&gt;

&lt;p&gt;Sqlite 不支持 &lt;code&gt;truncate&lt;/code&gt;，可用 &lt;code&gt;DELETE&lt;/code&gt; 代替。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s_read_books&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;但是效率更高的做法是，drop 掉表，然后重建。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s_read_books&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>How Android caculates view size</title>
      <link>http://liaohuqiu.net/posts/how-does-android-caculate-the-size-of-child-view/</link>
      <pubDate>Fri, 14 Mar 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/posts/how-does-android-caculate-the-size-of-child-view</guid>
      <description>&lt;h3&gt;View and ViewGroup&lt;/h3&gt;

&lt;p&gt;There are five basic &lt;code&gt;ViewGroup&lt;/code&gt; in Android:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  FrameLayout&lt;/li&gt;
&lt;li&gt;  RelativeLayout&lt;/li&gt;
&lt;li&gt;  LinearLayout&lt;/li&gt;
&lt;li&gt;  TableLayout&lt;/li&gt;
&lt;li&gt;  AbsoluteLayout&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;code&gt;ViewGroup&lt;/code&gt; can contains children views:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;RelativeLayout&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;match_parent&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;100dp&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;TextView&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;match_parent&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;ImageView&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;match_parent&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;20dp&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/RelativeLayout&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;How big the child view want to be&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;LayoutParams&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We use &lt;code&gt;LayoutParams&lt;/code&gt; to describe how big a view will be both width and height. For each dimension, its data type is &lt;code&gt;int&lt;/code&gt; and it can specify one of:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;FILL_PARENT&lt;/code&gt; / &lt;code&gt;MATCH_PARENT&lt;/code&gt;, the value is &lt;code&gt;-1&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Make the view as big as its parent, &lt;strong&gt;minus padding&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;WRAP_CONTENT&lt;/code&gt;, the value is &lt;code&gt;-2&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Make the view just be big enough to enclose its content, &lt;strong&gt;plus padding&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;An exact number, not lower than 0.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;How big the parent view is&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Padding&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The space between the real size and the content of the view.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;MeasureSpec&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When parent view try to figure out the size of its children, it must tell the child the size information of itself.&lt;/p&gt;

&lt;p&gt;The size of child view  will be under different constraint when parent view is in different view mode, there are 3 view modes:&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;parent&lt;/th&gt;
&lt;th&gt;child&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;UNSPECIFIED&lt;/td&gt;
&lt;td&gt;The parent has not imposed any constraint on the child. It can be whatever size it wants.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;EXACTLY&lt;/td&gt;
&lt;td&gt;The parent has determined an exact size for the child. The child is going to be given those bounds regardless of how big it wants to be.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AT_MOST&lt;/td&gt;
&lt;td&gt;The child can be as large as it wants up to the specified size.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;size value and size mode&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The data type of a dimension of size is &lt;code&gt;int&lt;/code&gt;, the length is 8 bytes.&lt;/p&gt;

&lt;p&gt;For the size vaule and size mode will be passed to child view from parent view, for reducing object allocation.&lt;/p&gt;

&lt;p&gt;The size mode information has been packed into the size value, ine the fist 2 bits in the first byte.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;UNSPECIFIED&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;+-----------+----------
| 00xx xxxx | The other 7 bytes.    0x00 &amp;lt;&amp;lt; 30 + value
+-----------+----------
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;EXACTLY&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;+-----------+----------
| 01xx xxxx | The other 7 bytes.    0x01 &amp;lt;&amp;lt; 30 + value
+-----------+----------
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;AT_MOST&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;+-----------+----------
| 10xx xxxx | The other 7 bytes.    0x02 &amp;lt;&amp;lt; 30 + value
+-----------+----------
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;How big the child will be&lt;/h3&gt;

&lt;p&gt;The parent has a size constraint and the children have their desire. So the negotiation begins:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Acroding accroding parent&amp;#39;s size constraint and children&amp;#39;s LayoutParams, parent view can figure out the view size and view mode of its children.&lt;/p&gt;

&lt;p&gt;Then the parent will reqiure the children view to measure itself, by calling child&amp;#39;s &lt;code&gt;measure()&lt;/code&gt; method.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In the &lt;code&gt;onMeasure()&lt;/code&gt; method in the child view, acroding the size information given out by its parent, child view will decide the final view size of itself.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Acroding this final size of children views, parent view also can decide its final view size.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Factors should be taken into consideration:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  parent view modes:

&lt;ol&gt;
&lt;li&gt;EXACTLY&lt;/li&gt;
&lt;li&gt;AT_MOST&lt;/li&gt;
&lt;li&gt;UNSPECIFIED&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;  parent view size: &lt;code&gt;parentSize&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;parent padding:&lt;code&gt;parentPadding&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The content size of parent is &lt;code&gt;parentSize&lt;/code&gt; - &lt;code&gt;parentPadding&lt;/code&gt;, name it &lt;code&gt;parentContentSize&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;child LayoutParams:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; exact number, &lt;code&gt;childSize&lt;/code&gt;&lt;/li&gt;
&lt;li&gt; MATCH_PARENT&lt;/li&gt;
&lt;li&gt; WRAP_CONTENT&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;What should be settled:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  child view mode&lt;/li&gt;
&lt;li&gt;  child view size&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;The rule&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Parent view is in &lt;code&gt;EXACTLY&lt;/code&gt; view mode, it has imposed an exact size on its children&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;child layout&lt;/th&gt;
&lt;th&gt;mode&lt;/th&gt;
&lt;th&gt;size&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;exact size&lt;/td&gt;
&lt;td&gt;EXACTLY&lt;/td&gt;
&lt;td&gt;childSize&lt;/td&gt;
&lt;td&gt;Child wants a specific size.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MATCH_PARENT&lt;/td&gt;
&lt;td&gt;EXACTLY&lt;/td&gt;
&lt;td&gt;parentContentSize&lt;/td&gt;
&lt;td&gt;Child wants to be parent&amp;#39;s size.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;WRAP_CONTENT&lt;/td&gt;
&lt;td&gt;AT_MOST&lt;/td&gt;
&lt;td&gt;parentContentSize&lt;/td&gt;
&lt;td&gt;Child wants to determine its own size. It can not be bigger than parent.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Parent view is in &lt;code&gt;AT_MOST&lt;/code&gt; view mode, it has imposed a &lt;strong&gt;maximum&lt;/strong&gt; size on its children.&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;child layout&lt;/th&gt;
&lt;th&gt;mode&lt;/th&gt;
&lt;th&gt;size&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;exact size&lt;/td&gt;
&lt;td&gt;EXACTLY&lt;/td&gt;
&lt;td&gt;childSize&lt;/td&gt;
&lt;td&gt;Child wants a specific size&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MATCH_PARENT&lt;/td&gt;
&lt;td&gt;AT_MOST&lt;/td&gt;
&lt;td&gt;parentContentSize&lt;/td&gt;
&lt;td&gt;Child wants to be parent&amp;#39;s size, but parent&amp;#39;s size is not fixed. Constrain child to not be bigger than parent.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;WRAP_CONTENT&lt;/td&gt;
&lt;td&gt;AT_MOST&lt;/td&gt;
&lt;td&gt;parentContentSize&lt;/td&gt;
&lt;td&gt;Child wants to determine its own size, but it can not be bigger than parent.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Parent view is in &lt;code&gt;UNSPECIFIED&lt;/code&gt; view mode, it ask to see how big its children want to be.&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;child layout&lt;/th&gt;
&lt;th&gt;mode&lt;/th&gt;
&lt;th&gt;size&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;exact size&lt;/td&gt;
&lt;td&gt;EXACTLY&lt;/td&gt;
&lt;td&gt;childSize&lt;/td&gt;
&lt;td&gt;Child wants a specific size.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MATCH_PARENT&lt;/td&gt;
&lt;td&gt;UNSPECIFIED&lt;/td&gt;
&lt;td&gt;can not decide yet&lt;/td&gt;
&lt;td&gt;Child wants to be parent&amp;#39;s size. Child will decide its own size later.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;WRAP_CONTENT&lt;/td&gt;
&lt;td&gt;UNSPECIFIED&lt;/td&gt;
&lt;td&gt;can not decide yet&lt;/td&gt;
&lt;td&gt;Child wants to be its own size. Child will decide its own size later.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Android中 View 大小的确定过程</title>
      <link>http://liaohuqiu.net/cn/posts/how-does-android-caculate-the-size-of-child-view/</link>
      <pubDate>Fri, 14 Mar 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/how-does-android-caculate-the-size-of-child-view</guid>
      <description>&lt;h3&gt;View and ViewGroup&lt;/h3&gt;

&lt;p&gt;安卓中有5种基本的 &lt;code&gt;ViewGroup&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  FrameLayout&lt;/li&gt;
&lt;li&gt;  RelativeLayout&lt;/li&gt;
&lt;li&gt;  LinearLayout&lt;/li&gt;
&lt;li&gt;  TableLayout&lt;/li&gt;
&lt;li&gt;  AbsoluteLayout&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;ViewGroup&lt;/code&gt;可以添加子 View，在 xml 文件里面，我们可以这样写：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;RelativeLayout&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;match_parent&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;100dp&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;TextView&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;match_parent&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;ImageView&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;match_parent&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;20dp&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/RelativeLayout&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;子 View 的大小&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;LayoutParams&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;LayoutParams&lt;/code&gt; 用来描述一个View在父容器中大小，它包括了高度和宽度两个维度的信息，每个维度的数据类型都是 &lt;code&gt;int&lt;/code&gt;，取值是下面三种情况之一:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;FILL_PARENT&lt;/code&gt; / &lt;code&gt;MATCH_PARENT&lt;/code&gt;, 取值是 &lt;code&gt;-1&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;填充满父容器, &lt;strong&gt;minus padding&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;WRAP_CONTENT&lt;/code&gt;, 取值是 &lt;code&gt;-2&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;尺寸尽量小，能包住自身的全部内容就行, &lt;strong&gt;plus padding&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;一个确定的尺寸，大于等于0的一个数值。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;父容器的大小状态&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Padding&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;留白。自身内容的大小加上留白就是父容器的内容的真正大小。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;MeasureSpec&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;当父容器要确定子 View 的大小的时候，父容器需要告诉子 View 自身的大小状态。当父容器所属的大小状态不同时，对子 View 的尺寸约束是不一样的。父容器大小状态有下面三种情况：&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;parent&lt;/th&gt;
&lt;th&gt;child&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;UNSPECIFIED&lt;/td&gt;
&lt;td&gt;父容器对子View没有任何约束，子 View 可以按自身需要，任意大小。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;EXACTLY&lt;/td&gt;
&lt;td&gt;父容器大小是一个确定的数值，子 View 只能限定在指定大小内。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AT_MOST&lt;/td&gt;
&lt;td&gt;父容器本身以及内含的所有子 View 大小不能超过指定大小。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;View 的尺寸大小和尺寸状态&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;尺寸大小的数据类型是 &lt;code&gt;int&lt;/code&gt;, 8 个字节。&lt;/p&gt;

&lt;p&gt;尺寸大小和尺寸状态在很多时候需要一起传递，为了减少对象的分配，把三种尺寸状态编码到尺寸大小 &lt;code&gt;int&lt;/code&gt; 变量的最高位2个位中。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;UNSPECIFIED&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;+-----------+----------
| 00xx xxxx | 剩余的7个字节.    0x00 &amp;lt;&amp;lt; 30 + value
+-----------+----------
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;EXACTLY&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;+-----------+----------
| 01xx xxxx | 剩余的7个字节.    0x01 &amp;lt;&amp;lt; 30 + value
+-----------+----------
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;AT_MOST&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;+-----------+----------
| 10xx xxxx | 剩余的7个字节.    0x10 &amp;lt;&amp;lt; 30 + value
+-----------+----------
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;子 View 尺寸的最终确定&lt;/h3&gt;

&lt;p&gt;子 View 有一个期望的尺寸大小，父容器有尺寸大小约束，这两方面的约束协调，用来计算 View 的大小状态。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;根据父容器的尺寸状态，以及子 View 的 &lt;code&gt;LayoutParams&lt;/code&gt;，可以确定子 View 的大小和状态：&lt;code&gt;MeasureSpec&lt;/code&gt;，并要求子 View 确定自身大小。&lt;/p&gt;

&lt;p&gt;调用子 View 的 &lt;code&gt;measure()&lt;/code&gt; 方法，子 View 的 &lt;code&gt;onMeasure()&lt;/code&gt; 方法也会被执行。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;子 View 在 &lt;code&gt;onMeasure()&lt;/code&gt; 方法中，根据父容器给出的尺寸大小和约束，根据自身情况，确定最终的大小。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;父容器根据子 View 的确定的大小，最终确定自身大小。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;需要考虑的因素&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  父容器的尺寸状态:

&lt;ol&gt;
&lt;li&gt;EXACTLY&lt;/li&gt;
&lt;li&gt;AT_MOST&lt;/li&gt;
&lt;li&gt;UNSPECIFIED&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;  父容器的尺寸大小: &lt;code&gt;parentSize&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;父容器的留白:&lt;code&gt;parentPadding&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;父容器真正内容的大小是： &lt;code&gt;parentSize&lt;/code&gt; - &lt;code&gt;parentPadding&lt;/code&gt;, 用变量 &lt;code&gt;parentContentSize&lt;/code&gt; 代替。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;子 View 的 LayoutParams:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; 确定的数值, &lt;code&gt;childSize&lt;/code&gt;&lt;/li&gt;
&lt;li&gt; MATCH_PARENT&lt;/li&gt;
&lt;li&gt; WRAP_CONTENT&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;需要确定的&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  子 View 的大小状态&lt;/li&gt;
&lt;li&gt;  子 View 的尺寸大小&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;尺寸确定的规则&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;父容器的大小状态处于 &lt;code&gt;EXACTLY&lt;/code&gt; 状态时, 子容器限定在这个大小。&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;child layout&lt;/th&gt;
&lt;th&gt;mode&lt;/th&gt;
&lt;th&gt;size&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;确定的大小&lt;/td&gt;
&lt;td&gt;EXACTLY&lt;/td&gt;
&lt;td&gt;childSize&lt;/td&gt;
&lt;td&gt;子 View 大小可以是自身大小，后期再做确定。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MATCH_PARENT&lt;/td&gt;
&lt;td&gt;EXACTLY&lt;/td&gt;
&lt;td&gt;parentContentSize&lt;/td&gt;
&lt;td&gt;父容器多大，子 View 就可以多大。大小为父容器大小。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;WRAP_CONTENT&lt;/td&gt;
&lt;td&gt;AT_MOST&lt;/td&gt;
&lt;td&gt;parentContentSize&lt;/td&gt;
&lt;td&gt;最大尺寸为父容器尺寸，本身内容不能超过和父容器尺寸。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;父容器尺寸处于&lt;code&gt;AT_MOST&lt;/code&gt;状态时, 子 View 尺寸不能超过这个尺寸。&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;child layout&lt;/th&gt;
&lt;th&gt;mode&lt;/th&gt;
&lt;th&gt;size&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;确定的大小&lt;/td&gt;
&lt;td&gt;EXACTLY&lt;/td&gt;
&lt;td&gt;childSize&lt;/td&gt;
&lt;td&gt;子 View 的大小可以为自身的大小。后期再做确定&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MATCH_PARENT&lt;/td&gt;
&lt;td&gt;AT_MOST&lt;/td&gt;
&lt;td&gt;parentContentSize&lt;/td&gt;
&lt;td&gt;父容器大小未确定，但子容器想要和父容器一定大。那么确定子 View 最大可以和父容器一样大。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;WRAP_CONTENT&lt;/td&gt;
&lt;td&gt;AT_MOST&lt;/td&gt;
&lt;td&gt;parentSize&lt;/td&gt;
&lt;td&gt;子 View 需要确定自己的尺寸，最大不超过父容器大小。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;父容器处于 &lt;code&gt;UNSPECIFIED&lt;/code&gt; 状态，需要根据子 View 的最终大小来确定自己状态。&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;child layout&lt;/th&gt;
&lt;th&gt;mode&lt;/th&gt;
&lt;th&gt;size&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;确定的大小&lt;/td&gt;
&lt;td&gt;EXACTLY&lt;/td&gt;
&lt;td&gt;childSize&lt;/td&gt;
&lt;td&gt;子 View 尺寸为一个确定大小.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MATCH_PARENT&lt;/td&gt;
&lt;td&gt;UNSPECIFIED&lt;/td&gt;
&lt;td&gt;待定&lt;/td&gt;
&lt;td&gt;子 view 根据自身情况，确定大小。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;WRAP_CONTENT&lt;/td&gt;
&lt;td&gt;UNSPECIFIED&lt;/td&gt;
&lt;td&gt;待定&lt;/td&gt;
&lt;td&gt;子 View 根据自身情况，确定大小。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Truncate talbe in SQLite</title>
      <link>http://liaohuqiu.net/posts/truncate-table-in-sqlite/</link>
      <pubDate>Thu, 13 Mar 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/posts/truncate-table-in-sqlite</guid>
      <description>&lt;p&gt;Sqlite doesn&amp;#39;t have a &lt;code&gt;truncate&lt;/code&gt; command, we can use &lt;code&gt;DELETE&lt;/code&gt; command.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;DELETE FROM table_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, it is much more efficient to drop the table and recreate it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SQLite 清空数据库表</title>
      <link>http://liaohuqiu.net/cn/posts/truncate-table-in-sqlite/</link>
      <pubDate>Thu, 13 Mar 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/truncate-table-in-sqlite</guid>
      <description>&lt;p&gt;Sqlite 不支持&lt;code&gt;truncate&lt;/code&gt;，可用 &lt;code&gt;DELETE&lt;/code&gt;代替。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;DELETE FROM table_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;但是效率更高的做法是，drop 掉表，然后重建。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>setTimeout 和 setTimeInterval 的本质区别</title>
      <link>http://liaohuqiu.net/cn/posts/settimeout-or-settimeinterval/</link>
      <pubDate>Thu, 06 Mar 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/settimeout-or-settimeinterval</guid>
      <description>&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/729921/settimeout-or-setinterval&quot;&gt;http://stackoverflow.com/questions/729921/settimeout-or-setinterval&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>一花一世界: Android 中细小组件的生命周期</title>
      <link>http://liaohuqiu.net/cn/posts/android-lifecycle-component/</link>
      <pubDate>Wed, 05 Mar 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/android-lifecycle-component</guid>
      <description>&lt;h3&gt;定义&lt;/h3&gt;

&lt;p&gt;我们知道，在Android中，&lt;code&gt;Activity&lt;/code&gt;有生命周期，&lt;code&gt;Fragement&lt;/code&gt;也有生命周期，在他们不同的生命周期阶段，我们需要处理不同的事情。&lt;/p&gt;

&lt;p&gt;举一个典型的例子：有一个&lt;code&gt;Activity&lt;/code&gt;, 内含一个图片下载组件(称为&lt;code&gt;ImageLoader&lt;/code&gt;)用来处理图片的下载和显示:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;onStop()&lt;/code&gt; 停止一些正在进行的任务, 比如正在下载一张图片, 这个时候应该停止了 &lt;code&gt;stopLoadImage()&lt;/code&gt;;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;onRestart()&lt;/code&gt; 继续之前停止的任务，比如继续下载或者重新下载之前未下载完的图片;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;onDestory()&lt;/code&gt;，处理资源释放。比如有图片未下载完，还在任务队列中，任务队列清空。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;一般的处理方法，重写&lt;code&gt;Activity&lt;/code&gt;的上面几个方法，处理对应的逻辑，比如在 &lt;code&gt;onStop()&lt;/code&gt;方法中:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onStop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mImageLoader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stopLoadImage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然而，实际在这样的情景下&lt;code&gt;ImageLoader&lt;/code&gt;也是和&lt;code&gt;Activity&lt;/code&gt;一样，他本身是有着生命周期的。&lt;/p&gt;

&lt;p&gt;正所谓：&lt;code&gt;一花一世界，一草一精神&lt;/code&gt;。在生命周期的各个阶段，&lt;code&gt;ImageLoader&lt;/code&gt;很清楚地知道应该做哪些事情。&lt;/p&gt;

&lt;p&gt;这些事情是&lt;code&gt;ImageLoader&lt;/code&gt;自发去做的，而不是交由外界控制的。&lt;/p&gt;

&lt;p&gt;这就好像，到了冬天的时候，由自己的感觉决定是否穿秋裤，而不是你妈觉得到了冬天了你冷，让你穿你就得穿。&lt;/p&gt;

&lt;p&gt;上面示例代码中的&lt;code&gt;ImageLoader&lt;/code&gt;是人生不完整的，他在生命中的关键阶段，不能把握自己的命运。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;He is walking in others shoes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;……好的，现在让我们回到我们的讨论的生命周期上来。&lt;/p&gt;

&lt;p&gt;我们对生命周期进行一个定义，在Andriod中，应该是这样的：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LifeCycleComponent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onRestart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onPause&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onResume&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onStop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onDestroy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;任何一个有生命周期行为的组件，都有以上的行为，这个就是&lt;code&gt;Ineterface&lt;/code&gt;最朴素的意义：抽象，封装变化。&lt;/p&gt;

&lt;p&gt;一个有着完整人生的真正的&lt;code&gt;ImageLoader&lt;/code&gt;应该是这样的:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ImageLoaderWithLife&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LifeCycleComponent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onStop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;stopLoadImage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在生命周期&lt;code&gt;onStop()&lt;/code&gt;触发时，停止图片下载。&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;生命周期控制&lt;/h3&gt;

&lt;p&gt;现在，&lt;code&gt;ImageLoader&lt;/code&gt;掌握了自己的人生。他已经不是一个普通的&lt;code&gt;ImageLoader&lt;/code&gt;了，而是：&lt;code&gt;ImageLoaderWithLife&lt;/code&gt;。&lt;/p&gt;

&lt;h4&gt;LifeCycleComponentManager&lt;/h4&gt;

&lt;p&gt;但终归是生命体。犹如自然界中，四季交替，百草生长繁荣又枯萎凋零——任何一个生命体都会经历生老病死的过程。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;冥冥之中，自有主宰&lt;/code&gt;，这个东西就是&lt;code&gt;LifeCycleComponentManager&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LifeCycleComponentManager&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IComponentContainer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WeakReference&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LifeCycleComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mComponentList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LifeCycleComponentManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mComponentList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WeakReference&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LifeCycleComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;


    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onStop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Iterator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Entry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WeakReference&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LifeCycleComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 
            &lt;span class=&quot;n&quot;&gt;mComponentList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;entrySet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;iterator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hasNext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;LifeCycleComponent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;component&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onStop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onRestart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Iterator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Entry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WeakReference&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LifeCycleComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 
            &lt;span class=&quot;n&quot;&gt;mComponentList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;entrySet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;iterator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hasNext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;LifeCycleComponent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;component&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onRestart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;addComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LifeCycleComponent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;component&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;mComponentList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; 
                &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WeakReference&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LifeCycleComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;tryAddComponentToContainer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LifeCycleComponent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IComponentContainer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IComponentContainer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;IllegalArgumentException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;quot;context should impletemnts IComponentContainer&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;宿主&lt;/h4&gt;

&lt;p&gt;在上面，有一个&lt;code&gt;IComponentContainer&lt;/code&gt;, 这定义了宿主的行为，能容纳&lt;code&gt;LifeCycleComponent&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;public interface IComponentContainer {
    public void addComponent(LifeCycleComponent component);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;和Activity结合使用&lt;/h4&gt;

&lt;p&gt;在&lt;code&gt;Activity&lt;/code&gt;这个环境中，我们用&lt;code&gt;LifeCycleComponentManager&lt;/code&gt;控制着属于这个&lt;code&gt;Activity&lt;/code&gt;的各个组件的生命周期:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;XActivity&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Activity&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IComponentContainer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LifeCycleComponentManager&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mComponentContainer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LifeCycleComponentManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onRestart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onRestart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mComponentContainer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onRestart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onResume&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onResume&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mComponentContainer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onResume&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onStop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onStop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mComponentContainer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onStop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onDestroy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onDestroy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mComponentContainer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onDestroy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;addComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LifeCycleComponent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mComponentContainer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;用法&lt;/h4&gt;

&lt;p&gt;一般应用场景: 在一个列表页面，&lt;code&gt;Activity&lt;/code&gt;含有一个&lt;code&gt;Adapter&lt;/code&gt;, 其中有一个&lt;code&gt;ImageLoader&lt;/code&gt;, 负责图像加载, 并将&lt;code&gt;Activity&lt;/code&gt;作为&lt;code&gt;Context&lt;/code&gt;持有。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;h5&gt;Don&amp;#39;t&lt;/h5&gt;

&lt;p&gt;实际调用&lt;code&gt;ImageLoader&lt;/code&gt;的&lt;code&gt;stopLoadImage()&lt;/code&gt;方法的不是&lt;code&gt;Activity&lt;/code&gt;, 而是在这个&lt;code&gt;Adapter&lt;/code&gt;内部。然后&lt;code&gt;Adapter&lt;/code&gt;公开一个方法，由&lt;code&gt;Activity&lt;/code&gt;调用。&lt;/p&gt;

&lt;p&gt;当然我也见过将&lt;code&gt;ImageLoader&lt;/code&gt;做成&lt;code&gt;Activity&lt;/code&gt;的成员，然后公开给&lt;code&gt;Adapter&lt;/code&gt;访问的。&lt;/p&gt;

&lt;p&gt;对于这样的做法，我想说的是，还不如把所有代码写在一个类里面得了，这样耦合会更强烈一点。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;h5&gt;推荐做法&lt;/h5&gt;

&lt;p&gt;创建一个&lt;code&gt;ImageLoader&lt;/code&gt;, 然后和&lt;code&gt;Context&lt;/code&gt;关联:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;mImageLoader&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ImageLoader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;LifeCycleComponentManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;tryAddComponentToContainer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mImageLoader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;非常简单。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h3&gt;为什么不是ActivityLifecycleCallbacks&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;public interface ActivityLifecycleCallbacks {
    void onActivityCreated(Activity activity, Bundle savedInstanceState);
    void onActivityStarted(Activity activity);
    void onActivityResumed(Activity activity);
    void onActivityPaused(Activity activity);
    void onActivityStopped(Activity activity);
    void onActivitySaveInstanceState(Activity activity, Bundle outState);
    void onActivityDestroyed(Activity activity);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在&lt;code&gt;Application&lt;/code&gt;中注册一个&lt;code&gt;ActivityLifecycleCallbacks&lt;/code&gt;, 在这个回调中处理各个&lt;code&gt;Activity&lt;/code&gt;生命周期的统一逻辑。&lt;/p&gt;

&lt;p&gt;这个设计更关注的是&lt;code&gt;Activity&lt;/code&gt;生命周期，而不是其内在的组件的生命周期。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Jekyll Plugins and Github Pages</title>
      <link>http://liaohuqiu.net/posts/jekyll-plugins-on-github-pages/</link>
      <pubDate>Mon, 03 Mar 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/posts/jekyll-plugins-on-github-pages</guid>
      <description>&lt;h4&gt;First of all:&lt;/h4&gt;

&lt;p&gt;Github Pages works in &lt;code&gt;safe mode&lt;/code&gt; in which most of the Jekyll plugins can not work.&lt;/p&gt;

&lt;p&gt;So &lt;strong&gt;&lt;em&gt;we can not use Jekyll plugins on github pages&lt;/em&gt;&lt;/strong&gt;, even you have marked it to &lt;code&gt;safe&lt;/code&gt;. If you have tried, you will know.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We must use the other way:&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Build the site content locally, then push the content to Github.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;h3&gt;Solution&lt;/h3&gt;

&lt;p&gt;If we do not use plugins, we only need a branch:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;gh-pages&lt;/code&gt; for project page.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;or &lt;code&gt;master&lt;/code&gt; for Person or Organization Page. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We push the origin document, Github will build them into &lt;code&gt;Site Content&lt;/code&gt; into the destiantion directory.&lt;/p&gt;

&lt;p&gt;Now we need another branch for the origin destiantion, for example: &lt;code&gt;docs&lt;/code&gt;.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Build locally&lt;/p&gt;

&lt;p&gt;We build the site content in &lt;code&gt;docs&lt;/code&gt; branch into the description directory, for example, &lt;code&gt;_site&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git checkout docs
&lt;span class=&quot;c&quot;&gt;# some other code&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# commit&lt;/span&gt;
git commit -a -m &lt;span class=&quot;s1&quot;&gt;&amp;#39;udpate content&amp;#39;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# build&lt;/span&gt;
jekyll build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Please remember add &lt;code&gt;_site&lt;/code&gt; to &lt;code&gt;.gitignore&lt;/code&gt; and commit the changes in &lt;code&gt;docs&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Push &lt;/p&gt;

&lt;p&gt;Checkout &lt;code&gt;ph-pages&lt;/code&gt; or &lt;code&gt;master&lt;/code&gt;, remove the old content, copy the content in &lt;code&gt;_site&lt;/code&gt; to the root directory of the repositor.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git checkout gh-pages
ls | grep -v _site|xargs rm -rf
cp -r _site/* .
rm -rf _site/
touch .nojekyll

# commit
git commit -a -m &amp;#39;update content&amp;#39;

git push --all origin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The take away:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/liaohuqiu/work-anywhere/blob/master/tools/publish-gh-pages.sh&quot;&gt;publish-gh-pages.sh&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; exe_cmd&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$# &lt;/span&gt;-lt &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Usage: sh $0 [ gh-pages | master ]&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;branch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; -z &lt;span class=&quot;s2&quot;&gt;&amp;quot;$branch&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$branch&amp;quot;&lt;/span&gt; !&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;master&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;branch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;gh-pages&amp;#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;

exe_cmd &lt;span class=&quot;s2&quot;&gt;&amp;quot;jekyll build&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; ! -d &lt;span class=&quot;s1&quot;&gt;&amp;#39;_site&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;not content to be published&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;

exe_cmd &lt;span class=&quot;s2&quot;&gt;&amp;quot;git checkout $branch&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;error_code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$?&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$error_code&lt;/span&gt; !&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Switch branch fail.&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    ls &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; grep -v _site&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;xargs rm -rf
    exe_cmd &lt;span class=&quot;s2&quot;&gt;&amp;quot;cp -r _site/* .&amp;quot;&lt;/span&gt;
    exe_cmd &lt;span class=&quot;s2&quot;&gt;&amp;quot;rm -rf _site/&amp;quot;&lt;/span&gt;
    exe_cmd &lt;span class=&quot;s2&quot;&gt;&amp;quot;touch .nojekyll&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Jekyll 插件和 Github Pages</title>
      <link>http://liaohuqiu.net/cn/posts/jekyll-plugins-on-github-pages/</link>
      <pubDate>Mon, 03 Mar 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/jekyll-plugins-on-github-pages</guid>
      <description>&lt;h4&gt;First of all:&lt;/h4&gt;

&lt;p&gt;Github Pages works in &lt;code&gt;safe mode&lt;/code&gt; in which most of the Jekyll plugins can not work.&lt;/p&gt;

&lt;p&gt;So &lt;strong&gt;&lt;em&gt;we can not use Jekyll plugins on github pages&lt;/em&gt;&lt;/strong&gt;, even you have marked it to &lt;code&gt;safe&lt;/code&gt;. If you have tried, you will know.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We must use the other way:&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Build the site content locally, then push the content to Github.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;h3&gt;Solution&lt;/h3&gt;

&lt;p&gt;If we do not use plugins, we only need a branch:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;gh-pages&lt;/code&gt; for project page.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;or &lt;code&gt;master&lt;/code&gt; for Person or Organization Page. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We push the origin document, Github will build them into &lt;code&gt;Site Content&lt;/code&gt; into the destiantion directory.&lt;/p&gt;

&lt;p&gt;Now we need another branch for the origin destiantion, for example: &lt;code&gt;docs&lt;/code&gt;.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Build locally&lt;/p&gt;

&lt;p&gt;We build the site content in &lt;code&gt;docs&lt;/code&gt; branch into the description directory, for example, &lt;code&gt;_site&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git checkout docs
&lt;span class=&quot;c&quot;&gt;# some other code&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# commit&lt;/span&gt;
git commit -a -m &lt;span class=&quot;s1&quot;&gt;&amp;#39;udpate content&amp;#39;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# build&lt;/span&gt;
jekyll build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Please remember add &lt;code&gt;_site&lt;/code&gt; to &lt;code&gt;.gitignore&lt;/code&gt; and commit the changes in &lt;code&gt;docs&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Push &lt;/p&gt;

&lt;p&gt;Checkout &lt;code&gt;ph-pages&lt;/code&gt; or &lt;code&gt;master&lt;/code&gt;, remove the old content, copy the content in &lt;code&gt;_site&lt;/code&gt; to the root directory of the repositor.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git checkout gh-pages
ls | grep -v _site|xargs rm -rf
cp -r _site/* .
rm -rf _site/
touch .nojekyll

# commit
git commit -a -m &amp;#39;update content&amp;#39;

git push --all origin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The take away:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/liaohuqiu/work-anywhere/blob/master/tools/publish-gh-pages.sh&quot;&gt;publish-gh-pages.sh&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; exe_cmd&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$# &lt;/span&gt;-lt &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Usage: sh $0 [ gh-pages | master ]&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;branch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; -z &lt;span class=&quot;s2&quot;&gt;&amp;quot;$branch&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$branch&amp;quot;&lt;/span&gt; !&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;master&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;branch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;gh-pages&amp;#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;

exe_cmd &lt;span class=&quot;s2&quot;&gt;&amp;quot;jekyll build&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; ! -d &lt;span class=&quot;s1&quot;&gt;&amp;#39;_site&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;not content to be published&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;

exe_cmd &lt;span class=&quot;s2&quot;&gt;&amp;quot;git checkout $branch&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;error_code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$?&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$error_code&lt;/span&gt; !&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Switch branch fail.&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    ls &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; grep -v _site&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;xargs rm -rf
    exe_cmd &lt;span class=&quot;s2&quot;&gt;&amp;quot;cp -r _site/* .&amp;quot;&lt;/span&gt;
    exe_cmd &lt;span class=&quot;s2&quot;&gt;&amp;quot;rm -rf _site/&amp;quot;&lt;/span&gt;
    exe_cmd &lt;span class=&quot;s2&quot;&gt;&amp;quot;touch .nojekyll&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Install php imagick extension on CentOS</title>
      <link>http://liaohuqiu.net/posts/install-php-imagick-on-centos/</link>
      <pubDate>Mon, 03 Mar 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/posts/install-php-imagick-on-centos</guid>
      <description>&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Download souce code&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;wget http://pecl.php.net/get/imagick-3.1.2.tgz
tar xzfv imagick-3.1.2.tgz 
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;imagick-3.1.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install &lt;code&gt;ImageMagick-devel&lt;/code&gt; first.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;yum install ImageMagick-devel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Build&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;phpize
./configure --with-php-config&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/php/bin/php-config 
make
make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Copy &lt;code&gt;imagick.so&lt;/code&gt; to extension directory. &lt;/p&gt;

&lt;p&gt;If you do not know the path, find it out by (or change it in &lt;code&gt;php.ini&lt;/code&gt;):&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;php -i | grep &amp;quot;extension_dir&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, edit &lt;code&gt;php.ini&lt;/code&gt;, add &lt;code&gt;extension=imagick.so&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you run php in a webserver, restart the it, for example:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sudo service httpd restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Done.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr&gt;

&lt;p&gt;The motto:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Quick money is not the solution.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You must plan ahead.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You should see the bigger picture.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Work with git branches</title>
      <link>http://liaohuqiu.net/posts/work-with-git-branches/</link>
      <pubDate>Fri, 14 Feb 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/posts/work-with-git-branches</guid>
      <description>&lt;h1&gt;Branch&lt;/h1&gt;

&lt;h5&gt;create a branch, add some files, push to remote repository&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git branch branchName
echo &amp;quot;Some information&amp;quot; &amp;gt; test.txt
git add test.txt
git commit -m &amp;#39;add text.txt&amp;#39;
git push origin branchName
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;list all local branches&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git branch -a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;checkout remote branch&lt;/h5&gt;

&lt;p&gt;There is a branch named &lt;code&gt;dev&lt;/code&gt; in remote repository, you want to trace that:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git branch -b dev origin/dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;delete remote branch&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git push origin --delete &amp;lt;branchName&amp;gt;

git push origin :&amp;lt;branchName&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;delete local branch&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;// -d means --delete
git branch -d branchName

// force delete, even is not merged
git branch -D branchName
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h1&gt;Merge &amp;amp; Rebase&lt;/h1&gt;

&lt;p&gt;Here is a repository has a branch named &lt;code&gt;b1&lt;/code&gt;, it has some commits  &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;.
&lt;code&gt;
A -- B   [b1]
&lt;/code&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Local Case A:&lt;/p&gt;

&lt;p&gt;You check out b1, then do some work, your commit is &lt;code&gt;C&lt;/code&gt;, after your commit, your local repository will be:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;A -- B -- C      [b1]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Local Case B:&lt;/p&gt;

&lt;p&gt;You create branch b2 from b1, then commit.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;A -- B      [b1]
      \
       C    [b2]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Local Case C:&lt;/p&gt;

&lt;p&gt;You did nothing.
&lt;code&gt;
A -- B      [b1]
&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Remote Case A:&lt;/p&gt;

&lt;p&gt;At the same time, someone commited a change, namely commit &lt;code&gt;D&lt;/code&gt;, pushed the commit to repository server. &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;A -- B -- D         [remote b1]
      \
       ----- C      [local]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Remote Case B:&lt;/p&gt;

&lt;p&gt;No commit has been pushed to remote before you push commit &lt;code&gt;C&lt;/code&gt; to remote. The remote remains:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;A -- B   [b1]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ git st
# On branch develop
# Your branch and &amp;#39;origin/develop&amp;#39; have diverged,
# and have 1 and 2 different commit(s) each, respectively.
#
nothing to commit (working directory clean)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;git fetch&lt;/h5&gt;

&lt;p&gt;After &lt;code&gt;git fetch&lt;/code&gt;, your local repository will be one of the following status:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Case A: Local Case A + Remote Case B

A -- B      [b1]
      \
       C    [b1]

Case B: Local Case B + Remote Case B

A -- B      [b1]
      \
       C    [b2]

Case C: Local Case C + Remote Case A

        C   [b1 remote]
      /
A -- B      [b1,local]

Case D: Local Case A + Remote Case A

A -- B -- D             [b1]
      \
        ---- C          [b1]

Case E: Local Case A + Remote Case B

A -- B -- D             [b1]
      \
        --- C           [b2]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;what is &lt;code&gt;fast-forward&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;If the branch has not diverged, and &lt;code&gt;HEAD&lt;/code&gt; is behind, it can do &lt;code&gt;fast-forward&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If &lt;code&gt;git merge&lt;/code&gt; is called on a branch which can fast-forward, &lt;code&gt;fast-forward&lt;/code&gt; will be applied automatically&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git merge --ff-only origin/master&lt;/code&gt; will try to use &lt;code&gt;fast-forward&lt;/code&gt;, abort if fast-forward is not possible.&lt;/p&gt;

&lt;h5&gt;git merge in one branch&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ git merge
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After merged:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Case A: do nothing
Case B: do nothing
Case C: Fast-forward will be applied

        A -- B -- C      [b1,local/remote]


Case D: Merge, a new commit `E` will be created automatically.

        A -- B -- D --- E       [b1]
              \        /
                ---- C          [b1]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;git merge two branches&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ git merge origin/b1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After Merged:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Case E:
        A -- B ------ D         [b1]
              \        \
                -- C -- E       [b2]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;git pull&lt;/h5&gt;

&lt;p&gt;&lt;code&gt;git pull&lt;/code&gt; = &lt;code&gt;git fetch + git merge&lt;/code&gt;&lt;/p&gt;

&lt;h5&gt;git rebase in one branch&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# Case E
$ git rebase
A -- B ------- D        [b1,remote]
      \
        ------ D -- C1  [b1,local]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;git rebase in diffrent branches&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# Case F
$ git rebase origin/b1

A -- B ------- D        [b1,remote]
      \
        ------ D -- C1  [b2,local]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;git push force&lt;/h5&gt;

&lt;p&gt;Why?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Usually, the command refuses to update a remote ref that is not an ancestor of the local ref used to overwrite it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Case F, may need force push. If b2 has some pushed commits before &lt;code&gt;D&lt;/code&gt; and &lt;code&gt;C&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;         pushed
A -- B -..... --- D        [b1,remote]
      \
        -.... --- D -- C1  [b2,local]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ git push origin b2 -f
$ git push origin b2 --force
$ git push origin +b2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Git 日常分支操作</title>
      <link>http://liaohuqiu.net/cn/posts/work-with-git-branches/</link>
      <pubDate>Fri, 14 Feb 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/work-with-git-branches</guid>
      <description>&lt;p&gt;本文介绍日常中经常遇到的一些分支操作，并给出了详细解释。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;创建分支;&lt;/li&gt;
&lt;li&gt;删除分支;&lt;/li&gt;
&lt;li&gt;检出远程分支;&lt;/li&gt;
&lt;li&gt;git merge;&lt;/li&gt;
&lt;li&gt;git rebase;&lt;/li&gt;
&lt;li&gt;git force push;&lt;/li&gt;
&lt;li&gt;git fast-forward.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2&gt;分支简单操作&lt;/h2&gt;

&lt;h5&gt;最简单的用法&lt;/h5&gt;

&lt;p&gt;创建一个分支，添加文件，提交，推送。但是日常工作中往往比这个复杂得多。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git branch branchName
echo &amp;quot;Some information&amp;quot; &amp;gt; test.txt
git add test.txt
git commit -m &amp;#39;add text.txt&amp;#39;
git push origin branchName
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;列出所有分支&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git branch -a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;检出一个远程分支&lt;/h5&gt;

&lt;p&gt;远程有一个 &lt;code&gt;dev&lt;/code&gt; 分支，你想 check out 这个分支到本地：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git branch -b dev origin/dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;开发告一段落，你把远程一些没用的分支删除：&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git push origin --delete &amp;lt;branchName&amp;gt;

git push origin :&amp;lt;branchName&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;删除本地分支：&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;// -d 是 --delete 选项的短选项
git branch -d branchName

// 强制删除
git branch -D branchName
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h1&gt;Merge &amp;amp; Rebase&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;git pull&lt;/code&gt; 是非常笼统的一种操作，下面我们分析日常所有可能遇到的情况：&lt;/p&gt;

&lt;p&gt;假设代码库有一个分支 &lt;code&gt;b1&lt;/code&gt;, 当前有两次提交： &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;，如下：
&lt;code&gt;
A -- B   [b1]
&lt;/code&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;本地可能发生的操作 A:&lt;/p&gt;

&lt;p&gt;你检出 &lt;code&gt;b1&lt;/code&gt;，修改了代码，然后提交，生成一个提交：&lt;code&gt;C&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;A -- B -- C      [b1]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;本地可能的情况 B:&lt;/p&gt;

&lt;p&gt;你从&lt;code&gt;b1&lt;/code&gt;建了一个新的分支 &lt;code&gt;b2&lt;/code&gt;, 提交代码，生成一个提交：&lt;code&gt;C&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;A -- B      [b1]
      \
       C    [b2]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;本地可能的情况 C:&lt;/p&gt;

&lt;p&gt;本地代码无任何变动。嗯，这也算情况之一。
&lt;code&gt;
A -- B      [b1]
&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;现在让我们看看远程的集中情况&lt;/p&gt;

&lt;p&gt;远程情况 A:&lt;/p&gt;

&lt;p&gt;在提交代码的期间，有人推送代码到了分支&lt;code&gt;b1&lt;/code&gt;, 这个提交称为：&lt;code&gt;D&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;A -- B -- D         [remote b1]
      \
       ----- C      [local]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;远程情况 B:&lt;/p&gt;

&lt;p&gt;远程情况没任何变动。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;A -- B   [b1]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr&gt;

&lt;blockquote&gt;
&lt;p&gt;在上面，&lt;code&gt;A&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;D&lt;/code&gt;指代可以是一次提交，也可以是一系列提交。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;h5&gt;git fetch&lt;/h5&gt;

&lt;p&gt;现在你将远程变动取到本地，这时，本地代码库有可能以下几种情况：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Case A: 本地情况 A + 远程情况 B

A -- B      [b1]
      \
       C    [b1]

Case B: 本地情况 B + 远程情况 B

A -- B      [b1]
      \
       C    [b2]

Case C: 本地情况 C + 远程情况 A

        C   [b1 remote]
      /
A -- B      [b1,local]

Case D: 本地情况 A + 远程情况 A

A -- B -- D             [b1]
      \
        ---- C          [b1]

Case E: 本地情况 A + 远程情况 B

A -- B -- D             [b1]
      \
        --- C           [b2]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以上5种情况，就是我们日常中经常遇到的情况。&lt;/p&gt;

&lt;hr&gt;

&lt;h5&gt;什么是： &lt;code&gt;fast-forward&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;在 &lt;code&gt;git fetch&lt;/code&gt; 之后，如果本地分支和远程分支没有分叉，并且本地分支指向较旧脚本，那么，这个分支称为可以 &lt;code&gt;fast-forward&lt;/code&gt;;&lt;/p&gt;

&lt;p&gt;在 &lt;code&gt;fast-forward&lt;/code&gt;时，本地分支把指针指向最新的提交，并不会生成一个提交。&lt;/p&gt;

&lt;p&gt;如果分支可以 &lt;code&gt;fast-forward&lt;/code&gt;，执行 &lt;code&gt;git merge&lt;/code&gt;时，实际执行的是&lt;code&gt;fast-forward&lt;/code&gt;。如果不能，则合并，并自动产生一个提交。&lt;/p&gt;

&lt;p&gt;很多情况下，我们并不希望有这样的自动合并产生，因为他产生了一个自动提交，会让版本变得交叉，不清晰。&lt;/p&gt;

&lt;p&gt;我们希望，能 &lt;code&gt;fast-forward&lt;/code&gt; 就 &lt;code&gt;fast-forward&lt;/code&gt;, `，否则我们用rebase命令合并。可以这样：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git merge --ff-only origin/master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果不能 &lt;code&gt;fast-forward&lt;/code&gt;, merge 操作会终止。&lt;/p&gt;

&lt;hr&gt;

&lt;h5&gt;git merge 合并一个分支&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ git merge
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;操作之后：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Case A: 没变化
Case B: 没变化
Case C: fast-forward

        A -- B -- C      [b1,local/remote]


Case D: 合并，并且自动生成一个提交E

        A -- B -- D --- E       [b1]
              \        /
                ---- C          [b1]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;git merge 合并两个分支&lt;/h5&gt;

&lt;p&gt;当前在 &lt;code&gt;b2&lt;/code&gt; 上，合并远程 &lt;code&gt;b1&lt;/code&gt; 的改动，对应 Case E&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ git merge origin/b1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;合并之后 ：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Case E:
        A -- B ------ D         [b1]
              \        \
                -- C -- E       [b2]

                图1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;git pull&lt;/h5&gt;

&lt;p&gt;&lt;code&gt;git pull&lt;/code&gt; = &lt;code&gt;git fetch + git merge&lt;/code&gt;&lt;/p&gt;

&lt;h5&gt;git rebase&lt;/h5&gt;

&lt;p&gt;只有当一个分支出现分叉，或者在不同的分之间，git rebase 才有意义。命令格式：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git rebase 目标分支
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在git rebase时：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;把本地未推送的所有提交，放到暂存区。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;然后将本分支的指针指向目标分支最新提交，即改变本地分支的基础，简称&lt;code&gt;变基&lt;/code&gt;, 这个翻译真是太糟糕了。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;然后将暂存区的本地未推送的提交挨个应用回本分支。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h5&gt;同一个分支的 rebase&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# Case E
$ git rebase
A -- B ------- D        [b1,remote]
      \
        ------ D -- C1  [b1,local]

                图2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;先将本地的提交 &lt;code&gt;C&lt;/code&gt; 暂存，然后指向 &lt;code&gt;D&lt;/code&gt;, 应用 &lt;code&gt;C&lt;/code&gt;，&lt;code&gt;C&lt;/code&gt; 在 &lt;code&gt;D&lt;/code&gt; 之前，变成了 &lt;code&gt;C1&lt;/code&gt;。注意这个和上面 e&lt;code&gt;git merge&lt;/code&gt;（图1）的区别。&lt;/p&gt;

&lt;h5&gt;不同分支的 rebase&lt;/h5&gt;

&lt;p&gt;这其实和同一个分支类似，不过注意，不同分支 rebase 可能需要强制推送：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# Case F
$ git rebase origin/b1

A -- B ------- D        [b1,remote]
      \
        ------ D -- C1  [b2,local]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;强制推送: git push --force&lt;/h5&gt;

&lt;p&gt;为什么需要强制推送，官方文档：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Usually, the command refuses to update a remote ref that is not an ancestor of the local ref used to overwrite it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Case F, 如果&lt;code&gt;b2&lt;/code&gt;在 &lt;code&gt;D&lt;/code&gt; 和 &lt;code&gt;C&lt;/code&gt; 之前，有其他的提交已经推送到服务器了，则需要强制推送，因为他们是从 &lt;code&gt;B&lt;/code&gt; 开始分叉的。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;         pushed
A -- B -..... --- D        [b1,remote]
      \
        -.... --- D -- C1  [b2,local]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ git push origin b2 -f
$ git push origin b2 --force
$ git push origin +b2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Some tips for git setup and git config</title>
      <link>http://liaohuqiu.net/posts/git-setup-and-setting/</link>
      <pubDate>Thu, 13 Feb 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/posts/git-setup-and-setting</guid>
      <description>&lt;h1&gt;the ssh key&lt;/h1&gt;

&lt;h5&gt;generate ssh key&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;cd ~/.ssh/
ssh-keygen -t rsa -C &amp;quot;changeme@xxx.com&amp;quot; -f filename
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the options &lt;code&gt;f&lt;/code&gt; is not input, the file name of the public/pirvate rsa key pair files will be: id_rsa, id_rsa.pub.&lt;/p&gt;

&lt;h5&gt;add ssh key&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;ssh-add ~/.ssh/xxx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;list all added ssh key&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;ssh-add -l
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;you may run into this error when try &lt;code&gt;ssh-add&lt;/code&gt;:&lt;/h5&gt;

&lt;p class=&quot;alert alert-error&quot;&gt;Could not open a connection to your authentication agent.&lt;/p&gt;
   
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;eval `ssh-agent -s`
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;add ssh key permanently&lt;/h5&gt;

&lt;p&gt;Add the key path to &lt;code&gt;~/.ssh/config&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ vim ~/.ssh/config

IdentityFile ~/.ssh/gitHubKey
IdentityFile ~/.ssh/xxx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;git config&lt;/h1&gt;

&lt;h5&gt;global config &amp;amp; repository config&lt;/h5&gt;

&lt;p&gt;The global setting is stored in &lt;code&gt;~/.gitconfig&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The config of repository is stored in &lt;code&gt;./.git/config&lt;/code&gt;, in the repository directory.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git config --global&lt;/code&gt; will use global config, without &lt;code&gt;--global&lt;/code&gt; options will use try to use the config file &lt;code&gt;./git/config&lt;/code&gt; in current directory.&lt;/p&gt;

&lt;h5&gt;config user name &amp;amp; user email for every repository&lt;/h5&gt;

&lt;p&gt;You may work with multiple repositories, so it is a good practice to config user information for every repository.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# for global setting
git config --global user.name xxx
git config --global user.email xxx@xxx.com

# for repository
git config user.name xxxx
git config user.email xxxx@xxx.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;git alias&lt;/h5&gt;

&lt;p&gt;Setup alias for convenience.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;#git st =&amp;gt; git status
git config --global alias.st &amp;#39;status&amp;#39;

#git co =&amp;gt; git checkout
git config --global alias.co &amp;#39;checkout&amp;#39;

#git lg to view commit log like network graph
git config --global alias.lg &amp;quot;log --all --graph --pretty=format:&amp;#39;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%ci) %C(bold blue)&amp;lt;%an&amp;gt;%Creset&amp;#39; --abbrev-commit&amp;quot;

#... 
# whatever you like
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>命令行下的git配置问题: 多个 sshkey, 多个用户身份, git alias</title>
      <link>http://liaohuqiu.net/cn/posts/git-setup-and-setting/</link>
      <pubDate>Thu, 13 Feb 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/git-setup-and-setting</guid>
      <description>&lt;h2&gt;ssh key&lt;/h2&gt;

&lt;h5&gt;生成sshkey&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;cd ~/.ssh/
ssh-keygen -t rsa -C &amp;quot;changeme@xxx.com&amp;quot; -f filename
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果没有指定 &lt;code&gt;f&lt;/code&gt; 选项或者 &lt;code&gt;f&lt;/code&gt; 选项为空，生成的私钥和公钥为: &lt;code&gt;id_rsa&lt;/code&gt;, &lt;code&gt;id_rsa.pub&lt;/code&gt;.&lt;/p&gt;

&lt;h5&gt;添加 sshkey&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;ssh-add ~/.ssh/xxx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;列出所有的 sshkey&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;ssh-add -l
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;执行 &lt;code&gt;ssh-add&lt;/code&gt; 可能会遇到的问题:&lt;/h5&gt;

&lt;p class=&quot;alert alert-error&quot;&gt;Could not open a connection to your authentication agent.&lt;/p&gt;

&lt;p&gt;解决办法:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;eval `ssh-agent -s`
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;机器重启又得重新添加 sshkey，如何永久添加 sshkey&lt;/h5&gt;

&lt;p&gt;把 sshkey 私钥的路径加入到 &lt;code&gt;~/.ssh/config&lt;/code&gt;, 如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ vim ~/.ssh/config

IdentityFile ~/.ssh/gitHubKey
IdentityFile ~/.ssh/xxx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;git config&lt;/h2&gt;

&lt;h5&gt;全局配置和项目配置&lt;/h5&gt;

&lt;p&gt;全局配置信息在: &lt;code&gt;~/.gitconfig&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;项目配置在项目目录下的： &lt;code&gt;./.git/config&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git config --global&lt;/code&gt; 操作全局配置, 不带 &lt;code&gt;--global&lt;/code&gt; 选项的话，会尝试相对于当前目录的： &lt;code&gt;./git/config&lt;/code&gt;, 找不到的话，报错。&lt;/p&gt;

&lt;h5&gt;为各个项目单独配置&lt;code&gt;user.name&lt;/code&gt; 和 &lt;code&gt;user.email&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;你可能会在不同的几个项目中工作，各个项目的用户名可能不同，为了保证日志的准确性和提交时无误，最好对各个项目设置 &lt;code&gt;user.name&lt;/code&gt; 和 &lt;code&gt;user.email&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# for global setting
git config --global user.name xxx
git config --global user.email xxx@xxx.com

# for repository
git config user.name xxxx
git config user.email xxxx@xxx.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;git alias&lt;/h2&gt;

&lt;p&gt;使用快捷命令能带来很方便，输入命令更加快速，&lt;code&gt;git lg&lt;/code&gt; 这个短命令配置，将日志图形化方式展现：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;#git st =&amp;gt; git status
git config --global alias.st &amp;#39;status&amp;#39;

#git co =&amp;gt; git checkout
git config --global alias.co &amp;#39;checkout&amp;#39;

#git lg to view commit log like network graph
git config --global alias.lg &amp;quot;log --all --graph --pretty=format:&amp;#39;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%ci) %C(bold blue)&amp;lt;%an&amp;gt;%Creset&amp;#39; --abbrev-commit&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Android 高版本 API 方法在低版本系统上的兼容性处理</title>
      <link>http://liaohuqiu.net/cn/posts/using-high-api-level-method-compatibly/</link>
      <pubDate>Thu, 23 Jan 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/using-high-api-level-method-compatibly</guid>
      <description>&lt;p&gt;Android 版本更替，新的版本带来新的特性，新的方法。&lt;/p&gt;

&lt;p&gt;新的方法带来许多便利，但无法在低版本系统上运行，如果兼容性处理不恰当，APP 在低版本系统上，运行时将会 crash。&lt;/p&gt;

&lt;p&gt;本文以一个具体的例子说明如何在使用高 API level 的方法时处理好兼容性问题。&lt;/p&gt;

&lt;p&gt;例子：&lt;strong&gt;根据给出路径，获取此路径所在分区的总空间大小。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;在&lt;a href=&quot;http://www.liaohuqiu.net/storage-in-android/&quot; title=&quot;安卓文件存储使用参考&quot;&gt;安卓中的文件存储使用参考&lt;/a&gt;中提到:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;获取文件系统用量情况，在 API level 9 及其以上的系统，可直接调用 &lt;code&gt;File&lt;/code&gt; 对象的相关方法，以下需自行计算&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5&gt;一般实现&lt;/h5&gt;

&lt;p&gt;就此需求而言，API level 9 及其以上，调用 &lt;code&gt;File.getTotalSpace()&lt;/code&gt; 即可, 但是在 API level 8 以下系统&lt;code&gt;File&lt;/code&gt;对象并不存在此方法。&lt;/p&gt;

&lt;p&gt;如以下方法：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;/**
 * Returns the total size in bytes of the partition containing this path.
 * Returns 0 if this path does not exist.
 * 
 * @param path
 * @return -1 means path is null, 0 means path is not exist.
 */
public static long getTotalSpace(File path) {
    if (path == null) {
        return -1;
    }
    return path.getTotalSpace();
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;处理无法编译通过&lt;/h5&gt;

&lt;p&gt;如果 &lt;code&gt;minSdkVersion&lt;/code&gt; 设置为 8，那么 build 时候会报以下错误：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Call requires API level 9 (current min is 8)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;为了编译可以通过，可以添加 &lt;code&gt;@SuppressLint(&amp;quot;NewApi&amp;quot;)&lt;/code&gt; 或者 &lt;code&gt;@TargeApi(9)&lt;/code&gt;。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;用&lt;code&gt;@TargeApi($API_LEVEL)&lt;/code&gt;显式表明方法的API level要求，而不是&lt;code&gt;@SuppressLint(&amp;quot;NewApi&amp;quot;)&lt;/code&gt;;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;但是这样只是能编译通过，到了 API level8 的系统运行，将会引发 &lt;code&gt;java.lang.NoSuchMethodError&lt;/code&gt;。&lt;/p&gt;

&lt;h5&gt;正确的做法&lt;/h5&gt;

&lt;p&gt;为了运行时不报错, 需要:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; 判断运行时版本，在低版本系统不调用此方法&lt;/li&gt;
&lt;li&gt;&lt;p&gt;同时为了保证功能的完整性，需要提供低版本功能实现&lt;/p&gt;

&lt;p&gt;如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;/**
 * Returns the total size in bytes of the partition containing this path.
 * Returns 0 if this path does not exist.
 * 
 * @param path
 * @return -1 means path is null, 0 means path is not exist.
 */
@TargetApi(Build.VERSION_CODES.GINGERBREAD) 
    // using @TargeApi instead of @SuppressLint(&amp;quot;NewApi&amp;quot;)
@SuppressWarnings(&amp;quot;deprecation&amp;quot;)
public static long getTotalSpace(File path) {
    if (path == null) {
        return -1;
    }
    if (Build.VERSION.SDK_INT &amp;gt;= Build.VERSION_CODES.GINGERBREAD) {
        return path.getTotalSpace();
    }
    // implements getTotalSpace() in API lower than GINGERBREAD
    else {
        if (!path.exists()) {
            return 0;
        } else {
            final StatFs stats = new StatFs(path.getPath());
            // Using deprecated method in low API level system, 
            // add @SuppressWarnings(&amp;quot;description&amp;quot;) to suppress the warning
            return (long) stats.getBlockSize() * (long) stats.getBlockCount();
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;总结&lt;/h4&gt;

&lt;p&gt;在使用高于 &lt;code&gt;minSdkVersion&lt;/code&gt; API level 的方法需要:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;用 &lt;code&gt;@TargeApi($API_LEVEL)&lt;/code&gt; 使可以编译通过, 不建议使用 &lt;code&gt;@SuppressLint(&amp;quot;NewApi&amp;quot;)&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;运行时判断 API level; 仅在足够高，有此方法的 API level 系统中，调用此方法;&lt;/li&gt;
&lt;li&gt;保证功能完整性，保证低API版本通过其他方法提供功能实现。&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Android 存储使用参考</title>
      <link>http://liaohuqiu.net/cn/posts/storage-in-android/</link>
      <pubDate>Wed, 15 Jan 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/storage-in-android</guid>
      <description>&lt;h4&gt;可能遇到的问题&lt;/h4&gt;

&lt;p&gt;Android 系统自身自带有存储，另外也可以通过 SD 卡来扩充存储空间。
前者空间较小，后者空间大，但后者不一定可用。
开发应用，处理本地数据存取时，可能会遇到这些问题：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; 需要判断 SD 卡是否可用: 占用过多机身内部存储，容易招致用户反感，优先将数据存放于 SD 卡;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;应用数据存放路径，同其他应用应该保持一致，应用卸载时，清除数据:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;标新立异在 SD 卡根目录建一个目录，招致用户反感&lt;/li&gt;
&lt;li&gt;用户卸载应用后，残留目录或者数据在用户机器上，招致用户反感&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;需要判断两者的可用空间: SD 卡存在时，可用空间反而小于机身内部存储，这时应该选用机身存储;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;数据安全性，本应用数据不愿意被其他应用读写;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;图片缓存等，不应该被扫描加入到用户相册等媒体库中去。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr&gt;

&lt;h4&gt;基本操作&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;使用外部存储，需要的权限，在&lt;code&gt;AndoridManifest.xml&lt;/code&gt;中:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;uses-permission android:name=&amp;quot;android.permission.WRITE_EXTERNAL_STORAGE&amp;quot; /&amp;gt;
&amp;lt;uses-permission android:name=&amp;quot;android.permission.READ_EXTERNAL_STORAGE&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;从 API 19 / Andorid 4.4 / KITKAT 开始，不再需要显式声明这两个权限，除非要读写其他应用的应用数据(&lt;code&gt;$appDataDir&lt;/code&gt;)&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;判断 sd 卡可用：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;/**
 * Check if the primary &amp;quot;external&amp;quot; storage device is available.
 * 
 * @return
 */
public static boolean hasSDCardMounted() {
    String state = Environment.getExternalStorageState();
    if (state != null &amp;amp;&amp;amp; state.equals(Environment.MEDIA_MOUNTED)) {
        return true;
    } else {
        return false;
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr&gt;

&lt;h4&gt;存储的用量情况&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;根据系统用户不同，所能占用的存储空间大小也有不同&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;在 API level 9 及其以上时，&lt;code&gt;File&lt;/code&gt; 对象的 &lt;code&gt;getFreeSpace()&lt;/code&gt; 方法获取系统 root 用户可用空间；&lt;/p&gt;

&lt;p&gt;&lt;code&gt;getUsableSpace()&lt;/code&gt; 取非 root 用户可用空间&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当有多个存储可用时获取磁盘用量，根据当前系统情况选用合适的存储。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;根据系统存储用量，合理设定 app 所用的空间大小；运行时，也可做动态调整。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在 API level 9 及其以上的系统，可直接调用 &lt;code&gt;File&lt;/code&gt; 对象的相关方法，以下需自行计算:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;@TargetApi(VERSION_CODES.GINGERBREAD)
public static long getUsableSpace(File path) {
    if (path == null) {
        return -1;
    }
    if (Build.VERSION.SDK_INT &amp;gt;= Build.VERSION_CODES.GINGERBREAD) {
        return path.getUsableSpace();
    } else {
        if (!path.exists()) {
            return 0;
        } else {
            final StatFs stats = new StatFs(path.getPath());
            return (long) stats.getBlockSize() * (long) stats.getAvailableBlocks();
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h4&gt;路径的规律&lt;/h4&gt;

&lt;p&gt;一般地，通过 &lt;code&gt;Context&lt;/code&gt; 和 &lt;code&gt;Environment&lt;/code&gt; 相关的方法获取文件存取的路径。&lt;/p&gt;

&lt;p&gt;通过这两个类可获取各种路径，如图：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;    ($rootDir)
+- /data                -&amp;gt; Environment.getDataDirectory()
|   |
|   |   ($appDataDir)
|   +- data/com.srain.cube.sample
|       |
|       |   ($filesDir)
|       +- files            -&amp;gt; Context.getFilesDir() / Context.getFileStreamPath(&amp;quot;&amp;quot;)
|       |       |
|       |       +- file1    -&amp;gt; Context.getFileStreamPath(&amp;quot;file1&amp;quot;)
|       |   ($cacheDir)
|       +- cache            -&amp;gt; Context.getCacheDir()
|       |
|       +- app_$name        -&amp;gt;(Context.getDir(String name, int mode)
|
|   ($rootDir)
+- /storage/sdcard0     -&amp;gt; Environment.getExternalStorageDirectory()
    |                       / Environment.getExternalStoragePublicDirectory(&amp;quot;&amp;quot;)
    |
    +- dir1             -&amp;gt; Environment.getExternalStoragePublicDirectory(&amp;quot;dir1&amp;quot;)
    |
    |   ($appDataDir)
    +- Andorid/data/com.srain.cube.sample
        |
        |   ($filesDir)
        +- files        -&amp;gt; Context.getExternalFilesDir(&amp;quot;&amp;quot;)
        |   |
        |   +- file1    -&amp;gt; Context.getExternalFilesDir(&amp;quot;file1&amp;quot;)
        |   +- Music    -&amp;gt; Context.getExternalFilesDir(Environment.Music);
        |   +- Picture  -&amp;gt; ... Environment.Picture
        |   +- ...
        |
        |   ($cacheDir)
        +- cache        -&amp;gt; Context.getExternalCacheDir()
        |
        +- ???
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h4&gt;各个路径的特性&lt;/h4&gt;

&lt;p&gt;下面介绍这些路径的特性以及使用中需要注意的细节:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;根目录(&lt;code&gt;$rootDir&lt;/code&gt;)：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;内部存储路径： &lt;code&gt;/data&lt;/code&gt;, 通过 &lt;code&gt;Environment.getDataDirectory()&lt;/code&gt; 获取&lt;/li&gt;
&lt;li&gt;&lt;p&gt;外部存储路径： &lt;code&gt;/storage/sdcard0&lt;/code&gt; (也有类似 /mnt/ 这样的），通过 &lt;code&gt;Environment.getExternalStorageDirectory()&lt;/code&gt; 获取&lt;/p&gt;

&lt;p&gt;示例:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Environment.getDataDirectory(): 
        /data

Environment.getExternalStorageDirectory(): 
        /storage/sdcard0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;应用数据目录(&lt;code&gt;$appDataDir&lt;/code&gt;)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;内部储存: &lt;code&gt;$appDataDir = $rootDir/data/$packageName&lt;/code&gt;, &lt;/li&gt;
&lt;li&gt;外部存储: &lt;code&gt;$appDataDir = $rootDir/Andorid/data/$packageName&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;在这些目录下的数据，在 app 卸载之后，会被系统删除，我们应将应用的数据放于这两个目录中。&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;hr&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;外部存储中，公开的数据目录。
这些目录将不会随着应用的删除而被系统删除，请斟酌使用:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Environment.getExternalStorageDirectory(): 
    /storage/sdcard0

// 同 $rootDir
Environment.getExternalStoragePublicDirectory(&amp;quot;&amp;quot;): 
    /storage/sdcard0

Environment.getExternalStoragePublicDirectory(&amp;quot;folder1&amp;quot;): 
    /storage/sdcard0/folder1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;应用数据目录下的目录&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;一般的在 $appDataDir 下，会有两个目录&lt;/strong&gt;：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;数据缓存：&lt;code&gt;$cacheDir = $appDataDir/cache&lt;/code&gt;:  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;内部存储：&lt;code&gt;Context.getCacheDir()&lt;/code&gt;, 机身内存不足时，文件会被删除&lt;/li&gt;
&lt;li&gt;&lt;p&gt;外部存储：&lt;code&gt;Context.getExternalCacheDir()&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;外部存储没有实时监控，当空间不足时，文件不会实时被删除，可能返回空对象&lt;/p&gt;

&lt;p&gt;示例:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Context.getCacheDir(): 
        /data/data/com.srain.cube.sample/cache

Context.getExternalCacheDir(): 
        /storage/sdcard0/Android/data/com.srain.cube.sample/cache
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;文件目录 &lt;code&gt;$filesDir = $appDataDir/files&lt;/code&gt;:  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;内部存储：通过 &lt;code&gt;Context.getFilesDir()&lt;/code&gt; 获取&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Context.getFileStreamPath(String name)&lt;/code&gt;返回以&lt;code&gt;name&lt;/code&gt;为文件名的文件对象，&lt;code&gt;name&lt;/code&gt; 为空，则返回 &lt;code&gt;$filesDir&lt;/code&gt; 本身&lt;/p&gt;

&lt;p&gt;示例:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Context.getFilesDir(): 
        /data/data/com.srain.cube.sample/files

Context.getFileStreamPath(&amp;quot;&amp;quot;):
        /data/data/com.srain.cube.sample/files

Context.getFileStreamPath(&amp;quot;file1&amp;quot;):
        /data/data/com.srain.cube.sample/files/file1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;外部存储：通过 &lt;code&gt;Context.getExternalFilesDir(String type)&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt; 为空字符串时获取.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;type&lt;/code&gt; 系统指定了几种类型:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Environment.DIRECTORY_MUSIC
Environment.DIRECTORY_PICTURES
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;示例:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Context.getExternalFilesDir(&amp;quot;&amp;quot;): 
        /storage/sdcard0/Android/data/com.srain.cube.sample/files

Context.getExternalFilesDir(Environment.DIRECTORY_MUSIC)
        /storage/sdcard0/Android/data/com.srain.cube.sample/files/Music
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;$cacheDir / $filesDir&lt;/code&gt; 安全性&lt;/p&gt;

&lt;p&gt;在内部存储中，&lt;code&gt;$cacheDir&lt;/code&gt;, &lt;code&gt;$filesDir&lt;/code&gt;是 app 安全的，其他应用无法读取本应用的数据，而外部存储则不是。&lt;/p&gt;

&lt;p&gt;在外部存储中，这两个文件夹其他应用程序也可访问。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;在外部存储中，&lt;code&gt;$filesDir&lt;/code&gt;中的媒体文件，不会被当做媒体扫描出来，加到媒体库中。&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;hr&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;$cacheDir / $filesDir&lt;/code&gt; 同级目录&lt;/p&gt;

&lt;p&gt;在内部存储中：通过 &lt;code&gt;Context.getDir(String name, int mode)&lt;/code&gt;可获取和 &lt;code&gt;$filesDir&lt;/code&gt; / &lt;code&gt;$cacheDir&lt;/code&gt; 同级的目录&lt;/p&gt;

&lt;p&gt;目录的命名规则为 &lt;code&gt;app_ + name&lt;/code&gt;, 通过 mode 可控制此目录为 app 私有还是其他 app 可读写。&lt;/p&gt;

&lt;p&gt;示例:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Context.getDir(&amp;quot;dir1&amp;quot;, MODE_PRIVATE):
        Context.getDir: /data/data/com.srain.cube.sample/app_dir1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;特别注意, 对于外部存储，获取 &lt;code&gt;$cacheDir&lt;/code&gt; 或者 &lt;code&gt;$filesDir&lt;/code&gt; 及其下的路径&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;在 API level 8 以下，或者空间不足，相关的方法获路径为空时，需要自己构造。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;@TargetApi(VERSION_CODES.FROYO)
public static File getExternalCacheDir(Context context) {

    if (Build.VERSION.SDK_INT &amp;gt;= Build.VERSION_CODES.FROYO)) {
        File path = context.getExternalCacheDir();

        // In some case, even the sd card is mounted,
        // getExternalCacheDir will return null
        // may be it is nearly full.
        if (path != null) {
            return path;
        }
    }

    // Before Froyo or the path is null,
    // we need to construct the external cache folder ourselves
    final String cacheDir = &amp;quot;/Android/data/&amp;quot; + context.getPackageName() + &amp;quot;/cache/&amp;quot;;
    return new File(Environment.getExternalStorageDirectory().getPath() + cacheDir);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr&gt;

&lt;h4&gt;相关代码：&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/liaohuqiu/cube-sdk/blob/master/core/src/com/srain/cube/file/FileUtil.java&quot;&gt;https://github.com/liaohuqiu/cube-sdk/blob/master/core/src/com/srain/cube/file/FileUtil.java&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Solution for Loading Image in Android</title>
      <link>http://liaohuqiu.net/posts/solution-for-loading-image-in-android/</link>
      <pubDate>Sat, 11 Jan 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/posts/solution-for-loading-image-in-android</guid>
      <description>&lt;h4&gt;Problems&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Memory quota&lt;/li&gt;
&lt;li&gt;ListView&lt;/li&gt;
&lt;li&gt;OutOfMemory&lt;/li&gt;
&lt;li&gt;Network traffic  -&amp;gt; reuse / cache&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;A common workflow to load image from network:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;+-----------------------+
|  Start to load        |
+-------+---------------+
        |
        v
+-----------------------+
| Found in local cache  |
+-------+---------------+
        |
    N --+--- Y ------------+
    |                      |
    v                      |
+-----------------------+  |
| Fetch from network    |  |
+-------+---------------+  |
        |                  |
        v                  |
+-----------------------+  |
| Store to local cache  |  |
+-------+---------------+  |
        |                  |
        v                  |
+-----------------------+  |
| Draw in ImageView     |&amp;lt;-+
+-------+---------------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h4&gt;Local Cache&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Quota&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Memory Cache&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;File Cache&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;Reuse&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;h4&gt;Cross Thread&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Handler&lt;/code&gt; and &lt;code&gt;LoadImageHandler&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Thread Pool&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Task Schedule&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr&gt;

&lt;h4&gt;Size and Format Control&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;From network&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;From local cache&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;The image data in local cache is reused for a smaller size.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Support &lt;code&gt;.webp&lt;/code&gt; format.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Notice&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Memory In android&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;native&lt;/li&gt;
&lt;li&gt;Dalvik heap&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;API Level &amp;lt; 11 (Android 3.0), native + heap : &lt;code&gt;bitmap.recycle()&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Bitmap Memory Use&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;private static int getBytesPerPixel(Config config) {
    if (config == Config.ARGB_8888) {
        return 4;
    } else if (config == Config.RGB_565) {
        return 2;
    } else if (config == Config.ARGB_4444) {
        return 2;
    } else if (config == Config.ALPHA_8) {
        return 1;
    }
    return 1;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;2592x1936 pixels (5 megapixels)
If the bitmap configuration used is ARGB_8888 (the default from the Android 2.3 onward) then loading this image into memory takes about 19MB of memory (2592*1936*4 bytes), immediately exhausting the per-app limit on some devices.&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Android 统一的页面头部</title>
      <link>http://liaohuqiu.net/cn/posts/unified-title-header/</link>
      <pubDate>Mon, 06 Jan 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/unified-title-header</guid>
      <description>&lt;h4&gt;需要解决的问题&lt;/h4&gt;

&lt;p&gt;没有统一的页头处理，导致：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;各个页面的 layout 文件都需要细碎地包含页头信息，id 的不一致，给管理带来麻烦&lt;/li&gt;
&lt;li&gt;有可能导致样式不统一&lt;/li&gt;
&lt;li&gt;样式如果要改动，那必是伤筋动骨&lt;/li&gt;
&lt;li&gt;各个页面，分头各自处理页头逻辑重复劳动，一些统一的逻辑，比如统一埋点，却又容易出现不一致&lt;/li&gt;
&lt;li&gt;其他的更多&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h4&gt;解决方案&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;基本思路&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  页头控件形式实现。&lt;/li&gt;
&lt;li&gt;  一个基类 Activity 使用此控件，公开 &lt;code&gt;setTitle()&lt;/code&gt; 等方法，处理页头点击返回，数据记录等逻辑。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;抽象和封装&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;HeaderBarBase&lt;/code&gt;: 对应的布局文件为：&lt;code&gt;base_header_bar_base.xml&lt;/code&gt;。 &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;处理左中右三个布局关系，用于样式统一。&lt;/li&gt;
&lt;li&gt;监听点击事件。监听左中右布局点击，避免实际区域太小无法点击的糟糕的用户体验。&lt;/li&gt;
&lt;li&gt;作为基类抽象，可扩展多多个页头：普通页头/特殊页头等。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;HeaderBarBase.java&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;HeaderBarBase
   |
   +- +getLeftViewContianer()
   +- +getCenterViewContainer();
   +- +getRightViewContainer();
   |
   +- +setLeftOnClickListner();
   +- +setCenterOnClickListner();
   +- +setRightOnClickListner();
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;TitleHeaderBar&lt;/code&gt; 继承于 &lt;code&gt;HeaderBarBase&lt;/code&gt;, 对应的布局文件为：&lt;code&gt;base_header_bar_title.xml&lt;/code&gt;，处理普通页头 UI 和业务逻辑。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;TitleHeaderBar.java&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;   TitleHeaderBar --&amp;gt; HeaderBarBase
       |
       +- +getLeftImageView();
       +- +getCenterTextView();
       +- +getRightTextView();
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;易用性的实现&lt;/p&gt;

&lt;p&gt;&lt;code&gt;TitleBaseActivity&lt;/code&gt;, 包含了 &lt;code&gt;TitleHeaderBar&lt;/code&gt;,  统一处理了页面页头逻辑。对应的布局文件为: &lt;code&gt;activity_title_base.xml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;
&amp;lt;LinearLayout xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;
    android:layout_width=&amp;quot;match_parent&amp;quot;
    android:layout_height=&amp;quot;match_parent&amp;quot;
    android:background=&amp;quot;#ffffff&amp;quot;
    android:orientation=&amp;quot;vertical&amp;quot; &amp;gt;

    &amp;lt;com.etao.mobile.views.header.TitleHeaderBar
    android:id=&amp;quot;@+id/ly_header_bar_title_wrap&amp;quot;
    android:layout_width=&amp;quot;match_parent&amp;quot;
    android:layout_height=&amp;quot;44dp&amp;quot; &amp;gt;
    &amp;lt;/com.etao.mobile.views.header.TitleHeaderBar&amp;gt;

&amp;lt;/LinearLayout&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;TitleBaseActivity&lt;/code&gt;的内容为布局文件中&lt;code&gt;LinearLayout&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LinearLayout&lt;/code&gt; 包含了一个 &lt;code&gt;TitleHeaderBar&lt;/code&gt;, 可以统一统一页面返回，点击数据埋点等细化的业务逻辑;&lt;/li&gt;
&lt;li&gt;重写 &lt;code&gt;setContentView()&lt;/code&gt;, 将内容添加到了此 &lt;code&gt;LinearLayout&lt;/code&gt; 上&lt;/li&gt;
&lt;li&gt;直接继承 &lt;code&gt;TitleBaseActivity&lt;/code&gt; 使用即可, 使用简单:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;TitleBaseActivity.java&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;TitleBaseActivity
   |
   +- -mContentViewContainer
   |
   +- -mTitleHeaderBar;     // protected, 子类可根据自身情况处理
   |
   +- -enableDefaultBack(); // 默认为true，点击左侧图标默认行为：返回
   |
   +- -setHeadTitle()       // 设置标题
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;扩展性&lt;/p&gt;

&lt;p&gt;即可继承 &lt;code&gt;TitleBaseActivity&lt;/code&gt;, 也可以在布局文件中使用 &lt;code&gt;TitleHeaderBar&lt;/code&gt;, 甚至可以从 &lt;code&gt;HeaderBarBase&lt;/code&gt; 继承, 实现定制的头部。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Android 内存使用分析和程序性能分析</title>
      <link>http://liaohuqiu.net/cn/posts/memory-and-profile-analysis-in-android/</link>
      <pubDate>Fri, 03 Jan 2014 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/memory-and-profile-analysis-in-android</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;这篇文章，内容已经老旧，目前（2016-10-29），Android Studio 已经提供了很好的内存使用工具，且也有像 Leakcanary(&lt;a href=&quot;https://www.liaohuqiu.net/cn/posts/leak-canary-read-me/&quot;&gt;https://www.liaohuqiu.net/cn/posts/leak-canary-read-me/&lt;/a&gt;) 这样的好用的内存泄漏排查工具了。发展好快。&lt;/p&gt;

&lt;p&gt;方法调用分析也是。另外，这篇文章的图片之前在 SEA，后来 SAE 扣费规则变化，之前承诺的永久的开发者激励，取消了，我存放图片的应用欠费没注意被删除了。&lt;/p&gt;

&lt;p&gt;所以这篇文章什么价值不大了，大家大可不看。我留这里，当个念想。&lt;/p&gt;

&lt;p&gt;目前，图片在七牛，全站 https。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Android 应用的性能分析，优化，需要检查分析内存使用情况和方法调用情况。本文给出进行这两方面分析的工具和方法。&lt;/p&gt;

&lt;h3&gt;内存使用分析&lt;/h3&gt;

&lt;hr&gt;

&lt;h5&gt;1. 分析内存使用&lt;/h5&gt;

&lt;p&gt;虽然 Android 系统的 Dalvik 虚拟机有垃圾回收机制，但因手机内存使用存在不同于普通 P C的更大的限制，内存使用方面的问题，我们更应多加注意。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;一些内存使用问题会非常明显，比如内存耗尽（不足）时触发的 &lt;code&gt;OutOfMemoryError&lt;/code&gt; 可能会使 app 直接崩溃。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;另有一些内存问题则表现得不那么明显，但他们会让你的 app 以及系统变得越来越慢。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;当有以上两种情况之一时，就得看看内存的使用情况了，是否存在：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;过大的对象，占用内存&lt;/li&gt;
&lt;li&gt;有些对象一直被创建，从未被释放。&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;2. 工具&lt;/h5&gt;

&lt;p&gt;在 Android 的 ADT 中，提供了两种工具可以用来分析内存使用&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;对象分配相关：DDMS 中的 Allocation Tracker。借助这个工具可以查看对象的生成和分配情况, 可了解到对象在何时被创建，但无法了解整个 App 的对象分配情况。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Heap 使用情况相关：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;DDMS 中的 Heap 工具。&lt;/li&gt;
&lt;li&gt;hprof 导出工具，在 DDMS 中导出 hprof 文件，在 &lt;a href=&quot;http://www.eclipse.org/mat/&quot;&gt;Memory Analyzer&lt;/a&gt; 中查看。&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;hprof 文件是 Java 虚拟机的 Heap 快照&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;3. 查看 Heap 实时情况&lt;/h5&gt;

&lt;p&gt;&lt;img class=&quot;cimage&quot; src=&quot;//cimage.sinaapp.com/img/org/17/70/1/5/60/update-heap-status.png&quot;/&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; 打开 DDMS，选中应用,点击 Update Heap 按钮&lt;/li&gt;
&lt;li&gt; 右侧 Hea p标签页，显示了 Heap 使用情况&lt;/li&gt;
&lt;li&gt; 操作应用，看哪些操作将导致内存用量增大&lt;/li&gt;
&lt;/ol&gt;

&lt;h5&gt;4. Memeory Analyzer 分析内存使用情况&lt;/h5&gt;

&lt;p&gt;根据实时的 Heap 使用情情况，我们可以大致判断哪些操作，哪些页面可能存在内存是一共问题，但是具体的问题的需要更进一步的数据。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Allocation Tracker 提供了对象分配和被引用的详细的信息&lt;/p&gt;

&lt;p&gt;另外，还提供了一个报告，为我们分析提供参考&lt;/p&gt;

&lt;p&gt;请在此处下载：&lt;a href=&quot;http://www.eclipse.org/mat/&quot;&gt;Memeory Analyzer&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;我们可以通过 DDMS 导出 hprof 文件，在 Memeory Analyzer 中分析, 如下:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;cimage&quot; src=&quot;//cimage.sinaapp.com/img/org/28/36/67/55/22/dump-hprof.png&quot;/&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; 打开 DDMS, 选中应用，点击 &lt;code&gt;Dump HPROF file&lt;/code&gt;, 等待一段时间, 10 几秒甚至更长，保存 hprof 文件。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;导出的文件为 Dalvik 虚拟机格式的，需要转成 J2SE 虚拟机格式的，否则 Memeory Analyzer 无法打开&lt;/p&gt;

&lt;p&gt;在 Windows中，cmd：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;cd /d D:\android\adt\adk\tools
hprof-conv.exe D:\tmp\com.srain.cube.sample.hprof D:\tmp\com.srain.cube.sample-conv.hprof
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在 Memeory Analyzer 中打开文件
打开文件分析的过程中，会提示是否生成分析报告，分析报告会指出哪些对象是可疑的占用内存的对象。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;界面展示大致如下:
&lt;img class=&quot;cimage&quot;src=&quot;//cimage.sinaapp.com/img/org/8/99/48/55/33/mat-overview.png&quot;/&gt;&lt;/p&gt;

&lt;p&gt;点击 Histogram:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;cimage&quot; src=&quot;//cimage.sinaapp.com/img/org/11/78/0/42/66/mat-histogram.png&quot;/&gt;&lt;/p&gt;

&lt;p&gt;各对象在列表中，可排序：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Shallow Heap: 占用的真正的内存大小&lt;/li&gt;
&lt;li&gt;Retained Heap: 对象自身的大小 + 所维护的引用的大小&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;选中某个对象，List Objects -&amp;gt; with incoming reference / with outcoming reference 可查看引用和被应用的情况。
根据这些，加上搜索，可判断未释放的或者过大的有问题的对象的位置。&lt;/p&gt;

&lt;p&gt;Memeory Analyzer 功能强大，&lt;a href=&quot;http://eclipsesource.com/blogs/2013/01/21/10-tips-for-using-the-eclipse-memory-analyzer/&quot;&gt;更多用法，点击这里&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;方法调用分析&lt;/h3&gt;

&lt;p&gt;App 不流畅卡顿，和方法执行速度有更直接的关系。
主UI线程上的耗时操作，超过5s，系统就会提示用户，是否终止程序。
在 ListView 中的 &lt;code&gt;getView()&lt;/code&gt; 方法，一个耗时 10ms 的操作就足够把你的列表卡顿得惨不忍睹。&lt;/p&gt;

&lt;p&gt;Android 框架 Debug 类提供了方法，记录方法调用的执行数据到一个 trace 文件，在代码中：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;// 开始 trace文件位置: /sdcard/cube.trace
Debug.startMethodTracing(&amp;quot;cube&amp;quot;);

// ...
// 其他的代码

// 停止
Debug.stopMethodTracing();
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在模拟器或者没 SDK 的真机上调试时，直接使用 /sdcard 下的路径可能会有 Permission deny 错误，改用机身内部存储试试。&lt;/p&gt;

&lt;p&gt;生成的 trace 文件，通过 adb pull 存到本地。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;adb pull /sdcard/cube.trace D:\tmp\cube.trace
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;直接在 ADT 的 eclipse 中打开:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;cimage&quot; src=&quot;//cimage.sinaapp.com/img/org/19/98/19/71/81/trace-view-overview.png&quot;/&gt;&lt;/p&gt;

&lt;p&gt;上图中：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;上部区域(Timeline Panel) 为各线程的时间线上的概况&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;在区域 1，鼠标为左右箭头状，在放大之后，可拖动缩小尺寸&lt;/li&gt;
&lt;li&gt;鼠标放在各线程时间轴区域，比如主线程的 2 区域，鼠标成十字状，左右拖动可以选择关注区域，选择合适的关注区域，松开鼠标，区域将放大。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;下部区域(Profile Panel)为方法调用情况, 几个参数介绍如下：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;cpu time，方法执行的真正的时间&lt;/li&gt;
&lt;li&gt;real time, cpu time + 其他时间(IO wait, Thread wait)&lt;/li&gt;
&lt;li&gt;Inc xxx Time, Inc 为 inclusive 缩写，本方法调用时间以及本方法内部所调用的方法(子方法)的总和&lt;/li&gt;
&lt;li&gt;Excl xxx Time, Excl 为exclusive 的缩写，指的除去子方法，该方法本身执行时间&lt;/li&gt;
&lt;li&gt;Calls + RecurCalls/Total, 显示父子方法调用次数占比&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;选中一个方法，在时间线图中会有突出显示。放大时间线图，可直观看出方法执行时间长度；看调用图，可找出该方法被调用的层次关系。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看 Excl Time 和 Inc Time，分析调用关系，可找出真正耗时的方法，找出性能瓶颈。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img class=&quot;cimage&quot; src=&quot;//cimage.sinaapp.com/img/org/13/42/30/62/45/trace-view-exclusive-time.png&quot;/&gt;&lt;/p&gt;

&lt;p&gt;上图中，Excl Time 排名第二的方法 &lt;code&gt;bytesToHexString&lt;/code&gt; 很可能是有性能问题的。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LRU cache in Android</title>
      <link>http://liaohuqiu.net/posts/lru-cache-in-android/</link>
      <pubDate>Mon, 23 Dec 2013 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/posts/lru-cache-in-android</guid>
      <description>&lt;h4&gt;LRU cache&lt;/h4&gt;

&lt;p&gt;LRU cache is very convinient to manager a list of data which has a limit space requirement.&lt;/p&gt;

&lt;p&gt;LRU cache managers an object list. Each time a valued is accessed, it is moved to the head of the list. When a value is put into the cache, the value at the end of the list may be evicted.&lt;/p&gt;

&lt;p&gt;There are two kinds of LruCache in Android: &lt;code&gt;LruCache&lt;/code&gt; and &lt;code&gt;DiskLruCache&lt;/code&gt;, the fisrt can be used to manager an set of objects, the later can be used to manager files.&lt;/p&gt;

&lt;h5&gt;When to use&lt;/h5&gt;

&lt;p&gt;A scenario that a LruCache can be used is to manager the quota of disk cache and memory cache when loading a network image.&lt;/p&gt;

&lt;p&gt;After an image is loaded from the remote server, commonly it will be writen to disk for further use. When the image is required to display in the &lt;code&gt;ImageView&lt;/code&gt; we will decode the bitmap data from this file. The decoding operation will take a long time. To avoid the same image to be decode for multiple time for the bitmap data, the bitmap data will be cached in the memory after the first time it is decoded.&lt;/p&gt;

&lt;p&gt;But the memory and the storage space is very limited, we can not take too much of that. Each time a file is writen to storage of a bitmap data is cached into memory, we must check the total size of the cached data and remove the eldest objects if nessery.&lt;/p&gt;

&lt;p&gt;Here, the &lt;code&gt;LRU Cache&lt;/code&gt; will make things easy.&lt;/p&gt;

&lt;h4&gt;Memory LruCache&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;LruCache&lt;/code&gt; is in the &lt;code&gt;support V4&lt;/code&gt; package. It is very simple.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;LRU cache
    |
    +- -map, LinkedHashmap
    |
    +- +put(K key, V value)
    |
    +- +get(K key)
    |
    +- -sizeOf(K key, V value)
    |
    +- -entryRemoved(K key,V value)
    |
    +- -create(K key)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;LruCache&lt;/code&gt; has a &lt;code&gt;LinkedHashmap&lt;/code&gt; inside, which is constructed by&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LinkedHashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initialCapacity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loadFactor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;accessOrder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The third parameter allow the &lt;code&gt;LinkedHashmap&lt;/code&gt; to put the element to the head of the linked list after accessed, both by &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt;.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;sizeOf(K key, V value)&lt;/code&gt; method return the size of each count which will be used to calculate the size of the whole size.
&amp;gt; The default implementions returns 1, which make the LRU cache only manager a limit amount of objects.&lt;/li&gt;
&lt;li&gt;The method &lt;code&gt;put(K key, V value)&lt;/code&gt; cache the value to the cache and check the size.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The method &lt;code&gt;get(K key)&lt;/code&gt; will return the value for the key if it is exist in the cache. &lt;/p&gt;

&lt;p&gt;When a value is returned, it will move to the head of the queue, this is grantened by the &lt;code&gt;LinkedHashmap&lt;/code&gt;;&lt;/p&gt;

&lt;p&gt;If the value is not exist, method &lt;code&gt;create(K key)&lt;/code&gt; will be called to create the value. If a the value is created, it will be put into cache and the limit size will be checked. This will make the code simple.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;entryRemoved&lt;/code&gt; will be call when an object is removed when the new value conrespong value of this key is put into cache
or the total size of the cache has exceed the limit.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We can make a limit cache to store BitmapData:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cacheSizeInKB&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 10MB&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;LruCache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Bitmap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cache&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LruCache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Bitmap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cacheSizeInKB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;entryRemoved&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;evicted&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Bitmap&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;old&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Bitmap&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;     * Measure item size in kilobytes rather than units,&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;     * which is more practical for a bitmap cache&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;     */&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sizeOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Bitmap&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bitmapSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getByteCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bitmapSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bitmapSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h4&gt;DiskLurCache&lt;/h4&gt;

&lt;p&gt;The &lt;code&gt;DiskLruCache&lt;/code&gt; has an implementaion in &lt;a href=&quot;https://android.googlesource.com/platform/libcore/+/android-4.1.1_r1/luni/src/main/java/libcore/io/DiskLruCache.java&quot;&gt;JB source&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;DiskLruCache
    |
    +- +get()   // return a snapshot which is realted to the key.
    |
    +- +edit()  // return the default `Editor` related the an `Entry` which is related to the key.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Like &lt;code&gt;LruCache&lt;/code&gt;, it has a &lt;code&gt;LinkedHashmap&lt;/code&gt; inside to manage the access order of the cached files. &lt;/p&gt;

&lt;p&gt;There are some classes where are used to managed the info of the cached files:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Editor&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Snapshot&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Entry&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Android 加载图片时需要解决的问题</title>
      <link>http://liaohuqiu.net/cn/posts/load-image-in-android/</link>
      <pubDate>Mon, 23 Dec 2013 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/load-image-in-android</guid>
      <description>&lt;h3&gt;需要解决的问题&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;无网络环境下图片不可用&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;图片的本地缓存&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;低配置机型，加载图像资源超内存(OutOfMemory, OoM)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;需要合理使用内存&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ListView, GridView 等控件&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;初始化或者移动过程中，列表项的重复绘制导致图片重复加载多次&lt;/li&gt;
&lt;li&gt;列表快速滑动后，停止区域图像没有被快速加载&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;快速滑动过程中，在getView中进行图像加载逻辑，在随后view被复用于加载另外的不同的图片
前一个加载应该立即被取消，保证新的加载应该很快被执行
* 往前或往后滑动之后，反向滑动,之前已浏览过区域，等待图片重新加载&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;在逆向滑动后，之前的图像应该立刻被加载
* 快速滑动过程中，列表卡顿&lt;/p&gt;

&lt;p&gt;快速滑动过程中，频繁的图像的加载，创建和释放，可能导致内存回收&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;缓存使用, 配额管理&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;缓存图像(Bitmap)于内存，命中缓存的图像可立刻加载，但限于 zygoate 虚拟机内存有限

&lt;ul&gt;
&lt;li&gt;过大的内存占用，容易造成 OOM&lt;/li&gt;
&lt;li&gt;占用用户过多内存，造成用户反感&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;* 缓存文件于 sd 卡或者机身存储，配额管理
    * 应该适度使用用户机器资源
    * 应用卸载后，不应该有遗留数据
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;图片复用&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;比如用户头像，120x120图像下载到本地之后，如有 80x80 的需求, 无需再次下载，直接复用 120x120 图片&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;图片的尺寸的适配&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;如无特殊指定，可根据 ImageView 尺寸适配最合适尺寸的图&lt;/li&gt;
&lt;li&gt;大部分的图片存储服务，支持通过拼接不同 url 获得不同尺寸，不同质量, 不同格式(&lt;code&gt;webp&lt;/code&gt;)的图片
需要根据不同的尺寸需求，拼接不同的 url
&amp;gt;  各图片存储拼接格式不同，此为具体的业务逻辑，应该有足够好的扩展性,支持不同的拼接方式&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>How an activity is created</title>
      <link>http://liaohuqiu.net/posts/how-an-activity-is-created/</link>
      <pubDate>Sun, 24 Nov 2013 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/posts/how-an-activity-is-created</guid>
      <description>&lt;h3&gt;Interfaces&lt;/h3&gt;

&lt;pre&gt;
&lt;code&gt;
+-------------------------------+
|   IBinder                     |
|       |                       |
|       +- +transact()          |
|       +- +onTransact()        |
|                               |
+-------------------------------+

+-------------------------------+
|   IActivityManager            |
|       |                       |
|       +- +startActivity()     |
|                               |
+-------------------------------+
&lt;/code&gt;
&lt;/pre&gt;

&lt;h3&gt;code flow&lt;/h3&gt;

&lt;p&gt;To achieve this, I have spent a whole day in VIM, :).&lt;/p&gt;

&lt;pre&gt;
&lt;code&gt;
// We start from here
Activity
    |
    +- startActivity()
        |
        +- startActivityForResult()
            |
            +- mInstrumentation.execStartActivity
                                    |
                                    |
Instrumentation                     |
    |                               |
    +- execStartActivity()   &lt;------+
    |       |
    |       +- ActivityManagerNative.getDefault().startActivity();  ---+
    |                                          |                       |
    +- newActivity()                           |                       |
    |       |                                  |                       |
    |       |  +-------------------------+     |                       |
    |       |  |                         |     |                       |
    |       +-&gt;| Activity.newInstance()  |     |                       |
    |          |                         |     |                       |
    |          +-------------------------+     |                       |
    |                                          |                       |
    +- callActivityOnCreate()                  |                       |
            |                                  |                       |
            |                                  |                       |
            |  +--------------------------+    |                       |
            |  |                          |    |                       |
            +-&gt;| Activity.performCreate() |    |                       |
               |                          |    |                       |
               +------------------------- +    |                       |
                                               |                       |
                                               |                       |
                                               |                       |
      +----|&gt; IBinder, IActivityManager        |                       |
      |                                        |                       |
ActivityManagerNative                          |                       |
    ^    |                                     |                       |
    |    +- -gDefault                          |                       |
    |    |                                     |                       |
    |    +- +getDefault():           &lt;---------+                       |
    |    |       |                                                     |
    |    |     gDefault.get()                                          |
    |    |             |                                               |
    |    |             |                                               |
    |    |     +-------+--------------------------------------------+  |
    |    |     |                                                    |  |
    |    |     |   ActivityManagerProxy ------- |&gt; IActivityManager |  |
    |    |     |       |                                            |  |
    |    |     |       +- -mRemote: ActivityManagerService          |  |
    |    |     |       |                                            |  |
    |    |     |       +- +startActivity()  &lt;---------------------- | -+
    |    |     |               |                                    |
    |    |     |               + mRemote.transact()                 |
    |    |     |                            |                       |
    |    |     +--------------------------- | ----------------------+
    |    |                                  |
    |    |       +--------------------------+
    |    |       |
    |    |       v
    |    +- +transact() --------------------------+
    |    |                                        |
    |    |                                        |
    |    +- +onTransact() &lt;-----------------+     |
    |           |                           |     |
    |           +- call: startActivity()----|-----|-----+
    |                                       |     |     |
    |                                       |     |     |
ActivityManagerService                      |     |     |
        |                                   |     |     |
        +- -mMainStack:ActivityStack        |     |     |
        |                                   |     |     |
        +- +onTransact()  &lt;-----------------------+     |
        |       |                           |           |
        |       +- super::onTransact()------+           |
        |                                               |
        +- +startActivity()  &lt;--------------------------+
        |       |
        |       +- startActivityAsUser()
        |               |
        |               +- mMainStack.startActivityMayWait()
        |                                                |
        +- +startProcessLocked()        &lt;----------------|---------------------+
        |       ProcessRecord app;                       |                     |
        |       Process.start(                           |                     |
        |           &quot;android.app.ActivityThread&quot;,        |                     |
        |           app.processName, ...   --------------|-------------+       |
        |                                                |             |       |
        +- attachApplication    &lt;------------------------|-------------|-------|---------+
            |                                            |             |       |         |
            +- attachApplicationLocked()                 |             |       |         |
                |                                        |             |       |         |
                +- mMainStack.realStartActivityLocked(); -----------------------------+  |
                                                         |             |       |      |  |
ActivityStack                                            |             |       |      |  |
    |                                                    |             |       |      |  |
    |-  startActivityMayWait() &lt;-------------------------+             |       |      |  |
    |   |                                                              |       |      |  |
    |   +- startActivityLocked(IApplicationThread caller, ...          |       |      |  |
    |       |                                                          |       |      |  |
    |       +- startActivityUncheckedLocked                            |       |      |  |
    |           |                                                      |       |      |  |
    |           +- startActivityLocked(ActivityRecord r,...            |       |      |  |
    |               |                                                  |       |      |  |
    |               +- resumeTopActivityLocked                         |       |      |  |
    |                   |                                              |       +      |  |
    |                   +-  mService.startProcessLocked: finnaly call this function.  |  |
    |                                                                  |              |  |
    +-  realStartActivityLocked()  &lt;--------------------------------------------------+  |
        |                                                              |                 |
        + call: ActivityThread::scheduleLaunchActivity()  -----------------------+       |
                                                                       |         |       |
                                                                       |         |       |
Process         &lt;- android.os                                          |         |       |
    |                                                                  |         |       |
    +- start()   &lt;-----------------------------------------------------+         |       |
        |                                                                        |       |
        +- startViaZygote()                                                      |       |
            |                                                                    |       |
            +-  zygoteSendArgsAndGetResult() &lt;---+                               |       |
                                                 |                               |       |
                                                 |                               |       |
ActivityThread                                   |                               |       |
    |                   Socket, Unix domain TCP  |                               |       |
    +- main()     &lt;------------------------------+                               |       |
    |   |                                                                        |       |
    |   +- attach()                                                              |       |
    |       |                                                                    |       |
    |       +- ActivityManagerNative.getDefault().attachApplication()            |       |
    |           |                                                                |       |
    |           ...  a lot of call stacks                                        |       |
    |               |                                                            |       |
    |               + ActivityManagerService::attachApplication() ---------------|-------+
    |                                                                            |
    +- scheduleLaunchActivity()   &lt;--------------------------------------------- +
    |   |
    |   +- queueOrSendMessage(H.LAUNCH_ACTIVITY, r);
    |
    +- -H -&gt; Handler
    |           |
    |           + handleMessage() --------+
    |                                     |
    +- handleLaunchActivity()  &lt;----------+
        |
        +- performLaunchActivity()
            |
            +- mInstrumentation.newActivity()
            +- mInstrumentation.callActivityOnCreate()

&lt;/code&gt;
&lt;/pre&gt;

&lt;h3&gt;Finally&lt;/h3&gt;

&lt;p&gt;When we call &lt;code&gt;startActivity()&lt;/code&gt;, &lt;code&gt;ActivityManagerProxy&lt;/code&gt; will communicate with &lt;code&gt;Zyogte&lt;/code&gt; by Unix domain TCP.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Zyogte&lt;/code&gt; will invoke &lt;code&gt;ActivityThread&lt;/code&gt; to process the request.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Nginx proxy_pass: examples for how does nginx proxy_pass map the request</title>
      <link>http://liaohuqiu.net/posts/nginx-proxy-pass/</link>
      <pubDate>Mon, 16 Sep 2013 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/posts/nginx-proxy-pass</guid>
      <description>&lt;h3&gt;1. about&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The &lt;code&gt;proxy_pass&lt;/code&gt; directive sets the address of the proxied server and the URI to which location will be mapped. &lt;/p&gt;

&lt;p&gt;Here are some examples to show how the request URI will be mapped.&lt;/p&gt;

&lt;p&gt;The version of nginx:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;nginx version: nginx/1.4.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The server config:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;#server config
server {
    listen        80;
    server_name   test.com;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;2. location without regular expression&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;If the &lt;code&gt;proxy_pass&lt;/code&gt; directive is specified without a URI,&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;location /app/ {
    proxy_pass      http://192.168.154.102;
}

test.com/app/xxxxx =&amp;gt;  http://192.168.154.102/xxxxx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If the &lt;code&gt;proxy_pass&lt;/code&gt; directive is specified with a URI:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;location /app/ {
    proxy_pass      http://192.168.154.102/maped_dir/;
}

test.com/app/xxxxx =&amp;gt;  http://192.168.154.102/maped_dir/xxxxx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Forward the requested Host header&lt;/p&gt;

&lt;p&gt;By default, the Host header from the request is not forwarded, but is set based on the proxy_pass statement. To forward the requested Host header, it is necessary to use:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;proxy_set_header Host $host;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;3. location with regular expression&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;If the location is given by regular expression, can not be a URI part in &lt;code&gt;proxy_pass&lt;/code&gt; directive,  unless there are variables in the directive.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;location  ~ ^/app/(.*)$ {
    #proxy_pass   http://127.0.0.1/some_dir;    #error
    proxy_pass   http://127.0.0.1/some_dir/$1r;    #ok
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;variables in &lt;code&gt;proxy_pass&lt;/code&gt; directive:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;location ~ ^/app/(.*)$ {
    proxy_pass       http://192.169.154.102:$1;
}

test.com/app/8081 =&amp;gt; http://192.168.154.102:8081
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;location ~ ^/app/(.*)$ {
    proxy_pass       http://192.169.154.102:9999/some_dir/$1;
}

test.com/app/request/xxxxx =&amp;gt; http://192.168.154.102:9999/some_dir/xxxxx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;with a rewrite directive in the location:&lt;/p&gt;

&lt;p&gt;If the rewrite rule is hit, the URI specified in the directive is ignored and the full changed request URI is passed to the server:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;location  /app/ {
    rewrite    ^/app/hit/(.*)$ /hit_page.php?path=$1 break;
    proxy_pass   http://192.168.154.102:9999/some_dir/;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;/app/hit/some/request/?name=xxxxx&lt;/p&gt;

&lt;p&gt;=&amp;gt;  &lt;a href=&quot;http://192.168.154.102:9999/hit_page.php?path=some/request/&amp;amp;name=xxxxx&quot;&gt;http://192.168.154.102:9999/hit_page.php?path=some/request/&amp;amp;name=xxxxx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;/app/not_hit/some/request/?name=xxxxx  &lt;/p&gt;

&lt;p&gt;=&amp;gt; &lt;a href=&quot;http://192.168.154.102:9999/some_dir/not_hit/some/request/?name=xxxxx&quot;&gt;http://192.168.154.102:9999/some_dir/not_hit/some/request/?name=xxxxx&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass&quot;&gt;&lt;code&gt;proxy_pass&lt;/code&gt; in nginx wiki&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>青春不朽，前行无悔</title>
      <link>http://liaohuqiu.net/cn/posts/baia/</link>
      <pubDate>Wed, 11 Sep 2013 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/baia</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;两年多后，我离开阿里巴巴，去了美国。看之前天真言语，唏嘘。&lt;/p&gt;

&lt;p&gt;2016 年 10 月 28 日。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;一周的百阿之旅匆匆结束；一周前我们匆匆来；一周后我们匆匆去。&lt;/p&gt;

&lt;p&gt;重新回到工作岗位，微信群渐渐了无声息，一切重归平静，好像过去的一周什么事情都没发生过。&lt;/p&gt;

&lt;p&gt;好像现实在疯狂吞噬那些梦想，我们都在路上，多么匆忙！&lt;/p&gt;

&lt;p&gt;到我们这个年纪，多少经历了一些事情，世事的打磨，也许会让我们慢慢将自己的包裹，慢慢在我们的心周围掘起一道他人无法逾越的沟渠。&lt;/p&gt;

&lt;p&gt;渐渐冰冷，渐渐漠不关心。&lt;/p&gt;

&lt;p&gt;但是：活着，总该去相信。相信这世上还有正义，还有理想，还有善良；相信这世上还有温暖，还有坚持，还有希望；正如我们少年热血沸腾时相信的那样。&lt;/p&gt;

&lt;p&gt;是的，要永远年轻，永远热泪盈眶。因为我周围的你们，因为我们周围的同事，因为我们周围正直勇敢优秀的人。&lt;/p&gt;

&lt;p&gt;在哪里，做什么，其实都不重要，重要的是和谁在一起，与谁共事。更何况我们现在在阿里巴巴，正在做着伟大的事情。&lt;/p&gt;

&lt;p&gt;优秀正直的人，在哪里都显得不太一样，直到他们到了阿里巴巴。前方长路漫漫，不如我们结伴同行。一路上，定会有不期而遇的温暖，和生生不息的希望。&lt;/p&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;过去14年，阿里前辈披星戴月风雨兼程，创造了阿里巴巴这个伟大的公司。阿里巴巴引领着中国电子商务的潮流，改变了无数人的生活方式，带动着这个时代的步伐。非常荣幸，能够参与到这样的一个伟大的事业，“回首往事时，不因碌碌无为而羞耻，不因荒度年华而悔恨。”&lt;/p&gt;

&lt;p&gt;经济社会，物欲横流，这看似一个梦想贫瘠的年代。世间有多少人，年少时渴望成为英雄，最终却成了烟火红尘中平凡的人。有多少人，过着日复一日的无望的生活，当生活看不到希望，活着仅仅是为了活着。梦想已经成了一种奢侈品。而阿里巴巴像一艘大船，承载了无数的人的梦想。我们有幸成为阿里巴巴的一份子，肩负着百年重任：让理想照进现实；让有梦想的人不会孤单；让有梦想人不会气馁，更有向前和坚持的勇气。&lt;/p&gt;

&lt;p&gt;在阿里巴巴，历经世事还保持正直和善良的我们看起来不会很奇怪，我们可以挥洒我们满腔的热血，行走江湖，快意恩仇。&lt;/p&gt;

&lt;p&gt;阿里前辈，为阿里巴巴的百年基业，打下了牢固的基础；而现在，就由我们来为阿里巴巴添砖加瓦。&lt;/p&gt;

&lt;p&gt;何其幸运！&lt;/p&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;回顾一周，对于公司的价值观使命愿景无需赘述，令人感动，振奋，折服的鲜活例子数不胜数。期间种种场景，同学们的表情，现在仍历历在目。&lt;/p&gt;

&lt;p&gt;行程有期，最终我们回到了工作岗位。短短一周，离别的场景，物是人非的感觉往往能够引起我们的感慨和共鸣。在过去七天，我们也许还留有遗憾；在过去的岁月中，我们也许还有许多未竟的心愿。回忆中的事物，总是特别的深刻，华丽或者苦涩。是的，回忆可以珍藏，可以回味，但是不可沉迷，因为没有人可以回到过去，重新来过。但是谁都可以，从现在开始，书写一个全然不同的结局。&lt;/p&gt;

&lt;p&gt;好吧，那就让我们铭记大家今日的模样，然后让时光飞驰，再过5年，再过10年，再过20年！看那时的阿里巴巴，看那时的我们，回首这些为了理想而燃烧的青春，我们可以大声地喊出：青春不朽，前行无悔。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Setup PPTP</title>
      <link>http://liaohuqiu.net/posts/setup-pptp/</link>
      <pubDate>Tue, 10 Sep 2013 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/posts/setup-pptp</guid>
      <description>&lt;p&gt;After a lot of tries, I set up a vpn server on my linode via which I can cross the fucking &lt;code&gt;GFW&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Here is a shell script. It is too late tonight, I will reorganize this post in the other day.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;yum install ppp

wget http://poptop.sourceforge.net/yum/stable/packages/pptpd-1.3.4-2.el6.x86_64.rpm
rpm -ihv pptpd-1.3.4-2.el6.x86_64.rpm
rm -rf *.rpm

rm -rf /etc/pptpd.conf
rm -rf /etc/ppp
mkdir -p /etc/ppp

echo &amp;quot;option /etc/ppp/options.pptpd&amp;quot; &amp;gt;&amp;gt; /etc/pptpd.conf
echo &amp;quot;localip 10.0.0.1&amp;quot; &amp;gt;&amp;gt; /etc/pptpd.conf
echo &amp;quot;remoteip 10.0.0.10-100&amp;quot; &amp;gt;&amp;gt; /etc/pptpd.conf

echo &amp;quot;ms-dns 8.8.8.8&amp;quot; &amp;gt;&amp;gt; /etc/ppp/options.pptpd
echo &amp;quot;ms-dns 8.8.4.4&amp;quot; &amp;gt;&amp;gt; /etc/ppp/options.pptpd

pass=`openssl rand 6 -base64`
if [ &amp;quot;$1&amp;quot; != &amp;quot;&amp;quot; ]
then pass=$1
fi
echo &amp;quot;vpn pptpd ${pass} *&amp;quot; &amp;gt;&amp;gt; /etc/ppp/chap-secrets

function config_iptables()
{
    # Reset/Flush iptables
    iptables -F
    iptables -X
    iptables -t nat -F
    iptables -t nat -X
    iptables -t mangle -F
    iptables -t mangle -X
    iptables -P INPUT ACCEPT
    iptables -P FORWARD ACCEPT
    iptables -P OUTPUT ACCEPT
    # Flush end

    iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT

    iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE


    iptables -A INPUT -i eth0 -p tcp --dport 1723 -j ACCEPT
    iptables -A INPUT -i eth0 -p gre -j ACCEPT

    # Allow localhost traffic
    iptables -A INPUT -i lo   -m state --state NEW  -j ACCEPT
    iptables -A OUTPUT -o lo   -m state --state NEW  -j ACCEPT

    # Allow server and internal network to go anyway
    iptables -A INPUT  -s 10.0.0.0/24   -m state --state NEW  -j ACCEPT
    iptables -A INPUT  -s 199.101.100.10   -m state --state NEW  -j ACCEPT
    iptables -A OUTPUT  -m state --state NEW  -j ACCEPT

    # Allow ssh
    iptables -A INPUT -p tcp --dport ssh -j ACCEPT

    service iptables save
    service iptables restart
}

chkconfig pptpd on
service pptpd start

ip=`/sbin/ifconfig eth0 | grep &amp;#39;inet addr:&amp;#39; | cut -d: -f2 | awk &amp;#39;{ print $1}&amp;#39;`
echo &amp;quot;====================================&amp;quot;
echo &amp;quot; VPN INSTALLATION COMPLETE&amp;quot;
echo &amp;quot;====================================&amp;quot;
echo &amp;quot; &amp;quot;
echo &amp;quot;VPN hostname/ip: ${ip}&amp;quot;
echo &amp;quot;VPN type: PPTP&amp;quot;
echo &amp;quot;VPN username: vpn&amp;quot;
echo &amp;quot;VPN password: ${pass}&amp;quot;
echo &amp;quot; &amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Some reference:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.photonvps.com/billing/knowledgebase.php?action=displayarticle&amp;amp;id=58&quot;&gt;http://www.photonvps.com/billing/knowledgebase.php?action=displayarticle&amp;amp;id=58&lt;/a&gt;
&lt;a href=&quot;http://serverfault.com/questions/466030/pptp-iptables-routing-issue&quot;&gt;http://serverfault.com/questions/466030/pptp-iptables-routing-issue&lt;/a&gt;
&lt;a href=&quot;http://safesrv.net/setup-pptp-and-freeradius-on-centos-5/&quot;&gt;http://safesrv.net/setup-pptp-and-freeradius-on-centos-5/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;TODO: iptables&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>batch process file name</title>
      <link>http://liaohuqiu.net/posts/batch-process-file-name/</link>
      <pubDate>Tue, 27 Aug 2013 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/posts/batch-process-file-name</guid>
      <description>&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;find . -type f |sed &amp;#39;s/\(.*\)\.html/svn mv &amp;quot;\1.html&amp;quot; &amp;quot;\1.php&amp;quot;/&amp;#39; |sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;the command pass to shell by pipe is:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;svn mv &amp;quot;./cp_m/list/search_content.html&amp;quot; &amp;quot;./cp_m/list/search_content.php&amp;quot;
svn mv &amp;quot;./cp_m/list/search_list.html&amp;quot; &amp;quot;./cp_m/list/search_list.php&amp;quot;
svn mv &amp;quot;./cp_m/list/list_item.html&amp;quot; &amp;quot;./cp_m/list/list_item.php&amp;quot;
svn mv &amp;quot;./cp_m/base/tail.html&amp;quot; &amp;quot;./cp_m/base/tail.php&amp;quot;
svn mv &amp;quot;./cp_m/base/head.html&amp;quot; &amp;quot;./cp_m/base/head.php&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>阿里花名：如何起花名</title>
      <link>http://liaohuqiu.net/cn/posts/pick-an-alibaba-name/</link>
      <pubDate>Sun, 18 Aug 2013 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/pick-an-alibaba-name</guid>
      <description>&lt;p&gt;在中国三大互联网巨头BAT中，阿里的文化最具魅力。&lt;/p&gt;

&lt;p&gt;阿里有三大人文文化：&lt;code&gt;武侠&lt;/code&gt;，&lt;code&gt;倒立&lt;/code&gt;，&lt;code&gt;店小二&lt;/code&gt;。作为武侠文化的一部分，每个阿里人都有自己的花名。&lt;/p&gt;

&lt;p&gt;花名不是随便起的，花名是行走江湖的名号。一般要求花名为2个汉字，要有武侠风情，示意积极向上。&lt;/p&gt;

&lt;p&gt;随着阿里集团的壮大，越来越多的人加入，并且阿里会为离开的员工保留花名。所以对新入职的同事来说，起一个好的花名越来越难。&lt;/p&gt;

&lt;p&gt;当时我想了好些天也没有想到满意的名字。最后，写了一个程序，把3000多个常用汉字随机组合，从中挑让我感到眼前一亮的。&lt;/p&gt;

&lt;p&gt;我个人觉得这个方法挺有效的，希望能对大家有帮助。&lt;/p&gt;

&lt;p&gt;祝愿你即将开始的阿里生活 精彩，顺利。&lt;/p&gt;

&lt;p&gt;对了，我是 &lt;code&gt;无朽&lt;/code&gt;，我们阿里见。&lt;/p&gt;

&lt;hr&gt;

&lt;div class=&quot;row&quot;&gt;
    &lt;div id=&#39;input-box&#39; class=&quot;span3&quot;&gt;
        &lt;textarea id=&#39;input_words&#39; rows=&quot;3&quot; placeholder=&#39;包含特定的字，可以为一个或者多个，留空则全部随机&#39;&gt;&lt;/textarea&gt;
    &lt;/div&gt;

    &lt;div id=&#39;input&#39; class=&quot;form-inline span4&quot;&gt;
        &lt;label class=&quot;radio&quot;&gt;
        &lt;input type=&quot;radio&quot; name=&quot;optionsRadios&quot; id=&quot;optionsRadios1&quot; checked=true value=&quot;1&quot;&gt;在前&lt;/label&gt;
        &lt;label class=&quot;radio&quot;&gt;
        &lt;input type=&quot;radio&quot; name=&quot;optionsRadios&quot; id=&quot;optionsRadios2&quot; value=&quot;2&quot;&gt;在后&lt;/label&gt;
        &lt;button type=&quot;submit&quot; class=&quot;btn&quot; id=&#39;j_id_gen_list&#39;&gt;试试手气&lt;/button&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/p&gt;

&lt;div id=&#39;result&#39;&gt;
    &lt;pre&gt;&lt;code&gt;路人甲
路人乙&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Install LAMP enviroment on a minimum CentOS</title>
      <link>http://liaohuqiu.net/posts/install-lamp-on-minimum-centos/</link>
      <pubDate>Thu, 15 Aug 2013 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/posts/install-lamp-on-minimum-centos</guid>
      <description>&lt;p&gt;I install my system in a virtual machine (Vamre workstation 7), the version I install is CentOS 6.4 64bit.&lt;/p&gt;

&lt;p&gt;After the mininum intallation, there is no network, neither the basic software below:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;vim
wget
unzip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;set up network&lt;/h3&gt;

&lt;p&gt;We should setup network first:&lt;/p&gt;

&lt;p&gt;The system connect to the host by NAT network. I will use a static IP address: &lt;code&gt;192.168.154.101&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;vi /etc/sysconfig/network-scripts/ifcfg-eth0 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You will see the config like below:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;DEVICE=eth0
HWADDR=00:0C:29:C2:A9:5D
TYPE=Ethernet
UUID=c652bfb6-a4fd-422c-98b8-a5a42905b971
ONBOOT=no
NM_CONTROLLED=yes
BOOTPROTO=dhcp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You should change the config accroding to your situaion. I use the config blow:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;DEVICE=eth0
HWADDR=00:0C:29:C2:A9:5D
TYPE=Ethernet
UUID=c652bfb6-a4fd-422c-98b8-a5a42905b971
#ONBOOT=no
#NM_CONTROLLED=yes
#BOOTPROTO=dhcp

ONBOOT=yes
NM_CONTROLLED=no
BOOTPROTO=static

IPADDR=192.168.154.101
GATEWAY=192.168.154.2
NETMASK=255.255.255.0
DNS1=192.168.154.2
PEERDNS=yes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;More information about the network config you can &lt;a href=&quot;http://www.centos.org/docs/4/html/rhel-rg-en-4/s1-networkscripts-interfaces.html&quot;&gt;turn to here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After you change the config, bring up the &lt;code&gt;Ethernet Interface&lt;/code&gt;, &lt;code&gt;eth0&lt;/code&gt; for example, which You modified the config just now.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;ifup eth0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then restart the network service:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;service network restart.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;OK, the network is set up by far. You can test it by:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;ping google.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;setup&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;// to be continued
https://raw.github.com/liaohuqiu/centos_setup/master/setup.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Install jekyll on CentOS</title>
      <link>http://liaohuqiu.net/posts/install-jekyll/</link>
      <pubDate>Thu, 08 Aug 2013 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/posts/install-jekyll</guid>
      <description>&lt;h3&gt;Installation script in github&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/liaohuqiu/centos_setup&quot; title=&quot;centos setup&quot;&gt;centos setup in Github&lt;/a&gt;, it contains some intallation scripts, inlcuding jekyll,  you can use the installation script to install.&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Manually&lt;/h3&gt;

&lt;p&gt;First you need Ruby &amp;amp; RubyGems&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
sudo yum install -y ruby ruby-devel rubygems
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Then install jekyll via gem&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
sudo gem install jekyll
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You will need rdiscount to parse markdown format file&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo gem install rdiscount&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now, the &lt;code&gt;jekyll&lt;/code&gt; enviroment has been installed successfully;&lt;/p&gt;

&lt;p&gt;You can entry the site directory, start up the site&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;cd .../site_diretory

jekyll server --watch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Jekyll will server at port: 4000.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Yet another summer rain.</title>
      <link>http://liaohuqiu.net/posts/yet-another-summer-rain/</link>
      <pubDate>Wed, 07 Aug 2013 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/posts/yet-another-summer-rain</guid>
      <description>&lt;p&gt;对于那些为了理想而燃烧的青春，我们从来不多说什么。&lt;/p&gt;

&lt;p&gt;七月初一，立秋。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Yet another summer rain.</title>
      <link>http://liaohuqiu.net/cn/posts/yet-another-summer-rain/</link>
      <pubDate>Wed, 07 Aug 2013 00:00:00 +0000</pubDate>
      <author>srain@php.net (Huqiu Liao / Srain)</author>
      <guid>http://liaohuqiu.net/cn/posts/yet-another-summer-rain</guid>
      <description>&lt;p&gt;对于那些为了理想而燃烧的青春，我们从来不多说什么。&lt;/p&gt;

&lt;p&gt;七月初一，立秋。&lt;/p&gt;
</description>
    </item>
    

  </channel> 
</rss>
